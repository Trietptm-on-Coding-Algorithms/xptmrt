#include <WinDef.h>

#pragma comment(linker, "/export:AcquireSRWLockExclusive=kernel32.AcquireSRWLockExclusive")
#pragma comment(linker, "/export:AcquireSRWLockShared=kernel32.AcquireSRWLockShared")
#pragma comment(linker, "/export:ActivateActCtx=kernel32.ActivateActCtx") // XP
#pragma comment(linker, "/export:ActivateActCtxWorker=kernel32.ActivateActCtxWorker")
#pragma comment(linker, "/export:AddAtomA=kernel32.AddAtomA") // XP
#pragma comment(linker, "/export:AddAtomW=kernel32.AddAtomW") // XP
#pragma comment(linker, "/export:AddConsoleAliasA=kernel32.AddConsoleAliasA") // XP
#pragma comment(linker, "/export:AddConsoleAliasW=kernel32.AddConsoleAliasW") // XP
#pragma comment(linker, "/export:AddDllDirectory=kernel32.AddDllDirectory")
#pragma comment(linker, "/export:AddIntegrityLabelToBoundaryDescriptor=kernel32.AddIntegrityLabelToBoundaryDescriptor")
#pragma comment(linker, "/export:AddLocalAlternateComputerNameA=kernel32.AddLocalAlternateComputerNameA") // XP
#pragma comment(linker, "/export:AddLocalAlternateComputerNameW=kernel32.AddLocalAlternateComputerNameW") // XP
#pragma comment(linker, "/export:AddRefActCtx=kernel32.AddRefActCtx") // XP
#pragma comment(linker, "/export:AddRefActCtxWorker=kernel32.AddRefActCtxWorker")
#pragma comment(linker, "/export:AddResourceAttributeAce=kernel32.AddResourceAttributeAce")
#pragma comment(linker, "/export:AddSIDToBoundaryDescriptor=kernel32.AddSIDToBoundaryDescriptor")
#pragma comment(linker, "/export:AddScopedPolicyIDAce=kernel32.AddScopedPolicyIDAce")
#pragma comment(linker, "/export:AddSecureMemoryCacheCallback=kernel32.AddSecureMemoryCacheCallback")
#pragma comment(linker, "/export:AddVectoredContinueHandler=kernel32.AddVectoredContinueHandler")
#pragma comment(linker, "/export:AddVectoredExceptionHandler=kernel32.AddVectoredExceptionHandler") // XP
#pragma comment(linker, "/export:AdjustCalendarDate=kernel32.AdjustCalendarDate")
#pragma comment(linker, "/export:AllocConsole=kernel32.AllocConsole") // XP
#pragma comment(linker, "/export:AllocateUserPhysicalPages=kernel32.AllocateUserPhysicalPages") // XP
#pragma comment(linker, "/export:AllocateUserPhysicalPagesNuma=kernel32.AllocateUserPhysicalPagesNuma")
#pragma comment(linker, "/export:AppPolicyGetClrCompat=kernel32.AppPolicyGetClrCompat")
#pragma comment(linker, "/export:AppPolicyGetCreateFileAccess=kernel32.AppPolicyGetCreateFileAccess")
#pragma comment(linker, "/export:AppPolicyGetLifecycleManagement=kernel32.AppPolicyGetLifecycleManagement")
#pragma comment(linker, "/export:AppPolicyGetMediaFoundationCodecLoading=kernel32.AppPolicyGetMediaFoundationCodecLoading")
#pragma comment(linker, "/export:AppPolicyGetProcessTerminationMethod=kernel32.AppPolicyGetProcessTerminationMethod")
#pragma comment(linker, "/export:AppPolicyGetShowDeveloperDiagnostic=kernel32.AppPolicyGetShowDeveloperDiagnostic")
#pragma comment(linker, "/export:AppPolicyGetThreadInitializationType=kernel32.AppPolicyGetThreadInitializationType")
#pragma comment(linker, "/export:AppPolicyGetWindowingModel=kernel32.AppPolicyGetWindowingModel")
#pragma comment(linker, "/export:AppXGetOSMaxVersionTested=kernel32.AppXGetOSMaxVersionTested")
#pragma comment(linker, "/export:ApplicationRecoveryFinished=kernel32.ApplicationRecoveryFinished")
#pragma comment(linker, "/export:ApplicationRecoveryInProgress=kernel32.ApplicationRecoveryInProgress")
#pragma comment(linker, "/export:AreFileApisANSI=kernel32.AreFileApisANSI") // XP
#pragma comment(linker, "/export:AssignProcessToJobObject=kernel32.AssignProcessToJobObject") // XP
#pragma comment(linker, "/export:AttachConsole=kernel32.AttachConsole") // XP
#pragma comment(linker, "/export:BackupRead=kernel32.BackupRead") // XP
#pragma comment(linker, "/export:BackupSeek=kernel32.BackupSeek") // XP
#pragma comment(linker, "/export:BackupWrite=kernel32.BackupWrite") // XP
#pragma comment(linker, "/export:BaseCheckAppcompatCache=kernel32.BaseCheckAppcompatCache") // XP
#pragma comment(linker, "/export:BaseCheckAppcompatCacheEx=kernel32.BaseCheckAppcompatCacheEx")
#pragma comment(linker, "/export:BaseCheckAppcompatCacheExWorker=kernel32.BaseCheckAppcompatCacheExWorker")
#pragma comment(linker, "/export:BaseCheckAppcompatCacheWorker=kernel32.BaseCheckAppcompatCacheWorker")
#pragma comment(linker, "/export:BaseCheckElevation=kernel32.BaseCheckElevation")
#pragma comment(linker, "/export:BaseCleanupAppcompatCacheSupport=kernel32.BaseCleanupAppcompatCacheSupport") // XP
#pragma comment(linker, "/export:BaseCleanupAppcompatCacheSupportWorker=kernel32.BaseCleanupAppcompatCacheSupportWorker")
#pragma comment(linker, "/export:BaseDestroyVDMEnvironment=kernel32.BaseDestroyVDMEnvironment")
#pragma comment(linker, "/export:BaseDllReadWriteIniFile=kernel32.BaseDllReadWriteIniFile")
#pragma comment(linker, "/export:BaseDumpAppcompatCache=kernel32.BaseDumpAppcompatCache") // XP
#pragma comment(linker, "/export:BaseDumpAppcompatCacheWorker=kernel32.BaseDumpAppcompatCacheWorker")
#pragma comment(linker, "/export:BaseElevationPostProcessing=kernel32.BaseElevationPostProcessing")
#pragma comment(linker, "/export:BaseFlushAppcompatCache=kernel32.BaseFlushAppcompatCache") // XP
#pragma comment(linker, "/export:BaseFlushAppcompatCacheWorker=kernel32.BaseFlushAppcompatCacheWorker")
#pragma comment(linker, "/export:BaseFormatObjectAttributes=kernel32.BaseFormatObjectAttributes")
#pragma comment(linker, "/export:BaseFormatTimeOut=kernel32.BaseFormatTimeOut")
#pragma comment(linker, "/export:BaseFreeAppCompatDataForProcessWorker=kernel32.BaseFreeAppCompatDataForProcessWorker")
#pragma comment(linker, "/export:BaseGenerateAppCompatData=kernel32.BaseGenerateAppCompatData")
#pragma comment(linker, "/export:BaseGetNamedObjectDirectory=kernel32.BaseGetNamedObjectDirectory")
#pragma comment(linker, "/export:BaseInitAppcompatCacheSupport=kernel32.BaseInitAppcompatCacheSupport") // XP
#pragma comment(linker, "/export:BaseInitAppcompatCacheSupportWorker=kernel32.BaseInitAppcompatCacheSupportWorker")
#pragma comment(linker, "/export:BaseIsAppcompatInfrastructureDisabled=kernel32.BaseIsAppcompatInfrastructureDisabled")
#pragma comment(linker, "/export:BaseIsAppcompatInfrastructureDisabledWorker=kernel32.BaseIsAppcompatInfrastructureDisabledWorker")
#pragma comment(linker, "/export:BaseIsDosApplication=kernel32.BaseIsDosApplication")
#pragma comment(linker, "/export:BaseQueryModuleData=kernel32.BaseQueryModuleData") // XP
#pragma comment(linker, "/export:BaseReadAppCompatDataForProcessWorker=kernel32.BaseReadAppCompatDataForProcessWorker")
#pragma comment(linker, "/export:BaseSetLastNTError=kernel32.BaseSetLastNTError")
#pragma comment(linker, "/export:BaseThreadInitThunk=kernel32.BaseThreadInitThunk")
#pragma comment(linker, "/export:BaseUpdateAppcompatCache=kernel32.BaseUpdateAppcompatCache") // XP
#pragma comment(linker, "/export:BaseUpdateAppcompatCacheWorker=kernel32.BaseUpdateAppcompatCacheWorker")
#pragma comment(linker, "/export:BaseUpdateVDMEntry=kernel32.BaseUpdateVDMEntry")
#pragma comment(linker, "/export:BaseVerifyUnicodeString=kernel32.BaseVerifyUnicodeString")
#pragma comment(linker, "/export:BaseWriteErrorElevationRequiredEvent=kernel32.BaseWriteErrorElevationRequiredEvent")
#pragma comment(linker, "/export:Basep8BitStringToDynamicUnicodeString=kernel32.Basep8BitStringToDynamicUnicodeString")
#pragma comment(linker, "/export:BasepAllocateActivationContextActivationBlock=kernel32.BasepAllocateActivationContextActivationBlock")
#pragma comment(linker, "/export:BasepAnsiStringToDynamicUnicodeString=kernel32.BasepAnsiStringToDynamicUnicodeString")
#pragma comment(linker, "/export:BasepAppContainerEnvironmentExtension=kernel32.BasepAppContainerEnvironmentExtension")
#pragma comment(linker, "/export:BasepAppXExtension=kernel32.BasepAppXExtension")
#pragma comment(linker, "/export:BasepCheckAppCompat=kernel32.BasepCheckAppCompat")
#pragma comment(linker, "/export:BasepCheckWebBladeHashes=kernel32.BasepCheckWebBladeHashes")
#pragma comment(linker, "/export:BasepCheckWinSaferRestrictions=kernel32.BasepCheckWinSaferRestrictions") // XP
#pragma comment(linker, "/export:BasepConstructSxsCreateProcessMessage=kernel32.BasepConstructSxsCreateProcessMessage")
#pragma comment(linker, "/export:BasepCopyEncryption=kernel32.BasepCopyEncryption")
#pragma comment(linker, "/export:BasepFreeActivationContextActivationBlock=kernel32.BasepFreeActivationContextActivationBlock")
#pragma comment(linker, "/export:BasepFreeAppCompatData=kernel32.BasepFreeAppCompatData")
#pragma comment(linker, "/export:BasepGetAppCompatData=kernel32.BasepGetAppCompatData")
#pragma comment(linker, "/export:BasepGetComputerNameFromNtPath=kernel32.BasepGetComputerNameFromNtPath")
#pragma comment(linker, "/export:BasepGetExeArchType=kernel32.BasepGetExeArchType")
#pragma comment(linker, "/export:BasepIsProcessAllowed=kernel32.BasepIsProcessAllowed")
#pragma comment(linker, "/export:BasepMapModuleHandle=kernel32.BasepMapModuleHandle")
#pragma comment(linker, "/export:BasepNotifyLoadStringResource=kernel32.BasepNotifyLoadStringResource")
#pragma comment(linker, "/export:BasepPostSuccessAppXExtension=kernel32.BasepPostSuccessAppXExtension")
#pragma comment(linker, "/export:BasepProcessInvalidImage=kernel32.BasepProcessInvalidImage")
#pragma comment(linker, "/export:BasepQueryAppCompat=kernel32.BasepQueryAppCompat")
#pragma comment(linker, "/export:BasepReleaseAppXContext=kernel32.BasepReleaseAppXContext")
#pragma comment(linker, "/export:BasepReleaseSxsCreateProcessUtilityStruct=kernel32.BasepReleaseSxsCreateProcessUtilityStruct")
#pragma comment(linker, "/export:BasepReportFault=kernel32.BasepReportFault")
#pragma comment(linker, "/export:BasepSetFileEncryptionCompression=kernel32.BasepSetFileEncryptionCompression")
#pragma comment(linker, "/export:Beep=kernel32.Beep") // XP
#pragma comment(linker, "/export:BeginUpdateResourceA=kernel32.BeginUpdateResourceA") // XP
#pragma comment(linker, "/export:BeginUpdateResourceW=kernel32.BeginUpdateResourceW") // XP
#pragma comment(linker, "/export:BindIoCompletionCallback=kernel32.BindIoCompletionCallback") // XP
#pragma comment(linker, "/export:BuildCommDCBA=kernel32.BuildCommDCBA") // XP
#pragma comment(linker, "/export:BuildCommDCBAndTimeoutsA=kernel32.BuildCommDCBAndTimeoutsA") // XP
#pragma comment(linker, "/export:BuildCommDCBAndTimeoutsW=kernel32.BuildCommDCBAndTimeoutsW") // XP
#pragma comment(linker, "/export:BuildCommDCBW=kernel32.BuildCommDCBW") // XP
#pragma comment(linker, "/export:CallNamedPipeA=kernel32.CallNamedPipeA") // XP
#pragma comment(linker, "/export:CallNamedPipeW=kernel32.CallNamedPipeW") // XP
#pragma comment(linker, "/export:CallbackMayRunLong=kernel32.CallbackMayRunLong")
#pragma comment(linker, "/export:CancelDeviceWakeupRequest=kernel32.CancelDeviceWakeupRequest") // XP
#pragma comment(linker, "/export:CancelIo=kernel32.CancelIo") // XP
#pragma comment(linker, "/export:CancelIoEx=kernel32.CancelIoEx")
#pragma comment(linker, "/export:CancelSynchronousIo=kernel32.CancelSynchronousIo")
#pragma comment(linker, "/export:CancelThreadpoolIo=kernel32.CancelThreadpoolIo")
#pragma comment(linker, "/export:CancelTimerQueueTimer=kernel32.CancelTimerQueueTimer") // XP
#pragma comment(linker, "/export:CancelWaitableTimer=kernel32.CancelWaitableTimer") // XP
#pragma comment(linker, "/export:CeipIsOptedIn=kernel32.CeipIsOptedIn")
#pragma comment(linker, "/export:ChangeTimerQueueTimer=kernel32.ChangeTimerQueueTimer") // XP
#pragma comment(linker, "/export:CheckAllowDecryptedRemoteDestinationPolicy=kernel32.CheckAllowDecryptedRemoteDestinationPolicy")
#pragma comment(linker, "/export:CheckElevation=kernel32.CheckElevation")
#pragma comment(linker, "/export:CheckElevationEnabled=kernel32.CheckElevationEnabled")
#pragma comment(linker, "/export:CheckForReadOnlyResource=kernel32.CheckForReadOnlyResource")
#pragma comment(linker, "/export:CheckForReadOnlyResourceFilter=kernel32.CheckForReadOnlyResourceFilter")
#pragma comment(linker, "/export:CheckNameLegalDOS8Dot3A=kernel32.CheckNameLegalDOS8Dot3A") // XP
#pragma comment(linker, "/export:CheckNameLegalDOS8Dot3W=kernel32.CheckNameLegalDOS8Dot3W") // XP
#pragma comment(linker, "/export:CheckRemoteDebuggerPresent=kernel32.CheckRemoteDebuggerPresent") // XP
#pragma comment(linker, "/export:CheckTokenCapability=kernel32.CheckTokenCapability")
#pragma comment(linker, "/export:CheckTokenMembershipEx=kernel32.CheckTokenMembershipEx")
#pragma comment(linker, "/export:ClearCommBreak=kernel32.ClearCommBreak") // XP
#pragma comment(linker, "/export:ClearCommError=kernel32.ClearCommError") // XP
#pragma comment(linker, "/export:CloseConsoleHandle=kernel32.CloseConsoleHandle") // XP
#pragma comment(linker, "/export:CloseHandle=kernel32.CloseHandle") // XP
#pragma comment(linker, "/export:ClosePackageInfo=kernel32.ClosePackageInfo")
#pragma comment(linker, "/export:ClosePrivateNamespace=kernel32.ClosePrivateNamespace")
#pragma comment(linker, "/export:CloseProfileUserMapping=kernel32.CloseProfileUserMapping") // XP
#pragma comment(linker, "/export:CloseState=kernel32.CloseState")
#pragma comment(linker, "/export:CloseThreadpool=kernel32.CloseThreadpool")
#pragma comment(linker, "/export:CloseThreadpoolCleanupGroup=kernel32.CloseThreadpoolCleanupGroup")
#pragma comment(linker, "/export:CloseThreadpoolCleanupGroupMembers=kernel32.CloseThreadpoolCleanupGroupMembers")
#pragma comment(linker, "/export:CloseThreadpoolIo=kernel32.CloseThreadpoolIo")
#pragma comment(linker, "/export:CloseThreadpoolTimer=kernel32.CloseThreadpoolTimer")
#pragma comment(linker, "/export:CloseThreadpoolWait=kernel32.CloseThreadpoolWait")
#pragma comment(linker, "/export:CloseThreadpoolWork=kernel32.CloseThreadpoolWork")
#pragma comment(linker, "/export:CmdBatNotification=kernel32.CmdBatNotification") // XP
#pragma comment(linker, "/export:CommConfigDialogA=kernel32.CommConfigDialogA") // XP
#pragma comment(linker, "/export:CommConfigDialogW=kernel32.CommConfigDialogW") // XP
#pragma comment(linker, "/export:CompareCalendarDates=kernel32.CompareCalendarDates")
#pragma comment(linker, "/export:CompareFileTime=kernel32.CompareFileTime") // XP
#pragma comment(linker, "/export:CompareStringA=kernel32.CompareStringA") // XP
#pragma comment(linker, "/export:CompareStringEx=kernel32.CompareStringEx")
#pragma comment(linker, "/export:CompareStringOrdinal=kernel32.CompareStringOrdinal")
#pragma comment(linker, "/export:CompareStringW=kernel32.CompareStringW") // XP
#pragma comment(linker, "/export:ConnectNamedPipe=kernel32.ConnectNamedPipe") // XP
#pragma comment(linker, "/export:ConsoleMenuControl=kernel32.ConsoleMenuControl") // XP
#pragma comment(linker, "/export:ContinueDebugEvent=kernel32.ContinueDebugEvent") // XP
#pragma comment(linker, "/export:ConvertCalDateTimeToSystemTime=kernel32.ConvertCalDateTimeToSystemTime")
#pragma comment(linker, "/export:ConvertDefaultLocale=kernel32.ConvertDefaultLocale") // XP
#pragma comment(linker, "/export:ConvertFiberToThread=kernel32.ConvertFiberToThread") // XP
#pragma comment(linker, "/export:ConvertNLSDayOfWeekToWin32DayOfWeek=kernel32.ConvertNLSDayOfWeekToWin32DayOfWeek")
#pragma comment(linker, "/export:ConvertSystemTimeToCalDateTime=kernel32.ConvertSystemTimeToCalDateTime")
#pragma comment(linker, "/export:ConvertThreadToFiber=kernel32.ConvertThreadToFiber") // XP
#pragma comment(linker, "/export:ConvertThreadToFiberEx=kernel32.ConvertThreadToFiberEx")
#pragma comment(linker, "/export:CopyContext=kernel32.CopyContext")
#pragma comment(linker, "/export:CopyFile2=kernel32.CopyFile2")
#pragma comment(linker, "/export:CopyFileA=kernel32.CopyFileA") // XP
#pragma comment(linker, "/export:CopyFileExA=kernel32.CopyFileExA") // XP
#pragma comment(linker, "/export:CopyFileExW=kernel32.CopyFileExW") // XP
#pragma comment(linker, "/export:CopyFileTransactedA=kernel32.CopyFileTransactedA")
#pragma comment(linker, "/export:CopyFileTransactedW=kernel32.CopyFileTransactedW")
#pragma comment(linker, "/export:CopyFileW=kernel32.CopyFileW") // XP
#pragma comment(linker, "/export:CopyLZFile=kernel32.CopyLZFile") // XP
#pragma comment(linker, "/export:CreateActCtxA=kernel32.CreateActCtxA") // XP
#pragma comment(linker, "/export:CreateActCtxW=kernel32.CreateActCtxW") // XP
#pragma comment(linker, "/export:CreateActCtxWWorker=kernel32.CreateActCtxWWorker")
#pragma comment(linker, "/export:CreateBoundaryDescriptorA=kernel32.CreateBoundaryDescriptorA")
#pragma comment(linker, "/export:CreateBoundaryDescriptorW=kernel32.CreateBoundaryDescriptorW")
#pragma comment(linker, "/export:CreateConsoleScreenBuffer=kernel32.CreateConsoleScreenBuffer") // XP
#pragma comment(linker, "/export:CreateDirectoryA=kernel32.CreateDirectoryA") // XP
#pragma comment(linker, "/export:CreateDirectoryExA=kernel32.CreateDirectoryExA") // XP
#pragma comment(linker, "/export:CreateDirectoryExW=kernel32.CreateDirectoryExW") // XP
#pragma comment(linker, "/export:CreateDirectoryTransactedA=kernel32.CreateDirectoryTransactedA")
#pragma comment(linker, "/export:CreateDirectoryTransactedW=kernel32.CreateDirectoryTransactedW")
#pragma comment(linker, "/export:CreateDirectoryW=kernel32.CreateDirectoryW") // XP
#pragma comment(linker, "/export:CreateEnclave=kernel32.CreateEnclave")
#pragma comment(linker, "/export:CreateEventA=kernel32.CreateEventA") // XP
#pragma comment(linker, "/export:CreateEventExA=kernel32.CreateEventExA")
#pragma comment(linker, "/export:CreateEventExW=kernel32.CreateEventExW")
#pragma comment(linker, "/export:CreateEventW=kernel32.CreateEventW") // XP
#pragma comment(linker, "/export:CreateFiber=kernel32.CreateFiber") // XP
#pragma comment(linker, "/export:CreateFiberEx=kernel32.CreateFiberEx") // XP
#pragma comment(linker, "/export:CreateFile2=kernel32.CreateFile2")
#pragma comment(linker, "/export:CreateFileA=kernel32.CreateFileA") // XP
#pragma comment(linker, "/export:CreateFileMappingA=kernel32.CreateFileMappingA") // XP
#pragma comment(linker, "/export:CreateFileMappingFromApp=kernel32.CreateFileMappingFromApp")
#pragma comment(linker, "/export:CreateFileMappingNumaA=kernel32.CreateFileMappingNumaA")
#pragma comment(linker, "/export:CreateFileMappingNumaW=kernel32.CreateFileMappingNumaW")
#pragma comment(linker, "/export:CreateFileMappingW=kernel32.CreateFileMappingW") // XP
#pragma comment(linker, "/export:CreateFileTransactedA=kernel32.CreateFileTransactedA")
#pragma comment(linker, "/export:CreateFileTransactedW=kernel32.CreateFileTransactedW")
#pragma comment(linker, "/export:CreateFileW=kernel32.CreateFileW") // XP
#pragma comment(linker, "/export:CreateHardLinkA=kernel32.CreateHardLinkA") // XP
#pragma comment(linker, "/export:CreateHardLinkTransactedA=kernel32.CreateHardLinkTransactedA")
#pragma comment(linker, "/export:CreateHardLinkTransactedW=kernel32.CreateHardLinkTransactedW")
#pragma comment(linker, "/export:CreateHardLinkW=kernel32.CreateHardLinkW") // XP
#pragma comment(linker, "/export:CreateIoCompletionPort=kernel32.CreateIoCompletionPort") // XP
#pragma comment(linker, "/export:CreateJobObjectA=kernel32.CreateJobObjectA") // XP
#pragma comment(linker, "/export:CreateJobObjectW=kernel32.CreateJobObjectW") // XP
#pragma comment(linker, "/export:CreateJobSet=kernel32.CreateJobSet") // XP
#pragma comment(linker, "/export:CreateMailslotA=kernel32.CreateMailslotA") // XP
#pragma comment(linker, "/export:CreateMailslotW=kernel32.CreateMailslotW") // XP
#pragma comment(linker, "/export:CreateMemoryResourceNotification=kernel32.CreateMemoryResourceNotification") // XP
#pragma comment(linker, "/export:CreateMutexA=kernel32.CreateMutexA") // XP
#pragma comment(linker, "/export:CreateMutexExA=kernel32.CreateMutexExA")
#pragma comment(linker, "/export:CreateMutexExW=kernel32.CreateMutexExW")
#pragma comment(linker, "/export:CreateMutexW=kernel32.CreateMutexW") // XP
#pragma comment(linker, "/export:CreateNamedPipeA=kernel32.CreateNamedPipeA") // XP
#pragma comment(linker, "/export:CreateNamedPipeW=kernel32.CreateNamedPipeW") // XP
#pragma comment(linker, "/export:CreatePipe=kernel32.CreatePipe") // XP
#pragma comment(linker, "/export:CreatePrivateNamespaceA=kernel32.CreatePrivateNamespaceA")
#pragma comment(linker, "/export:CreatePrivateNamespaceW=kernel32.CreatePrivateNamespaceW")
#pragma comment(linker, "/export:CreateProcessA=kernel32.CreateProcessA") // XP
#pragma comment(linker, "/export:CreateProcessAsUserA=kernel32.CreateProcessAsUserA")
#pragma comment(linker, "/export:CreateProcessAsUserW=kernel32.CreateProcessAsUserW")
#pragma comment(linker, "/export:CreateProcessInternalA=kernel32.CreateProcessInternalA") // XP
#pragma comment(linker, "/export:CreateProcessInternalW=kernel32.CreateProcessInternalW") // XP
#pragma comment(linker, "/export:CreateProcessW=kernel32.CreateProcessW") // XP
#pragma comment(linker, "/export:CreateRemoteThread=kernel32.CreateRemoteThread") // XP
#pragma comment(linker, "/export:CreateRemoteThreadEx=kernel32.CreateRemoteThreadEx")
#pragma comment(linker, "/export:CreateSemaphoreA=kernel32.CreateSemaphoreA") // XP
#pragma comment(linker, "/export:CreateSemaphoreExA=kernel32.CreateSemaphoreExA")
#pragma comment(linker, "/export:CreateSemaphoreExW=kernel32.CreateSemaphoreExW")
#pragma comment(linker, "/export:CreateSemaphoreW=kernel32.CreateSemaphoreW") // XP
#pragma comment(linker, "/export:CreateSocketHandle=kernel32.CreateSocketHandle") // XP
#pragma comment(linker, "/export:CreateSymbolicLinkA=kernel32.CreateSymbolicLinkA")
#pragma comment(linker, "/export:CreateSymbolicLinkTransactedA=kernel32.CreateSymbolicLinkTransactedA")
#pragma comment(linker, "/export:CreateSymbolicLinkTransactedW=kernel32.CreateSymbolicLinkTransactedW")
#pragma comment(linker, "/export:CreateSymbolicLinkW=kernel32.CreateSymbolicLinkW")
#pragma comment(linker, "/export:CreateTapePartition=kernel32.CreateTapePartition") // XP
#pragma comment(linker, "/export:CreateThread=kernel32.CreateThread") // XP
#pragma comment(linker, "/export:CreateThreadpool=kernel32.CreateThreadpool")
#pragma comment(linker, "/export:CreateThreadpoolCleanupGroup=kernel32.CreateThreadpoolCleanupGroup")
#pragma comment(linker, "/export:CreateThreadpoolIo=kernel32.CreateThreadpoolIo")
#pragma comment(linker, "/export:CreateThreadpoolTimer=kernel32.CreateThreadpoolTimer")
#pragma comment(linker, "/export:CreateThreadpoolWait=kernel32.CreateThreadpoolWait")
#pragma comment(linker, "/export:CreateThreadpoolWork=kernel32.CreateThreadpoolWork")
#pragma comment(linker, "/export:CreateTimerQueue=kernel32.CreateTimerQueue") // XP
#pragma comment(linker, "/export:CreateTimerQueueTimer=kernel32.CreateTimerQueueTimer") // XP
#pragma comment(linker, "/export:CreateToolhelp32Snapshot=kernel32.CreateToolhelp32Snapshot") // XP
#pragma comment(linker, "/export:CreateWaitableTimerA=kernel32.CreateWaitableTimerA") // XP
#pragma comment(linker, "/export:CreateWaitableTimerExA=kernel32.CreateWaitableTimerExA")
#pragma comment(linker, "/export:CreateWaitableTimerExW=kernel32.CreateWaitableTimerExW")
#pragma comment(linker, "/export:CreateWaitableTimerW=kernel32.CreateWaitableTimerW") // XP
#pragma comment(linker, "/export:CtrlRoutine=kernel32.CtrlRoutine")
#pragma comment(linker, "/export:DeactivateActCtx=kernel32.DeactivateActCtx") // XP
#pragma comment(linker, "/export:DeactivateActCtxWorker=kernel32.DeactivateActCtxWorker")
#pragma comment(linker, "/export:DebugActiveProcess=kernel32.DebugActiveProcess") // XP
#pragma comment(linker, "/export:DebugActiveProcessStop=kernel32.DebugActiveProcessStop") // XP
#pragma comment(linker, "/export:DebugBreak=kernel32.DebugBreak") // XP
#pragma comment(linker, "/export:DebugBreakProcess=kernel32.DebugBreakProcess") // XP
#pragma comment(linker, "/export:DebugSetProcessKillOnExit=kernel32.DebugSetProcessKillOnExit") // XP
#pragma comment(linker, "/export:DecodePointer=kernel32.DecodePointer") // XP
#pragma comment(linker, "/export:DecodeSystemPointer=kernel32.DecodeSystemPointer") // XP
#pragma comment(linker, "/export:DefineDosDeviceA=kernel32.DefineDosDeviceA") // XP
#pragma comment(linker, "/export:DefineDosDeviceW=kernel32.DefineDosDeviceW") // XP
#pragma comment(linker, "/export:DelayLoadFailureHook=kernel32.DelayLoadFailureHook") // XP
#pragma comment(linker, "/export:DeleteAtom=kernel32.DeleteAtom") // XP
#pragma comment(linker, "/export:DeleteBoundaryDescriptor=kernel32.DeleteBoundaryDescriptor")
#pragma comment(linker, "/export:DeleteCriticalSection=kernel32.DeleteCriticalSection") // XP
#pragma comment(linker, "/export:DeleteFiber=kernel32.DeleteFiber") // XP
#pragma comment(linker, "/export:DeleteFileA=kernel32.DeleteFileA") // XP
#pragma comment(linker, "/export:DeleteFileTransactedA=kernel32.DeleteFileTransactedA")
#pragma comment(linker, "/export:DeleteFileTransactedW=kernel32.DeleteFileTransactedW")
#pragma comment(linker, "/export:DeleteFileW=kernel32.DeleteFileW") // XP

void WINAPI impl_DeleteProcThreadAttributeList(struct _PROC_THREAD_ATTRIBUTE_LIST *list);
extern "C" __declspec(dllexport) 
void WINAPI DeleteProcThreadAttributeList(struct _PROC_THREAD_ATTRIBUTE_LIST *list)
{
    return impl_DeleteProcThreadAttributeList(list);
}

#pragma comment(linker, "/export:DeleteSynchronizationBarrier=kernel32.DeleteSynchronizationBarrier")
#pragma comment(linker, "/export:DeleteTimerQueue=kernel32.DeleteTimerQueue") // XP
#pragma comment(linker, "/export:DeleteTimerQueueEx=kernel32.DeleteTimerQueueEx") // XP
#pragma comment(linker, "/export:DeleteTimerQueueTimer=kernel32.DeleteTimerQueueTimer") // XP
#pragma comment(linker, "/export:DeleteVolumeMountPointA=kernel32.DeleteVolumeMountPointA") // XP
#pragma comment(linker, "/export:DeleteVolumeMountPointW=kernel32.DeleteVolumeMountPointW") // XP
#pragma comment(linker, "/export:DeviceIoControl=kernel32.DeviceIoControl") // XP
#pragma comment(linker, "/export:DisableThreadLibraryCalls=kernel32.DisableThreadLibraryCalls") // XP
#pragma comment(linker, "/export:DisableThreadProfiling=kernel32.DisableThreadProfiling")
#pragma comment(linker, "/export:DisassociateCurrentThreadFromCallback=kernel32.DisassociateCurrentThreadFromCallback")
#pragma comment(linker, "/export:DiscardVirtualMemory=kernel32.DiscardVirtualMemory")
#pragma comment(linker, "/export:DisconnectNamedPipe=kernel32.DisconnectNamedPipe") // XP
#pragma comment(linker, "/export:DnsHostnameToComputerNameA=kernel32.DnsHostnameToComputerNameA") // XP
#pragma comment(linker, "/export:DnsHostnameToComputerNameExW=kernel32.DnsHostnameToComputerNameExW")
#pragma comment(linker, "/export:DnsHostnameToComputerNameW=kernel32.DnsHostnameToComputerNameW") // XP
#pragma comment(linker, "/export:DosDateTimeToFileTime=kernel32.DosDateTimeToFileTime") // XP
#pragma comment(linker, "/export:DosPathToSessionPathA=kernel32.DosPathToSessionPathA") // XP
#pragma comment(linker, "/export:DosPathToSessionPathW=kernel32.DosPathToSessionPathW") // XP
#pragma comment(linker, "/export:DuplicateConsoleHandle=kernel32.DuplicateConsoleHandle") // XP
#pragma comment(linker, "/export:DuplicateEncryptionInfoFileExt=kernel32.DuplicateEncryptionInfoFileExt")
#pragma comment(linker, "/export:DuplicateHandle=kernel32.DuplicateHandle") // XP
#pragma comment(linker, "/export:EnableThreadProfiling=kernel32.EnableThreadProfiling")
#pragma comment(linker, "/export:EncodePointer=kernel32.EncodePointer") // XP
#pragma comment(linker, "/export:EncodeSystemPointer=kernel32.EncodeSystemPointer") // XP
#pragma comment(linker, "/export:EndUpdateResourceA=kernel32.EndUpdateResourceA") // XP
#pragma comment(linker, "/export:EndUpdateResourceW=kernel32.EndUpdateResourceW") // XP
#pragma comment(linker, "/export:EnterCriticalSection=kernel32.EnterCriticalSection") // XP
#pragma comment(linker, "/export:EnterSynchronizationBarrier=kernel32.EnterSynchronizationBarrier")
#pragma comment(linker, "/export:EnumCalendarInfoA=kernel32.EnumCalendarInfoA") // XP
#pragma comment(linker, "/export:EnumCalendarInfoExA=kernel32.EnumCalendarInfoExA") // XP
#pragma comment(linker, "/export:EnumCalendarInfoExEx=kernel32.EnumCalendarInfoExEx")
#pragma comment(linker, "/export:EnumCalendarInfoExW=kernel32.EnumCalendarInfoExW") // XP
#pragma comment(linker, "/export:EnumCalendarInfoW=kernel32.EnumCalendarInfoW") // XP
#pragma comment(linker, "/export:EnumDateFormatsA=kernel32.EnumDateFormatsA") // XP
#pragma comment(linker, "/export:EnumDateFormatsExA=kernel32.EnumDateFormatsExA") // XP
#pragma comment(linker, "/export:EnumDateFormatsExEx=kernel32.EnumDateFormatsExEx")
#pragma comment(linker, "/export:EnumDateFormatsExW=kernel32.EnumDateFormatsExW") // XP
#pragma comment(linker, "/export:EnumDateFormatsW=kernel32.EnumDateFormatsW") // XP
#pragma comment(linker, "/export:EnumLanguageGroupLocalesA=kernel32.EnumLanguageGroupLocalesA") // XP
#pragma comment(linker, "/export:EnumLanguageGroupLocalesW=kernel32.EnumLanguageGroupLocalesW") // XP
#pragma comment(linker, "/export:EnumResourceLanguagesA=kernel32.EnumResourceLanguagesA") // XP
#pragma comment(linker, "/export:EnumResourceLanguagesExA=kernel32.EnumResourceLanguagesExA")
#pragma comment(linker, "/export:EnumResourceLanguagesExW=kernel32.EnumResourceLanguagesExW")
#pragma comment(linker, "/export:EnumResourceLanguagesW=kernel32.EnumResourceLanguagesW") // XP
#pragma comment(linker, "/export:EnumResourceNamesA=kernel32.EnumResourceNamesA") // XP
#pragma comment(linker, "/export:EnumResourceNamesExA=kernel32.EnumResourceNamesExA")
#pragma comment(linker, "/export:EnumResourceNamesExW=kernel32.EnumResourceNamesExW")
#pragma comment(linker, "/export:EnumResourceNamesW=kernel32.EnumResourceNamesW") // XP
#pragma comment(linker, "/export:EnumResourceTypesA=kernel32.EnumResourceTypesA") // XP
#pragma comment(linker, "/export:EnumResourceTypesExA=kernel32.EnumResourceTypesExA")
#pragma comment(linker, "/export:EnumResourceTypesExW=kernel32.EnumResourceTypesExW")
#pragma comment(linker, "/export:EnumResourceTypesW=kernel32.EnumResourceTypesW") // XP
#pragma comment(linker, "/export:EnumSystemCodePagesA=kernel32.EnumSystemCodePagesA") // XP
#pragma comment(linker, "/export:EnumSystemCodePagesW=kernel32.EnumSystemCodePagesW") // XP
#pragma comment(linker, "/export:EnumSystemFirmwareTables=kernel32.EnumSystemFirmwareTables")
#pragma comment(linker, "/export:EnumSystemGeoID=kernel32.EnumSystemGeoID") // XP
#pragma comment(linker, "/export:EnumSystemLanguageGroupsA=kernel32.EnumSystemLanguageGroupsA") // XP
#pragma comment(linker, "/export:EnumSystemLanguageGroupsW=kernel32.EnumSystemLanguageGroupsW") // XP
#pragma comment(linker, "/export:EnumSystemLocalesA=kernel32.EnumSystemLocalesA") // XP
#pragma comment(linker, "/export:EnumSystemLocalesEx=kernel32.EnumSystemLocalesEx")
#pragma comment(linker, "/export:EnumSystemLocalesW=kernel32.EnumSystemLocalesW") // XP
#pragma comment(linker, "/export:EnumTimeFormatsA=kernel32.EnumTimeFormatsA") // XP
#pragma comment(linker, "/export:EnumTimeFormatsEx=kernel32.EnumTimeFormatsEx")
#pragma comment(linker, "/export:EnumTimeFormatsW=kernel32.EnumTimeFormatsW") // XP
#pragma comment(linker, "/export:EnumUILanguagesA=kernel32.EnumUILanguagesA") // XP
#pragma comment(linker, "/export:EnumUILanguagesW=kernel32.EnumUILanguagesW") // XP
#pragma comment(linker, "/export:EnumerateLocalComputerNamesA=kernel32.EnumerateLocalComputerNamesA") // XP
#pragma comment(linker, "/export:EnumerateLocalComputerNamesW=kernel32.EnumerateLocalComputerNamesW") // XP
#pragma comment(linker, "/export:EraseTape=kernel32.EraseTape") // XP
#pragma comment(linker, "/export:EscapeCommFunction=kernel32.EscapeCommFunction") // XP
#pragma comment(linker, "/export:ExitProcess=kernel32.ExitProcess") // XP
#pragma comment(linker, "/export:ExitThread=kernel32.ExitThread") // XP
#pragma comment(linker, "/export:ExitVDM=kernel32.ExitVDM") // XP
#pragma comment(linker, "/export:ExpandEnvironmentStringsA=kernel32.ExpandEnvironmentStringsA") // XP
#pragma comment(linker, "/export:ExpandEnvironmentStringsW=kernel32.ExpandEnvironmentStringsW") // XP
#pragma comment(linker, "/export:ExpungeConsoleCommandHistoryA=kernel32.ExpungeConsoleCommandHistoryA") // XP
#pragma comment(linker, "/export:ExpungeConsoleCommandHistoryW=kernel32.ExpungeConsoleCommandHistoryW") // XP
#pragma comment(linker, "/export:FatalAppExitA=kernel32.FatalAppExitA") // XP
#pragma comment(linker, "/export:FatalAppExitW=kernel32.FatalAppExitW") // XP
#pragma comment(linker, "/export:FatalExit=kernel32.FatalExit") // XP
#pragma comment(linker, "/export:FileTimeToDosDateTime=kernel32.FileTimeToDosDateTime") // XP
#pragma comment(linker, "/export:FileTimeToLocalFileTime=kernel32.FileTimeToLocalFileTime") // XP
#pragma comment(linker, "/export:FileTimeToSystemTime=kernel32.FileTimeToSystemTime") // XP
#pragma comment(linker, "/export:FillConsoleOutputAttribute=kernel32.FillConsoleOutputAttribute") // XP
#pragma comment(linker, "/export:FillConsoleOutputCharacterA=kernel32.FillConsoleOutputCharacterA") // XP
#pragma comment(linker, "/export:FillConsoleOutputCharacterW=kernel32.FillConsoleOutputCharacterW") // XP
#pragma comment(linker, "/export:FindActCtxSectionGuid=kernel32.FindActCtxSectionGuid") // XP
#pragma comment(linker, "/export:FindActCtxSectionGuidWorker=kernel32.FindActCtxSectionGuidWorker")
#pragma comment(linker, "/export:FindActCtxSectionStringA=kernel32.FindActCtxSectionStringA") // XP
#pragma comment(linker, "/export:FindActCtxSectionStringW=kernel32.FindActCtxSectionStringW") // XP
#pragma comment(linker, "/export:FindActCtxSectionStringWWorker=kernel32.FindActCtxSectionStringWWorker")
#pragma comment(linker, "/export:FindAtomA=kernel32.FindAtomA") // XP
#pragma comment(linker, "/export:FindAtomW=kernel32.FindAtomW") // XP
#pragma comment(linker, "/export:FindClose=kernel32.FindClose") // XP
#pragma comment(linker, "/export:FindCloseChangeNotification=kernel32.FindCloseChangeNotification") // XP
#pragma comment(linker, "/export:FindFirstChangeNotificationA=kernel32.FindFirstChangeNotificationA") // XP
#pragma comment(linker, "/export:FindFirstChangeNotificationW=kernel32.FindFirstChangeNotificationW") // XP
#pragma comment(linker, "/export:FindFirstFileA=kernel32.FindFirstFileA") // XP
#pragma comment(linker, "/export:FindFirstFileExA=kernel32.FindFirstFileExA") // XP
#pragma comment(linker, "/export:FindFirstFileExW=kernel32.FindFirstFileExW") // XP
#pragma comment(linker, "/export:FindFirstFileNameTransactedW=kernel32.FindFirstFileNameTransactedW")
#pragma comment(linker, "/export:FindFirstFileNameW=kernel32.FindFirstFileNameW")
#pragma comment(linker, "/export:FindFirstFileTransactedA=kernel32.FindFirstFileTransactedA")
#pragma comment(linker, "/export:FindFirstFileTransactedW=kernel32.FindFirstFileTransactedW")
#pragma comment(linker, "/export:FindFirstFileW=kernel32.FindFirstFileW") // XP
#pragma comment(linker, "/export:FindFirstStreamTransactedW=kernel32.FindFirstStreamTransactedW")
#pragma comment(linker, "/export:FindFirstStreamW=kernel32.FindFirstStreamW")
#pragma comment(linker, "/export:FindFirstVolumeA=kernel32.FindFirstVolumeA") // XP
#pragma comment(linker, "/export:FindFirstVolumeMountPointA=kernel32.FindFirstVolumeMountPointA") // XP
#pragma comment(linker, "/export:FindFirstVolumeMountPointW=kernel32.FindFirstVolumeMountPointW") // XP
#pragma comment(linker, "/export:FindFirstVolumeW=kernel32.FindFirstVolumeW") // XP
#pragma comment(linker, "/export:FindNLSString=kernel32.FindNLSString")
#pragma comment(linker, "/export:FindNLSStringEx=kernel32.FindNLSStringEx")
#pragma comment(linker, "/export:FindNextChangeNotification=kernel32.FindNextChangeNotification") // XP
#pragma comment(linker, "/export:FindNextFileA=kernel32.FindNextFileA") // XP
#pragma comment(linker, "/export:FindNextFileNameW=kernel32.FindNextFileNameW")
#pragma comment(linker, "/export:FindNextFileW=kernel32.FindNextFileW") // XP
#pragma comment(linker, "/export:FindNextStreamW=kernel32.FindNextStreamW")
#pragma comment(linker, "/export:FindNextVolumeA=kernel32.FindNextVolumeA") // XP
#pragma comment(linker, "/export:FindNextVolumeMountPointA=kernel32.FindNextVolumeMountPointA") // XP
#pragma comment(linker, "/export:FindNextVolumeMountPointW=kernel32.FindNextVolumeMountPointW") // XP
#pragma comment(linker, "/export:FindNextVolumeW=kernel32.FindNextVolumeW") // XP
#pragma comment(linker, "/export:FindPackagesByPackageFamily=kernel32.FindPackagesByPackageFamily")
#pragma comment(linker, "/export:FindResourceA=kernel32.FindResourceA") // XP
#pragma comment(linker, "/export:FindResourceExA=kernel32.FindResourceExA") // XP
#pragma comment(linker, "/export:FindResourceExW=kernel32.FindResourceExW") // XP
#pragma comment(linker, "/export:FindResourceW=kernel32.FindResourceW") // XP
#pragma comment(linker, "/export:FindStringOrdinal=kernel32.FindStringOrdinal")
#pragma comment(linker, "/export:FindVolumeClose=kernel32.FindVolumeClose") // XP
#pragma comment(linker, "/export:FindVolumeMountPointClose=kernel32.FindVolumeMountPointClose") // XP
#pragma comment(linker, "/export:FlsAlloc=kernel32.FlsAlloc")
#pragma comment(linker, "/export:FlsFree=kernel32.FlsFree")
#pragma comment(linker, "/export:FlsGetValue=kernel32.FlsGetValue")
#pragma comment(linker, "/export:FlsSetValue=kernel32.FlsSetValue")
#pragma comment(linker, "/export:FlushConsoleInputBuffer=kernel32.FlushConsoleInputBuffer") // XP
#pragma comment(linker, "/export:FlushFileBuffers=kernel32.FlushFileBuffers") // XP
#pragma comment(linker, "/export:FlushInstructionCache=kernel32.FlushInstructionCache") // XP
#pragma comment(linker, "/export:FlushProcessWriteBuffers=kernel32.FlushProcessWriteBuffers")
#pragma comment(linker, "/export:FlushViewOfFile=kernel32.FlushViewOfFile") // XP
#pragma comment(linker, "/export:FoldStringA=kernel32.FoldStringA") // XP
#pragma comment(linker, "/export:FoldStringW=kernel32.FoldStringW") // XP
#pragma comment(linker, "/export:FormatApplicationUserModelId=kernel32.FormatApplicationUserModelId")
#pragma comment(linker, "/export:FormatMessageA=kernel32.FormatMessageA") // XP
#pragma comment(linker, "/export:FormatMessageW=kernel32.FormatMessageW") // XP
#pragma comment(linker, "/export:FreeConsole=kernel32.FreeConsole") // XP
#pragma comment(linker, "/export:FreeEnvironmentStringsA=kernel32.FreeEnvironmentStringsA") // XP
#pragma comment(linker, "/export:FreeEnvironmentStringsW=kernel32.FreeEnvironmentStringsW") // XP
#pragma comment(linker, "/export:FreeLibrary=kernel32.FreeLibrary") // XP
#pragma comment(linker, "/export:FreeLibraryAndExitThread=kernel32.FreeLibraryAndExitThread") // XP
#pragma comment(linker, "/export:FreeLibraryWhenCallbackReturns=kernel32.FreeLibraryWhenCallbackReturns")
#pragma comment(linker, "/export:FreeMemoryJobObject=kernel32.FreeMemoryJobObject")
#pragma comment(linker, "/export:FreeResource=kernel32.FreeResource") // XP
#pragma comment(linker, "/export:FreeUserPhysicalPages=kernel32.FreeUserPhysicalPages") // XP
#pragma comment(linker, "/export:GenerateConsoleCtrlEvent=kernel32.GenerateConsoleCtrlEvent") // XP
#pragma comment(linker, "/export:GetACP=kernel32.GetACP") // XP
#pragma comment(linker, "/export:GetActiveProcessorCount=kernel32.GetActiveProcessorCount")
#pragma comment(linker, "/export:GetActiveProcessorGroupCount=kernel32.GetActiveProcessorGroupCount")
#pragma comment(linker, "/export:GetAppContainerAce=kernel32.GetAppContainerAce")
#pragma comment(linker, "/export:GetAppContainerNamedObjectPath=kernel32.GetAppContainerNamedObjectPath")
#pragma comment(linker, "/export:GetApplicationRecoveryCallback=kernel32.GetApplicationRecoveryCallback")
#pragma comment(linker, "/export:GetApplicationRecoveryCallbackWorker=kernel32.GetApplicationRecoveryCallbackWorker")
#pragma comment(linker, "/export:GetApplicationRestartSettings=kernel32.GetApplicationRestartSettings")
#pragma comment(linker, "/export:GetApplicationRestartSettingsWorker=kernel32.GetApplicationRestartSettingsWorker")
#pragma comment(linker, "/export:GetApplicationUserModelId=kernel32.GetApplicationUserModelId")
#pragma comment(linker, "/export:GetAtomNameA=kernel32.GetAtomNameA") // XP
#pragma comment(linker, "/export:GetAtomNameW=kernel32.GetAtomNameW") // XP
#pragma comment(linker, "/export:GetBinaryType=kernel32.GetBinaryType") // XP
#pragma comment(linker, "/export:GetBinaryTypeA=kernel32.GetBinaryTypeA") // XP
#pragma comment(linker, "/export:GetBinaryTypeW=kernel32.GetBinaryTypeW") // XP
#pragma comment(linker, "/export:GetCPInfo=kernel32.GetCPInfo") // XP
#pragma comment(linker, "/export:GetCPInfoExA=kernel32.GetCPInfoExA") // XP
#pragma comment(linker, "/export:GetCPInfoExW=kernel32.GetCPInfoExW") // XP
#pragma comment(linker, "/export:GetCachedSigningLevel=kernel32.GetCachedSigningLevel")
#pragma comment(linker, "/export:GetCalendarDateFormat=kernel32.GetCalendarDateFormat")
#pragma comment(linker, "/export:GetCalendarDateFormatEx=kernel32.GetCalendarDateFormatEx")
#pragma comment(linker, "/export:GetCalendarDaysInMonth=kernel32.GetCalendarDaysInMonth")
#pragma comment(linker, "/export:GetCalendarDifferenceInDays=kernel32.GetCalendarDifferenceInDays")
#pragma comment(linker, "/export:GetCalendarInfoA=kernel32.GetCalendarInfoA") // XP
#pragma comment(linker, "/export:GetCalendarInfoEx=kernel32.GetCalendarInfoEx")
#pragma comment(linker, "/export:GetCalendarInfoW=kernel32.GetCalendarInfoW") // XP
#pragma comment(linker, "/export:GetCalendarMonthsInYear=kernel32.GetCalendarMonthsInYear")
#pragma comment(linker, "/export:GetCalendarSupportedDateRange=kernel32.GetCalendarSupportedDateRange")
#pragma comment(linker, "/export:GetCalendarWeekNumber=kernel32.GetCalendarWeekNumber")
#pragma comment(linker, "/export:GetComPlusPackageInstallStatus=kernel32.GetComPlusPackageInstallStatus") // XP
#pragma comment(linker, "/export:GetCommConfig=kernel32.GetCommConfig") // XP
#pragma comment(linker, "/export:GetCommMask=kernel32.GetCommMask") // XP
#pragma comment(linker, "/export:GetCommModemStatus=kernel32.GetCommModemStatus") // XP
#pragma comment(linker, "/export:GetCommProperties=kernel32.GetCommProperties") // XP
#pragma comment(linker, "/export:GetCommState=kernel32.GetCommState") // XP
#pragma comment(linker, "/export:GetCommTimeouts=kernel32.GetCommTimeouts") // XP
#pragma comment(linker, "/export:GetCommandLineA=kernel32.GetCommandLineA") // XP
#pragma comment(linker, "/export:GetCommandLineW=kernel32.GetCommandLineW") // XP
#pragma comment(linker, "/export:GetCompressedFileSizeA=kernel32.GetCompressedFileSizeA") // XP
#pragma comment(linker, "/export:GetCompressedFileSizeTransactedA=kernel32.GetCompressedFileSizeTransactedA")
#pragma comment(linker, "/export:GetCompressedFileSizeTransactedW=kernel32.GetCompressedFileSizeTransactedW")
#pragma comment(linker, "/export:GetCompressedFileSizeW=kernel32.GetCompressedFileSizeW") // XP
#pragma comment(linker, "/export:GetComputerNameA=kernel32.GetComputerNameA") // XP
#pragma comment(linker, "/export:GetComputerNameExA=kernel32.GetComputerNameExA") // XP
#pragma comment(linker, "/export:GetComputerNameExW=kernel32.GetComputerNameExW") // XP
#pragma comment(linker, "/export:GetComputerNameW=kernel32.GetComputerNameW") // XP
#pragma comment(linker, "/export:GetConsoleAliasA=kernel32.GetConsoleAliasA") // XP
#pragma comment(linker, "/export:GetConsoleAliasExesA=kernel32.GetConsoleAliasExesA") // XP
#pragma comment(linker, "/export:GetConsoleAliasExesLengthA=kernel32.GetConsoleAliasExesLengthA") // XP
#pragma comment(linker, "/export:GetConsoleAliasExesLengthW=kernel32.GetConsoleAliasExesLengthW") // XP
#pragma comment(linker, "/export:GetConsoleAliasExesW=kernel32.GetConsoleAliasExesW") // XP
#pragma comment(linker, "/export:GetConsoleAliasW=kernel32.GetConsoleAliasW") // XP
#pragma comment(linker, "/export:GetConsoleAliasesA=kernel32.GetConsoleAliasesA") // XP
#pragma comment(linker, "/export:GetConsoleAliasesLengthA=kernel32.GetConsoleAliasesLengthA") // XP
#pragma comment(linker, "/export:GetConsoleAliasesLengthW=kernel32.GetConsoleAliasesLengthW") // XP
#pragma comment(linker, "/export:GetConsoleAliasesW=kernel32.GetConsoleAliasesW") // XP
#pragma comment(linker, "/export:GetConsoleCP=kernel32.GetConsoleCP") // XP
#pragma comment(linker, "/export:GetConsoleCharType=kernel32.GetConsoleCharType") // XP
#pragma comment(linker, "/export:GetConsoleCommandHistoryA=kernel32.GetConsoleCommandHistoryA") // XP
#pragma comment(linker, "/export:GetConsoleCommandHistoryLengthA=kernel32.GetConsoleCommandHistoryLengthA") // XP
#pragma comment(linker, "/export:GetConsoleCommandHistoryLengthW=kernel32.GetConsoleCommandHistoryLengthW") // XP
#pragma comment(linker, "/export:GetConsoleCommandHistoryW=kernel32.GetConsoleCommandHistoryW") // XP
#pragma comment(linker, "/export:GetConsoleCursorInfo=kernel32.GetConsoleCursorInfo") // XP
#pragma comment(linker, "/export:GetConsoleCursorMode=kernel32.GetConsoleCursorMode") // XP
#pragma comment(linker, "/export:GetConsoleDisplayMode=kernel32.GetConsoleDisplayMode") // XP
#pragma comment(linker, "/export:GetConsoleFontInfo=kernel32.GetConsoleFontInfo") // XP
#pragma comment(linker, "/export:GetConsoleFontSize=kernel32.GetConsoleFontSize") // XP
#pragma comment(linker, "/export:GetConsoleHardwareState=kernel32.GetConsoleHardwareState") // XP
#pragma comment(linker, "/export:GetConsoleHistoryInfo=kernel32.GetConsoleHistoryInfo")
#pragma comment(linker, "/export:GetConsoleInputExeNameA=kernel32.GetConsoleInputExeNameA") // XP
#pragma comment(linker, "/export:GetConsoleInputExeNameW=kernel32.GetConsoleInputExeNameW") // XP
#pragma comment(linker, "/export:GetConsoleInputWaitHandle=kernel32.GetConsoleInputWaitHandle") // XP
#pragma comment(linker, "/export:GetConsoleKeyboardLayoutNameA=kernel32.GetConsoleKeyboardLayoutNameA") // XP
#pragma comment(linker, "/export:GetConsoleKeyboardLayoutNameW=kernel32.GetConsoleKeyboardLayoutNameW") // XP
#pragma comment(linker, "/export:GetConsoleMode=kernel32.GetConsoleMode") // XP
#pragma comment(linker, "/export:GetConsoleNlsMode=kernel32.GetConsoleNlsMode") // XP
#pragma comment(linker, "/export:GetConsoleOriginalTitleA=kernel32.GetConsoleOriginalTitleA")
#pragma comment(linker, "/export:GetConsoleOriginalTitleW=kernel32.GetConsoleOriginalTitleW")
#pragma comment(linker, "/export:GetConsoleOutputCP=kernel32.GetConsoleOutputCP") // XP
#pragma comment(linker, "/export:GetConsoleProcessList=kernel32.GetConsoleProcessList") // XP
#pragma comment(linker, "/export:GetConsoleScreenBufferInfo=kernel32.GetConsoleScreenBufferInfo") // XP
#pragma comment(linker, "/export:GetConsoleScreenBufferInfoEx=kernel32.GetConsoleScreenBufferInfoEx")
#pragma comment(linker, "/export:GetConsoleSelectionInfo=kernel32.GetConsoleSelectionInfo") // XP
#pragma comment(linker, "/export:GetConsoleTitleA=kernel32.GetConsoleTitleA") // XP
#pragma comment(linker, "/export:GetConsoleTitleW=kernel32.GetConsoleTitleW") // XP
#pragma comment(linker, "/export:GetConsoleWindow=kernel32.GetConsoleWindow") // XP
#pragma comment(linker, "/export:GetCurrencyFormatA=kernel32.GetCurrencyFormatA") // XP
#pragma comment(linker, "/export:GetCurrencyFormatEx=kernel32.GetCurrencyFormatEx")
#pragma comment(linker, "/export:GetCurrencyFormatW=kernel32.GetCurrencyFormatW") // XP
#pragma comment(linker, "/export:GetCurrentActCtx=kernel32.GetCurrentActCtx") // XP
#pragma comment(linker, "/export:GetCurrentActCtxWorker=kernel32.GetCurrentActCtxWorker")
#pragma comment(linker, "/export:GetCurrentApplicationUserModelId=kernel32.GetCurrentApplicationUserModelId")
#pragma comment(linker, "/export:GetCurrentConsoleFont=kernel32.GetCurrentConsoleFont") // XP
#pragma comment(linker, "/export:GetCurrentConsoleFontEx=kernel32.GetCurrentConsoleFontEx")
#pragma comment(linker, "/export:GetCurrentDirectoryA=kernel32.GetCurrentDirectoryA") // XP
#pragma comment(linker, "/export:GetCurrentDirectoryW=kernel32.GetCurrentDirectoryW") // XP
#pragma comment(linker, "/export:GetCurrentPackageFamilyName=kernel32.GetCurrentPackageFamilyName")
#pragma comment(linker, "/export:GetCurrentPackageFullName=kernel32.GetCurrentPackageFullName")
#pragma comment(linker, "/export:GetCurrentPackageId=kernel32.GetCurrentPackageId")
#pragma comment(linker, "/export:GetCurrentPackageInfo=kernel32.GetCurrentPackageInfo")
#pragma comment(linker, "/export:GetCurrentPackagePath=kernel32.GetCurrentPackagePath")
#pragma comment(linker, "/export:GetCurrentProcess=kernel32.GetCurrentProcess") // XP
#pragma comment(linker, "/export:GetCurrentProcessId=kernel32.GetCurrentProcessId") // XP
#pragma comment(linker, "/export:GetCurrentProcessorNumber=kernel32.GetCurrentProcessorNumber")
#pragma comment(linker, "/export:GetCurrentProcessorNumberEx=kernel32.GetCurrentProcessorNumberEx")
#pragma comment(linker, "/export:GetCurrentThread=kernel32.GetCurrentThread") // XP
#pragma comment(linker, "/export:GetCurrentThreadId=kernel32.GetCurrentThreadId") // XP
#pragma comment(linker, "/export:GetCurrentThreadStackLimits=kernel32.GetCurrentThreadStackLimits")
#pragma comment(linker, "/export:GetDateFormatA=kernel32.GetDateFormatA") // XP
#pragma comment(linker, "/export:GetDateFormatAWorker=kernel32.GetDateFormatAWorker")
#pragma comment(linker, "/export:GetDateFormatEx=kernel32.GetDateFormatEx")
#pragma comment(linker, "/export:GetDateFormatW=kernel32.GetDateFormatW") // XP
#pragma comment(linker, "/export:GetDateFormatWWorker=kernel32.GetDateFormatWWorker")
#pragma comment(linker, "/export:GetDefaultCommConfigA=kernel32.GetDefaultCommConfigA") // XP
#pragma comment(linker, "/export:GetDefaultCommConfigW=kernel32.GetDefaultCommConfigW") // XP
#pragma comment(linker, "/export:GetDevicePowerState=kernel32.GetDevicePowerState") // XP
#pragma comment(linker, "/export:GetDiskFreeSpaceA=kernel32.GetDiskFreeSpaceA") // XP
#pragma comment(linker, "/export:GetDiskFreeSpaceExA=kernel32.GetDiskFreeSpaceExA") // XP
#pragma comment(linker, "/export:GetDiskFreeSpaceExW=kernel32.GetDiskFreeSpaceExW") // XP
#pragma comment(linker, "/export:GetDiskFreeSpaceW=kernel32.GetDiskFreeSpaceW") // XP
#pragma comment(linker, "/export:GetDllDirectoryA=kernel32.GetDllDirectoryA") // XP
#pragma comment(linker, "/export:GetDllDirectoryW=kernel32.GetDllDirectoryW") // XP
#pragma comment(linker, "/export:GetDriveTypeA=kernel32.GetDriveTypeA") // XP
#pragma comment(linker, "/export:GetDriveTypeW=kernel32.GetDriveTypeW") // XP
#pragma comment(linker, "/export:GetDurationFormat=kernel32.GetDurationFormat")
#pragma comment(linker, "/export:GetDurationFormatEx=kernel32.GetDurationFormatEx")
#pragma comment(linker, "/export:GetDynamicTimeZoneInformation=kernel32.GetDynamicTimeZoneInformation")
#pragma comment(linker, "/export:GetEnabledXStateFeatures=kernel32.GetEnabledXStateFeatures")
#pragma comment(linker, "/export:GetEncryptedFileVersionExt=kernel32.GetEncryptedFileVersionExt")
#pragma comment(linker, "/export:GetEnvironmentStrings=kernel32.GetEnvironmentStrings") // XP
#pragma comment(linker, "/export:GetEnvironmentStringsA=kernel32.GetEnvironmentStringsA") // XP
#pragma comment(linker, "/export:GetEnvironmentStringsW=kernel32.GetEnvironmentStringsW") // XP
#pragma comment(linker, "/export:GetEnvironmentVariableA=kernel32.GetEnvironmentVariableA") // XP
#pragma comment(linker, "/export:GetEnvironmentVariableW=kernel32.GetEnvironmentVariableW") // XP
#pragma comment(linker, "/export:GetEraNameCountedString=kernel32.GetEraNameCountedString")
#pragma comment(linker, "/export:GetErrorMode=kernel32.GetErrorMode")
#pragma comment(linker, "/export:GetExitCodeProcess=kernel32.GetExitCodeProcess") // XP
#pragma comment(linker, "/export:GetExitCodeThread=kernel32.GetExitCodeThread") // XP
#pragma comment(linker, "/export:GetExpandedNameA=kernel32.GetExpandedNameA") // XP
#pragma comment(linker, "/export:GetExpandedNameW=kernel32.GetExpandedNameW") // XP
#pragma comment(linker, "/export:GetFileAttributesA=kernel32.GetFileAttributesA") // XP
#pragma comment(linker, "/export:GetFileAttributesExA=kernel32.GetFileAttributesExA") // XP
#pragma comment(linker, "/export:GetFileAttributesExW=kernel32.GetFileAttributesExW") // XP
#pragma comment(linker, "/export:GetFileAttributesTransactedA=kernel32.GetFileAttributesTransactedA")
#pragma comment(linker, "/export:GetFileAttributesTransactedW=kernel32.GetFileAttributesTransactedW")
#pragma comment(linker, "/export:GetFileAttributesW=kernel32.GetFileAttributesW") // XP
#pragma comment(linker, "/export:GetFileBandwidthReservation=kernel32.GetFileBandwidthReservation")
#pragma comment(linker, "/export:GetFileInformationByHandle=kernel32.GetFileInformationByHandle") // XP
#pragma comment(linker, "/export:GetFileInformationByHandleEx=kernel32.GetFileInformationByHandleEx")
#pragma comment(linker, "/export:GetFileMUIInfo=kernel32.GetFileMUIInfo")
#pragma comment(linker, "/export:GetFileMUIPath=kernel32.GetFileMUIPath")
#pragma comment(linker, "/export:GetFileSize=kernel32.GetFileSize") // XP
#pragma comment(linker, "/export:GetFileSizeEx=kernel32.GetFileSizeEx") // XP
#pragma comment(linker, "/export:GetFileTime=kernel32.GetFileTime") // XP
#pragma comment(linker, "/export:GetFileType=kernel32.GetFileType") // XP

DWORD WINAPI impl_GetFinalPathNameByHandleA(HANDLE file, LPSTR path, DWORD charcount, DWORD flags);
extern "C" __declspec(dllexport) 
DWORD WINAPI GetFinalPathNameByHandleA(HANDLE file, LPSTR path, DWORD charcount, DWORD flags)
{
    return impl_GetFinalPathNameByHandleA(file, path, charcount, flags);
}

DWORD WINAPI impl_GetFinalPathNameByHandleW(HANDLE file, LPWSTR path, DWORD charcount, DWORD flags);
extern "C" __declspec(dllexport) 
DWORD WINAPI GetFinalPathNameByHandleW(HANDLE file, LPWSTR path, DWORD charcount, DWORD flags)
{
    return impl_GetFinalPathNameByHandleW(file, path, charcount, flags);
}

#pragma comment(linker, "/export:GetFirmwareEnvironmentVariableA=kernel32.GetFirmwareEnvironmentVariableA") // XP
#pragma comment(linker, "/export:GetFirmwareEnvironmentVariableExA=kernel32.GetFirmwareEnvironmentVariableExA")
#pragma comment(linker, "/export:GetFirmwareEnvironmentVariableExW=kernel32.GetFirmwareEnvironmentVariableExW")
#pragma comment(linker, "/export:GetFirmwareEnvironmentVariableW=kernel32.GetFirmwareEnvironmentVariableW") // XP
#pragma comment(linker, "/export:GetFirmwareType=kernel32.GetFirmwareType")
#pragma comment(linker, "/export:GetFullPathNameA=kernel32.GetFullPathNameA") // XP
#pragma comment(linker, "/export:GetFullPathNameTransactedA=kernel32.GetFullPathNameTransactedA")
#pragma comment(linker, "/export:GetFullPathNameTransactedW=kernel32.GetFullPathNameTransactedW")
#pragma comment(linker, "/export:GetFullPathNameW=kernel32.GetFullPathNameW") // XP
#pragma comment(linker, "/export:GetGeoInfoA=kernel32.GetGeoInfoA") // XP
#pragma comment(linker, "/export:GetGeoInfoW=kernel32.GetGeoInfoW") // XP
#pragma comment(linker, "/export:GetHandleContext=kernel32.GetHandleContext") // XP
#pragma comment(linker, "/export:GetHandleInformation=kernel32.GetHandleInformation") // XP
#pragma comment(linker, "/export:GetLargePageMinimum=kernel32.GetLargePageMinimum")
#pragma comment(linker, "/export:GetLargestConsoleWindowSize=kernel32.GetLargestConsoleWindowSize") // XP
#pragma comment(linker, "/export:GetLastError=kernel32.GetLastError") // XP
#pragma comment(linker, "/export:GetLocalTime=kernel32.GetLocalTime") // XP
#pragma comment(linker, "/export:GetLocaleInfoA=kernel32.GetLocaleInfoA") // XP
#pragma comment(linker, "/export:GetLocaleInfoEx=kernel32.GetLocaleInfoEx")
#pragma comment(linker, "/export:GetLocaleInfoW=kernel32.GetLocaleInfoW") // XP
#pragma comment(linker, "/export:GetLogicalDriveStringsA=kernel32.GetLogicalDriveStringsA") // XP
#pragma comment(linker, "/export:GetLogicalDriveStringsW=kernel32.GetLogicalDriveStringsW") // XP
#pragma comment(linker, "/export:GetLogicalDrives=kernel32.GetLogicalDrives") // XP
#pragma comment(linker, "/export:GetLogicalProcessorInformation=kernel32.GetLogicalProcessorInformation") // XP
#pragma comment(linker, "/export:GetLogicalProcessorInformationEx=kernel32.GetLogicalProcessorInformationEx")
#pragma comment(linker, "/export:GetLongPathNameA=kernel32.GetLongPathNameA") // XP
#pragma comment(linker, "/export:GetLongPathNameTransactedA=kernel32.GetLongPathNameTransactedA")
#pragma comment(linker, "/export:GetLongPathNameTransactedW=kernel32.GetLongPathNameTransactedW")
#pragma comment(linker, "/export:GetLongPathNameW=kernel32.GetLongPathNameW") // XP
#pragma comment(linker, "/export:GetMailslotInfo=kernel32.GetMailslotInfo") // XP
#pragma comment(linker, "/export:GetMaximumProcessorCount=kernel32.GetMaximumProcessorCount")
#pragma comment(linker, "/export:GetMaximumProcessorGroupCount=kernel32.GetMaximumProcessorGroupCount")
#pragma comment(linker, "/export:GetMemoryErrorHandlingCapabilities=kernel32.GetMemoryErrorHandlingCapabilities")
#pragma comment(linker, "/export:GetModuleFileNameA=kernel32.GetModuleFileNameA") // XP
#pragma comment(linker, "/export:GetModuleFileNameW=kernel32.GetModuleFileNameW") // XP
#pragma comment(linker, "/export:GetModuleHandleA=kernel32.GetModuleHandleA") // XP
#pragma comment(linker, "/export:GetModuleHandleExA=kernel32.GetModuleHandleExA") // XP
#pragma comment(linker, "/export:GetModuleHandleExW=kernel32.GetModuleHandleExW") // XP
#pragma comment(linker, "/export:GetModuleHandleW=kernel32.GetModuleHandleW") // XP
#pragma comment(linker, "/export:GetNLSVersion=kernel32.GetNLSVersion")
#pragma comment(linker, "/export:GetNLSVersionEx=kernel32.GetNLSVersionEx")
#pragma comment(linker, "/export:GetNamedPipeAttribute=kernel32.GetNamedPipeAttribute")
#pragma comment(linker, "/export:GetNamedPipeClientComputerNameA=kernel32.GetNamedPipeClientComputerNameA")
#pragma comment(linker, "/export:GetNamedPipeClientComputerNameW=kernel32.GetNamedPipeClientComputerNameW")
#pragma comment(linker, "/export:GetNamedPipeClientProcessId=kernel32.GetNamedPipeClientProcessId")
#pragma comment(linker, "/export:GetNamedPipeClientSessionId=kernel32.GetNamedPipeClientSessionId")
#pragma comment(linker, "/export:GetNamedPipeHandleStateA=kernel32.GetNamedPipeHandleStateA") // XP
#pragma comment(linker, "/export:GetNamedPipeHandleStateW=kernel32.GetNamedPipeHandleStateW") // XP
#pragma comment(linker, "/export:GetNamedPipeInfo=kernel32.GetNamedPipeInfo") // XP
#pragma comment(linker, "/export:GetNamedPipeServerProcessId=kernel32.GetNamedPipeServerProcessId")
#pragma comment(linker, "/export:GetNamedPipeServerSessionId=kernel32.GetNamedPipeServerSessionId")
#pragma comment(linker, "/export:GetNativeSystemInfo=kernel32.GetNativeSystemInfo") // XP
#pragma comment(linker, "/export:GetNextVDMCommand=kernel32.GetNextVDMCommand") // XP
#pragma comment(linker, "/export:GetNumaAvailableMemoryNode=kernel32.GetNumaAvailableMemoryNode") // XP
#pragma comment(linker, "/export:GetNumaAvailableMemoryNodeEx=kernel32.GetNumaAvailableMemoryNodeEx")
#pragma comment(linker, "/export:GetNumaHighestNodeNumber=kernel32.GetNumaHighestNodeNumber") // XP
#pragma comment(linker, "/export:GetNumaNodeNumberFromHandle=kernel32.GetNumaNodeNumberFromHandle")
#pragma comment(linker, "/export:GetNumaNodeProcessorMask=kernel32.GetNumaNodeProcessorMask") // XP
#pragma comment(linker, "/export:GetNumaNodeProcessorMaskEx=kernel32.GetNumaNodeProcessorMaskEx")
#pragma comment(linker, "/export:GetNumaProcessorNode=kernel32.GetNumaProcessorNode") // XP
#pragma comment(linker, "/export:GetNumaProcessorNodeEx=kernel32.GetNumaProcessorNodeEx")
#pragma comment(linker, "/export:GetNumaProximityNode=kernel32.GetNumaProximityNode")
#pragma comment(linker, "/export:GetNumaProximityNodeEx=kernel32.GetNumaProximityNodeEx")
#pragma comment(linker, "/export:GetNumberFormatA=kernel32.GetNumberFormatA") // XP
#pragma comment(linker, "/export:GetNumberFormatEx=kernel32.GetNumberFormatEx")
#pragma comment(linker, "/export:GetNumberFormatW=kernel32.GetNumberFormatW") // XP
#pragma comment(linker, "/export:GetNumberOfConsoleFonts=kernel32.GetNumberOfConsoleFonts") // XP
#pragma comment(linker, "/export:GetNumberOfConsoleInputEvents=kernel32.GetNumberOfConsoleInputEvents") // XP
#pragma comment(linker, "/export:GetNumberOfConsoleMouseButtons=kernel32.GetNumberOfConsoleMouseButtons") // XP
#pragma comment(linker, "/export:GetOEMCP=kernel32.GetOEMCP") // XP
#pragma comment(linker, "/export:GetOverlappedResult=kernel32.GetOverlappedResult") // XP
#pragma comment(linker, "/export:GetOverlappedResultEx=kernel32.GetOverlappedResultEx")
#pragma comment(linker, "/export:GetPackageApplicationIds=kernel32.GetPackageApplicationIds")
#pragma comment(linker, "/export:GetPackageFamilyName=kernel32.GetPackageFamilyName")
#pragma comment(linker, "/export:GetPackageFullName=kernel32.GetPackageFullName")
#pragma comment(linker, "/export:GetPackageId=kernel32.GetPackageId")
#pragma comment(linker, "/export:GetPackageInfo=kernel32.GetPackageInfo")
#pragma comment(linker, "/export:GetPackagePath=kernel32.GetPackagePath")
#pragma comment(linker, "/export:GetPackagePathByFullName=kernel32.GetPackagePathByFullName")
#pragma comment(linker, "/export:GetPackagesByPackageFamily=kernel32.GetPackagesByPackageFamily")
#pragma comment(linker, "/export:GetPhysicallyInstalledSystemMemory=kernel32.GetPhysicallyInstalledSystemMemory")
#pragma comment(linker, "/export:GetPriorityClass=kernel32.GetPriorityClass") // XP
#pragma comment(linker, "/export:GetPrivateProfileIntA=kernel32.GetPrivateProfileIntA") // XP
#pragma comment(linker, "/export:GetPrivateProfileIntW=kernel32.GetPrivateProfileIntW") // XP
#pragma comment(linker, "/export:GetPrivateProfileSectionA=kernel32.GetPrivateProfileSectionA") // XP
#pragma comment(linker, "/export:GetPrivateProfileSectionNamesA=kernel32.GetPrivateProfileSectionNamesA") // XP
#pragma comment(linker, "/export:GetPrivateProfileSectionNamesW=kernel32.GetPrivateProfileSectionNamesW") // XP
#pragma comment(linker, "/export:GetPrivateProfileSectionW=kernel32.GetPrivateProfileSectionW") // XP
#pragma comment(linker, "/export:GetPrivateProfileStringA=kernel32.GetPrivateProfileStringA") // XP
#pragma comment(linker, "/export:GetPrivateProfileStringW=kernel32.GetPrivateProfileStringW") // XP
#pragma comment(linker, "/export:GetPrivateProfileStructA=kernel32.GetPrivateProfileStructA") // XP
#pragma comment(linker, "/export:GetPrivateProfileStructW=kernel32.GetPrivateProfileStructW") // XP
#pragma comment(linker, "/export:GetProcAddress=kernel32.GetProcAddress") // XP
#pragma comment(linker, "/export:GetProcessAffinityMask=kernel32.GetProcessAffinityMask") // XP
#pragma comment(linker, "/export:GetProcessDEPPolicy=kernel32.GetProcessDEPPolicy") // XP
#pragma comment(linker, "/export:GetProcessDefaultCpuSets=kernel32.GetProcessDefaultCpuSets")
#pragma comment(linker, "/export:GetProcessGroupAffinity=kernel32.GetProcessGroupAffinity")
#pragma comment(linker, "/export:GetProcessHandleCount=kernel32.GetProcessHandleCount") // XP
#pragma comment(linker, "/export:GetProcessHeap=kernel32.GetProcessHeap") // XP
#pragma comment(linker, "/export:GetProcessHeaps=kernel32.GetProcessHeaps") // XP
#pragma comment(linker, "/export:GetProcessId=kernel32.GetProcessId") // XP
#pragma comment(linker, "/export:GetProcessIdOfThread=kernel32.GetProcessIdOfThread")
#pragma comment(linker, "/export:GetProcessInformation=kernel32.GetProcessInformation")
#pragma comment(linker, "/export:GetProcessIoCounters=kernel32.GetProcessIoCounters") // XP
#pragma comment(linker, "/export:GetProcessMitigationPolicy=kernel32.GetProcessMitigationPolicy")
#pragma comment(linker, "/export:GetProcessPreferredUILanguages=kernel32.GetProcessPreferredUILanguages")
#pragma comment(linker, "/export:GetProcessPriorityBoost=kernel32.GetProcessPriorityBoost") // XP
#pragma comment(linker, "/export:GetProcessShutdownParameters=kernel32.GetProcessShutdownParameters") // XP
#pragma comment(linker, "/export:GetProcessTimes=kernel32.GetProcessTimes") // XP
#pragma comment(linker, "/export:GetProcessVersion=kernel32.GetProcessVersion") // XP
#pragma comment(linker, "/export:GetProcessWorkingSetSize=kernel32.GetProcessWorkingSetSize") // XP
#pragma comment(linker, "/export:GetProcessWorkingSetSizeEx=kernel32.GetProcessWorkingSetSizeEx")
#pragma comment(linker, "/export:GetProcessorSystemCycleTime=kernel32.GetProcessorSystemCycleTime")
#pragma comment(linker, "/export:GetProductInfo=kernel32.GetProductInfo")
#pragma comment(linker, "/export:GetProfileIntA=kernel32.GetProfileIntA") // XP
#pragma comment(linker, "/export:GetProfileIntW=kernel32.GetProfileIntW") // XP
#pragma comment(linker, "/export:GetProfileSectionA=kernel32.GetProfileSectionA") // XP
#pragma comment(linker, "/export:GetProfileSectionW=kernel32.GetProfileSectionW") // XP
#pragma comment(linker, "/export:GetProfileStringA=kernel32.GetProfileStringA") // XP
#pragma comment(linker, "/export:GetProfileStringW=kernel32.GetProfileStringW") // XP
#pragma comment(linker, "/export:GetQueuedCompletionStatus=kernel32.GetQueuedCompletionStatus") // XP
#pragma comment(linker, "/export:GetQueuedCompletionStatusEx=kernel32.GetQueuedCompletionStatusEx")
#pragma comment(linker, "/export:GetShortPathNameA=kernel32.GetShortPathNameA") // XP
#pragma comment(linker, "/export:GetShortPathNameW=kernel32.GetShortPathNameW") // XP
#pragma comment(linker, "/export:GetStagedPackagePathByFullName=kernel32.GetStagedPackagePathByFullName")
#pragma comment(linker, "/export:GetStartupInfoA=kernel32.GetStartupInfoA") // XP
#pragma comment(linker, "/export:GetStartupInfoW=kernel32.GetStartupInfoW") // XP
#pragma comment(linker, "/export:GetStateFolder=kernel32.GetStateFolder")
#pragma comment(linker, "/export:GetStdHandle=kernel32.GetStdHandle") // XP
#pragma comment(linker, "/export:GetStringScripts=kernel32.GetStringScripts")
#pragma comment(linker, "/export:GetStringTypeA=kernel32.GetStringTypeA") // XP
#pragma comment(linker, "/export:GetStringTypeExA=kernel32.GetStringTypeExA") // XP
#pragma comment(linker, "/export:GetStringTypeExW=kernel32.GetStringTypeExW") // XP
#pragma comment(linker, "/export:GetStringTypeW=kernel32.GetStringTypeW") // XP
#pragma comment(linker, "/export:GetSystemAppDataKey=kernel32.GetSystemAppDataKey")
#pragma comment(linker, "/export:GetSystemCpuSetInformation=kernel32.GetSystemCpuSetInformation")
#pragma comment(linker, "/export:GetSystemDEPPolicy=kernel32.GetSystemDEPPolicy") // XP
#pragma comment(linker, "/export:GetSystemDefaultLCID=kernel32.GetSystemDefaultLCID") // XP
#pragma comment(linker, "/export:GetSystemDefaultLangID=kernel32.GetSystemDefaultLangID") // XP
#pragma comment(linker, "/export:GetSystemDefaultLocaleName=kernel32.GetSystemDefaultLocaleName")
#pragma comment(linker, "/export:GetSystemDefaultUILanguage=kernel32.GetSystemDefaultUILanguage") // XP
#pragma comment(linker, "/export:GetSystemDirectoryA=kernel32.GetSystemDirectoryA") // XP
#pragma comment(linker, "/export:GetSystemDirectoryW=kernel32.GetSystemDirectoryW") // XP
#pragma comment(linker, "/export:GetSystemFileCacheSize=kernel32.GetSystemFileCacheSize")
#pragma comment(linker, "/export:GetSystemFirmwareTable=kernel32.GetSystemFirmwareTable")
#pragma comment(linker, "/export:GetSystemInfo=kernel32.GetSystemInfo") // XP
#pragma comment(linker, "/export:GetSystemPowerStatus=kernel32.GetSystemPowerStatus") // XP
#pragma comment(linker, "/export:GetSystemPreferredUILanguages=kernel32.GetSystemPreferredUILanguages")
#pragma comment(linker, "/export:GetSystemRegistryQuota=kernel32.GetSystemRegistryQuota") // XP
#pragma comment(linker, "/export:GetSystemTime=kernel32.GetSystemTime") // XP
#pragma comment(linker, "/export:GetSystemTimeAdjustment=kernel32.GetSystemTimeAdjustment") // XP
#pragma comment(linker, "/export:GetSystemTimeAsFileTime=kernel32.GetSystemTimeAsFileTime") // XP
#pragma comment(linker, "/export:GetSystemTimePreciseAsFileTime=kernel32.GetSystemTimePreciseAsFileTime")
#pragma comment(linker, "/export:GetSystemTimes=kernel32.GetSystemTimes") // XP
#pragma comment(linker, "/export:GetSystemWindowsDirectoryA=kernel32.GetSystemWindowsDirectoryA") // XP
#pragma comment(linker, "/export:GetSystemWindowsDirectoryW=kernel32.GetSystemWindowsDirectoryW") // XP
#pragma comment(linker, "/export:GetSystemWow64DirectoryA=kernel32.GetSystemWow64DirectoryA") // XP
#pragma comment(linker, "/export:GetSystemWow64DirectoryW=kernel32.GetSystemWow64DirectoryW") // XP
#pragma comment(linker, "/export:GetTapeParameters=kernel32.GetTapeParameters") // XP
#pragma comment(linker, "/export:GetTapePosition=kernel32.GetTapePosition") // XP
#pragma comment(linker, "/export:GetTapeStatus=kernel32.GetTapeStatus") // XP
#pragma comment(linker, "/export:GetTempFileNameA=kernel32.GetTempFileNameA") // XP
#pragma comment(linker, "/export:GetTempFileNameW=kernel32.GetTempFileNameW") // XP
#pragma comment(linker, "/export:GetTempPathA=kernel32.GetTempPathA") // XP
#pragma comment(linker, "/export:GetTempPathW=kernel32.GetTempPathW") // XP
#pragma comment(linker, "/export:GetThreadContext=kernel32.GetThreadContext") // XP
#pragma comment(linker, "/export:GetThreadErrorMode=kernel32.GetThreadErrorMode")
#pragma comment(linker, "/export:GetThreadGroupAffinity=kernel32.GetThreadGroupAffinity")
#pragma comment(linker, "/export:GetThreadIOPendingFlag=kernel32.GetThreadIOPendingFlag") // XP
#pragma comment(linker, "/export:GetThreadId=kernel32.GetThreadId")
#pragma comment(linker, "/export:GetThreadIdealProcessorEx=kernel32.GetThreadIdealProcessorEx")
#pragma comment(linker, "/export:GetThreadInformation=kernel32.GetThreadInformation")
#pragma comment(linker, "/export:GetThreadLocale=kernel32.GetThreadLocale") // XP
#pragma comment(linker, "/export:GetThreadPreferredUILanguages=kernel32.GetThreadPreferredUILanguages")
#pragma comment(linker, "/export:GetThreadPriority=kernel32.GetThreadPriority") // XP
#pragma comment(linker, "/export:GetThreadPriorityBoost=kernel32.GetThreadPriorityBoost") // XP
#pragma comment(linker, "/export:GetThreadSelectedCpuSets=kernel32.GetThreadSelectedCpuSets")
#pragma comment(linker, "/export:GetThreadSelectorEntry=kernel32.GetThreadSelectorEntry") // XP
#pragma comment(linker, "/export:GetThreadTimes=kernel32.GetThreadTimes") // XP
#pragma comment(linker, "/export:GetThreadUILanguage=kernel32.GetThreadUILanguage")
#pragma comment(linker, "/export:GetTickCount=kernel32.GetTickCount") // XP

ULONGLONG WINAPI impl_GetTickCount64();
extern "C" __declspec(dllexport) 
ULONGLONG WINAPI GetTickCount64()
{
    return impl_GetTickCount64();
}

#pragma comment(linker, "/export:GetTimeFormatA=kernel32.GetTimeFormatA") // XP
#pragma comment(linker, "/export:GetTimeFormatAWorker=kernel32.GetTimeFormatAWorker")
#pragma comment(linker, "/export:GetTimeFormatEx=kernel32.GetTimeFormatEx")
#pragma comment(linker, "/export:GetTimeFormatW=kernel32.GetTimeFormatW") // XP
#pragma comment(linker, "/export:GetTimeFormatWWorker=kernel32.GetTimeFormatWWorker")
#pragma comment(linker, "/export:GetTimeZoneInformation=kernel32.GetTimeZoneInformation") // XP
#pragma comment(linker, "/export:GetTimeZoneInformationForYear=kernel32.GetTimeZoneInformationForYear")
#pragma comment(linker, "/export:GetUILanguageInfo=kernel32.GetUILanguageInfo")
#pragma comment(linker, "/export:GetUserDefaultLCID=kernel32.GetUserDefaultLCID") // XP
#pragma comment(linker, "/export:GetUserDefaultLangID=kernel32.GetUserDefaultLangID") // XP
#pragma comment(linker, "/export:GetUserDefaultLocaleName=kernel32.GetUserDefaultLocaleName")
#pragma comment(linker, "/export:GetUserDefaultUILanguage=kernel32.GetUserDefaultUILanguage") // XP
#pragma comment(linker, "/export:GetUserGeoID=kernel32.GetUserGeoID") // XP
#pragma comment(linker, "/export:GetUserPreferredUILanguages=kernel32.GetUserPreferredUILanguages")
#pragma comment(linker, "/export:GetVDMCurrentDirectories=kernel32.GetVDMCurrentDirectories") // XP
#pragma comment(linker, "/export:GetVersion=kernel32.GetVersion") // XP
#pragma comment(linker, "/export:GetVersionExA=kernel32.GetVersionExA") // XP
#pragma comment(linker, "/export:GetVersionExW=kernel32.GetVersionExW") // XP
#pragma comment(linker, "/export:GetVolumeInformationA=kernel32.GetVolumeInformationA") // XP
#pragma comment(linker, "/export:GetVolumeInformationByHandleW=kernel32.GetVolumeInformationByHandleW")
#pragma comment(linker, "/export:GetVolumeInformationW=kernel32.GetVolumeInformationW") // XP
#pragma comment(linker, "/export:GetVolumeNameForVolumeMountPointA=kernel32.GetVolumeNameForVolumeMountPointA") // XP
#pragma comment(linker, "/export:GetVolumeNameForVolumeMountPointW=kernel32.GetVolumeNameForVolumeMountPointW") // XP
#pragma comment(linker, "/export:GetVolumePathNameA=kernel32.GetVolumePathNameA") // XP
#pragma comment(linker, "/export:GetVolumePathNameW=kernel32.GetVolumePathNameW") // XP
#pragma comment(linker, "/export:GetVolumePathNamesForVolumeNameA=kernel32.GetVolumePathNamesForVolumeNameA") // XP
#pragma comment(linker, "/export:GetVolumePathNamesForVolumeNameW=kernel32.GetVolumePathNamesForVolumeNameW") // XP
#pragma comment(linker, "/export:GetWindowsDirectoryA=kernel32.GetWindowsDirectoryA") // XP
#pragma comment(linker, "/export:GetWindowsDirectoryW=kernel32.GetWindowsDirectoryW") // XP
#pragma comment(linker, "/export:GetWriteWatch=kernel32.GetWriteWatch") // XP
#pragma comment(linker, "/export:GetXStateFeaturesMask=kernel32.GetXStateFeaturesMask")
#pragma comment(linker, "/export:GlobalAddAtomA=kernel32.GlobalAddAtomA") // XP
#pragma comment(linker, "/export:GlobalAddAtomExA=kernel32.GlobalAddAtomExA")
#pragma comment(linker, "/export:GlobalAddAtomExW=kernel32.GlobalAddAtomExW")
#pragma comment(linker, "/export:GlobalAddAtomW=kernel32.GlobalAddAtomW") // XP
#pragma comment(linker, "/export:GlobalAlloc=kernel32.GlobalAlloc") // XP
#pragma comment(linker, "/export:GlobalCompact=kernel32.GlobalCompact") // XP
#pragma comment(linker, "/export:GlobalDeleteAtom=kernel32.GlobalDeleteAtom") // XP
#pragma comment(linker, "/export:GlobalFindAtomA=kernel32.GlobalFindAtomA") // XP
#pragma comment(linker, "/export:GlobalFindAtomW=kernel32.GlobalFindAtomW") // XP
#pragma comment(linker, "/export:GlobalFix=kernel32.GlobalFix") // XP
#pragma comment(linker, "/export:GlobalFlags=kernel32.GlobalFlags") // XP
#pragma comment(linker, "/export:GlobalFree=kernel32.GlobalFree") // XP
#pragma comment(linker, "/export:GlobalGetAtomNameA=kernel32.GlobalGetAtomNameA") // XP
#pragma comment(linker, "/export:GlobalGetAtomNameW=kernel32.GlobalGetAtomNameW") // XP
#pragma comment(linker, "/export:GlobalHandle=kernel32.GlobalHandle") // XP
#pragma comment(linker, "/export:GlobalLock=kernel32.GlobalLock") // XP
#pragma comment(linker, "/export:GlobalMemoryStatus=kernel32.GlobalMemoryStatus") // XP
#pragma comment(linker, "/export:GlobalMemoryStatusEx=kernel32.GlobalMemoryStatusEx") // XP
#pragma comment(linker, "/export:GlobalReAlloc=kernel32.GlobalReAlloc") // XP
#pragma comment(linker, "/export:GlobalSize=kernel32.GlobalSize") // XP
#pragma comment(linker, "/export:GlobalUnWire=kernel32.GlobalUnWire") // XP
#pragma comment(linker, "/export:GlobalUnfix=kernel32.GlobalUnfix") // XP
#pragma comment(linker, "/export:GlobalUnlock=kernel32.GlobalUnlock") // XP
#pragma comment(linker, "/export:GlobalWire=kernel32.GlobalWire") // XP
#pragma comment(linker, "/export:Heap32First=kernel32.Heap32First") // XP
#pragma comment(linker, "/export:Heap32ListFirst=kernel32.Heap32ListFirst") // XP
#pragma comment(linker, "/export:Heap32ListNext=kernel32.Heap32ListNext") // XP
#pragma comment(linker, "/export:Heap32Next=kernel32.Heap32Next") // XP
#pragma comment(linker, "/export:HeapAlloc=kernel32.HeapAlloc") // XP
#pragma comment(linker, "/export:HeapCompact=kernel32.HeapCompact") // XP
#pragma comment(linker, "/export:HeapCreate=kernel32.HeapCreate") // XP
#pragma comment(linker, "/export:HeapDestroy=kernel32.HeapDestroy") // XP
#pragma comment(linker, "/export:HeapFree=kernel32.HeapFree") // XP
#pragma comment(linker, "/export:HeapLock=kernel32.HeapLock") // XP
#pragma comment(linker, "/export:HeapQueryInformation=kernel32.HeapQueryInformation") // XP
#pragma comment(linker, "/export:HeapReAlloc=kernel32.HeapReAlloc") // XP
#pragma comment(linker, "/export:HeapSetInformation=kernel32.HeapSetInformation") // XP
#pragma comment(linker, "/export:HeapSize=kernel32.HeapSize") // XP
#pragma comment(linker, "/export:HeapSummary=kernel32.HeapSummary") // XP
#pragma comment(linker, "/export:HeapUnlock=kernel32.HeapUnlock") // XP
#pragma comment(linker, "/export:HeapValidate=kernel32.HeapValidate") // XP
#pragma comment(linker, "/export:HeapWalk=kernel32.HeapWalk") // XP
#pragma comment(linker, "/export:IdnToAscii=kernel32.IdnToAscii")
#pragma comment(linker, "/export:IdnToNameprepUnicode=kernel32.IdnToNameprepUnicode")
#pragma comment(linker, "/export:IdnToUnicode=kernel32.IdnToUnicode")
#pragma comment(linker, "/export:InitAtomTable=kernel32.InitAtomTable") // XP
#pragma comment(linker, "/export:InitOnceBeginInitialize=kernel32.InitOnceBeginInitialize")
#pragma comment(linker, "/export:InitOnceComplete=kernel32.InitOnceComplete")
#pragma comment(linker, "/export:InitOnceExecuteOnce=kernel32.InitOnceExecuteOnce")
#pragma comment(linker, "/export:InitOnceInitialize=kernel32.InitOnceInitialize")
#pragma comment(linker, "/export:InitializeConditionVariable=kernel32.InitializeConditionVariable")
#pragma comment(linker, "/export:InitializeContext=kernel32.InitializeContext")
#pragma comment(linker, "/export:InitializeCriticalSection=kernel32.InitializeCriticalSection") // XP
#pragma comment(linker, "/export:InitializeCriticalSectionAndSpinCount=kernel32.InitializeCriticalSectionAndSpinCount") // XP
#pragma comment(linker, "/export:InitializeCriticalSectionEx=kernel32.InitializeCriticalSectionEx")
#pragma comment(linker, "/export:InitializeEnclave=kernel32.InitializeEnclave")

BOOL WINAPI impl_InitializeProcThreadAttributeList(struct _PROC_THREAD_ATTRIBUTE_LIST *list, DWORD count, DWORD flags, SIZE_T *size);
extern "C" __declspec(dllexport) 
BOOL WINAPI InitializeProcThreadAttributeList(struct _PROC_THREAD_ATTRIBUTE_LIST *list, DWORD count, DWORD flags, SIZE_T *size)
{
    return impl_InitializeProcThreadAttributeList(list, count, flags, size);
}

#pragma comment(linker, "/export:InitializeSListHead=kernel32.InitializeSListHead") // XP
#pragma comment(linker, "/export:InitializeSRWLock=kernel32.InitializeSRWLock")
#pragma comment(linker, "/export:InitializeSynchronizationBarrier=kernel32.InitializeSynchronizationBarrier")
#pragma comment(linker, "/export:InstallELAMCertificateInfo=kernel32.InstallELAMCertificateInfo")
#pragma comment(linker, "/export:InterlockedCompareExchange=kernel32.InterlockedCompareExchange") // XP
#pragma comment(linker, "/export:InterlockedCompareExchange64=kernel32.InterlockedCompareExchange64")
#pragma comment(linker, "/export:InterlockedDecrement=kernel32.InterlockedDecrement") // XP
#pragma comment(linker, "/export:InterlockedExchange=kernel32.InterlockedExchange") // XP
#pragma comment(linker, "/export:InterlockedExchangeAdd=kernel32.InterlockedExchangeAdd") // XP
#pragma comment(linker, "/export:InterlockedFlushSList=kernel32.InterlockedFlushSList") // XP
#pragma comment(linker, "/export:InterlockedIncrement=kernel32.InterlockedIncrement") // XP
#pragma comment(linker, "/export:InterlockedPopEntrySList=kernel32.InterlockedPopEntrySList") // XP
#pragma comment(linker, "/export:InterlockedPushEntrySList=kernel32.InterlockedPushEntrySList") // XP
#pragma comment(linker, "/export:InterlockedPushListSList=kernel32.InterlockedPushListSList")
#pragma comment(linker, "/export:InterlockedPushListSListEx=kernel32.InterlockedPushListSListEx")
#pragma comment(linker, "/export:InvalidateConsoleDIBits=kernel32.InvalidateConsoleDIBits") // XP
#pragma comment(linker, "/export:IsBadCodePtr=kernel32.IsBadCodePtr") // XP
#pragma comment(linker, "/export:IsBadHugeReadPtr=kernel32.IsBadHugeReadPtr") // XP
#pragma comment(linker, "/export:IsBadHugeWritePtr=kernel32.IsBadHugeWritePtr") // XP
#pragma comment(linker, "/export:IsBadReadPtr=kernel32.IsBadReadPtr") // XP
#pragma comment(linker, "/export:IsBadStringPtrA=kernel32.IsBadStringPtrA") // XP
#pragma comment(linker, "/export:IsBadStringPtrW=kernel32.IsBadStringPtrW") // XP
#pragma comment(linker, "/export:IsBadWritePtr=kernel32.IsBadWritePtr") // XP
#pragma comment(linker, "/export:IsCalendarLeapDay=kernel32.IsCalendarLeapDay")
#pragma comment(linker, "/export:IsCalendarLeapMonth=kernel32.IsCalendarLeapMonth")
#pragma comment(linker, "/export:IsCalendarLeapYear=kernel32.IsCalendarLeapYear")
#pragma comment(linker, "/export:IsDBCSLeadByte=kernel32.IsDBCSLeadByte") // XP
#pragma comment(linker, "/export:IsDBCSLeadByteEx=kernel32.IsDBCSLeadByteEx") // XP
#pragma comment(linker, "/export:IsDebuggerPresent=kernel32.IsDebuggerPresent") // XP
#pragma comment(linker, "/export:IsEnclaveTypeSupported=kernel32.IsEnclaveTypeSupported")
#pragma comment(linker, "/export:IsNLSDefinedString=kernel32.IsNLSDefinedString")
#pragma comment(linker, "/export:IsNativeVhdBoot=kernel32.IsNativeVhdBoot")
#pragma comment(linker, "/export:IsNormalizedString=kernel32.IsNormalizedString")
#pragma comment(linker, "/export:IsProcessCritical=kernel32.IsProcessCritical")
#pragma comment(linker, "/export:IsProcessInJob=kernel32.IsProcessInJob") // XP
#pragma comment(linker, "/export:IsProcessorFeaturePresent=kernel32.IsProcessorFeaturePresent") // XP
#pragma comment(linker, "/export:IsSystemResumeAutomatic=kernel32.IsSystemResumeAutomatic") // XP
#pragma comment(linker, "/export:IsThreadAFiber=kernel32.IsThreadAFiber")
#pragma comment(linker, "/export:IsThreadpoolTimerSet=kernel32.IsThreadpoolTimerSet")
#pragma comment(linker, "/export:IsValidCalDateTime=kernel32.IsValidCalDateTime")
#pragma comment(linker, "/export:IsValidCodePage=kernel32.IsValidCodePage") // XP
#pragma comment(linker, "/export:IsValidLanguageGroup=kernel32.IsValidLanguageGroup") // XP
#pragma comment(linker, "/export:IsValidLocale=kernel32.IsValidLocale") // XP
#pragma comment(linker, "/export:IsValidLocaleName=kernel32.IsValidLocaleName")
#pragma comment(linker, "/export:IsValidNLSVersion=kernel32.IsValidNLSVersion")
#pragma comment(linker, "/export:IsWow64Process=kernel32.IsWow64Process") // XP
#pragma comment(linker, "/export:K32EmptyWorkingSet=kernel32.K32EmptyWorkingSet")
#pragma comment(linker, "/export:K32EnumDeviceDrivers=kernel32.K32EnumDeviceDrivers")
#pragma comment(linker, "/export:K32EnumPageFilesA=kernel32.K32EnumPageFilesA")
#pragma comment(linker, "/export:K32EnumPageFilesW=kernel32.K32EnumPageFilesW")
#pragma comment(linker, "/export:K32EnumProcessModules=kernel32.K32EnumProcessModules")
#pragma comment(linker, "/export:K32EnumProcessModulesEx=kernel32.K32EnumProcessModulesEx")
#pragma comment(linker, "/export:K32EnumProcesses=kernel32.K32EnumProcesses")
#pragma comment(linker, "/export:K32GetDeviceDriverBaseNameA=kernel32.K32GetDeviceDriverBaseNameA")
#pragma comment(linker, "/export:K32GetDeviceDriverBaseNameW=kernel32.K32GetDeviceDriverBaseNameW")
#pragma comment(linker, "/export:K32GetDeviceDriverFileNameA=kernel32.K32GetDeviceDriverFileNameA")
#pragma comment(linker, "/export:K32GetDeviceDriverFileNameW=kernel32.K32GetDeviceDriverFileNameW")
#pragma comment(linker, "/export:K32GetMappedFileNameA=kernel32.K32GetMappedFileNameA")
#pragma comment(linker, "/export:K32GetMappedFileNameW=kernel32.K32GetMappedFileNameW")
#pragma comment(linker, "/export:K32GetModuleBaseNameA=kernel32.K32GetModuleBaseNameA")
#pragma comment(linker, "/export:K32GetModuleBaseNameW=kernel32.K32GetModuleBaseNameW")
#pragma comment(linker, "/export:K32GetModuleFileNameExA=kernel32.K32GetModuleFileNameExA")
#pragma comment(linker, "/export:K32GetModuleFileNameExW=kernel32.K32GetModuleFileNameExW")
#pragma comment(linker, "/export:K32GetModuleInformation=kernel32.K32GetModuleInformation")
#pragma comment(linker, "/export:K32GetPerformanceInfo=kernel32.K32GetPerformanceInfo")
#pragma comment(linker, "/export:K32GetProcessImageFileNameA=kernel32.K32GetProcessImageFileNameA")
#pragma comment(linker, "/export:K32GetProcessImageFileNameW=kernel32.K32GetProcessImageFileNameW")
#pragma comment(linker, "/export:K32GetProcessMemoryInfo=kernel32.K32GetProcessMemoryInfo")
#pragma comment(linker, "/export:K32GetWsChanges=kernel32.K32GetWsChanges")
#pragma comment(linker, "/export:K32GetWsChangesEx=kernel32.K32GetWsChangesEx")
#pragma comment(linker, "/export:K32InitializeProcessForWsWatch=kernel32.K32InitializeProcessForWsWatch")
#pragma comment(linker, "/export:K32QueryWorkingSet=kernel32.K32QueryWorkingSet")
#pragma comment(linker, "/export:K32QueryWorkingSetEx=kernel32.K32QueryWorkingSetEx")
#pragma comment(linker, "/export:LCIDToLocaleName=kernel32.LCIDToLocaleName")
#pragma comment(linker, "/export:LCMapStringA=kernel32.LCMapStringA") // XP
#pragma comment(linker, "/export:LCMapStringEx=kernel32.LCMapStringEx")
#pragma comment(linker, "/export:LCMapStringW=kernel32.LCMapStringW") // XP
#pragma comment(linker, "/export:LZClose=kernel32.LZClose") // XP
#pragma comment(linker, "/export:LZCloseFile=kernel32.LZCloseFile") // XP
#pragma comment(linker, "/export:LZCopy=kernel32.LZCopy") // XP
#pragma comment(linker, "/export:LZCreateFileW=kernel32.LZCreateFileW") // XP
#pragma comment(linker, "/export:LZDone=kernel32.LZDone") // XP
#pragma comment(linker, "/export:LZInit=kernel32.LZInit") // XP
#pragma comment(linker, "/export:LZOpenFileA=kernel32.LZOpenFileA") // XP
#pragma comment(linker, "/export:LZOpenFileW=kernel32.LZOpenFileW") // XP
#pragma comment(linker, "/export:LZRead=kernel32.LZRead") // XP
#pragma comment(linker, "/export:LZSeek=kernel32.LZSeek") // XP
#pragma comment(linker, "/export:LZStart=kernel32.LZStart") // XP
#pragma comment(linker, "/export:LeaveCriticalSection=kernel32.LeaveCriticalSection") // XP
#pragma comment(linker, "/export:LeaveCriticalSectionWhenCallbackReturns=kernel32.LeaveCriticalSectionWhenCallbackReturns")
#pragma comment(linker, "/export:LoadAppInitDlls=kernel32.LoadAppInitDlls")
#pragma comment(linker, "/export:LoadEnclaveData=kernel32.LoadEnclaveData")
#pragma comment(linker, "/export:LoadLibraryA=kernel32.LoadLibraryA") // XP
#pragma comment(linker, "/export:LoadLibraryExA=kernel32.LoadLibraryExA") // XP
#pragma comment(linker, "/export:LoadLibraryExW=kernel32.LoadLibraryExW") // XP
#pragma comment(linker, "/export:LoadLibraryW=kernel32.LoadLibraryW") // XP
#pragma comment(linker, "/export:LoadModule=kernel32.LoadModule") // XP
#pragma comment(linker, "/export:LoadPackagedLibrary=kernel32.LoadPackagedLibrary")
#pragma comment(linker, "/export:LoadResource=kernel32.LoadResource") // XP
#pragma comment(linker, "/export:LoadStringBaseExW=kernel32.LoadStringBaseExW")
#pragma comment(linker, "/export:LoadStringBaseW=kernel32.LoadStringBaseW")
#pragma comment(linker, "/export:LocalAlloc=kernel32.LocalAlloc") // XP
#pragma comment(linker, "/export:LocalCompact=kernel32.LocalCompact") // XP
#pragma comment(linker, "/export:LocalFileTimeToFileTime=kernel32.LocalFileTimeToFileTime") // XP
#pragma comment(linker, "/export:LocalFlags=kernel32.LocalFlags") // XP
#pragma comment(linker, "/export:LocalFree=kernel32.LocalFree") // XP
#pragma comment(linker, "/export:LocalHandle=kernel32.LocalHandle") // XP
#pragma comment(linker, "/export:LocalLock=kernel32.LocalLock") // XP
#pragma comment(linker, "/export:LocalReAlloc=kernel32.LocalReAlloc") // XP
#pragma comment(linker, "/export:LocalShrink=kernel32.LocalShrink") // XP
#pragma comment(linker, "/export:LocalSize=kernel32.LocalSize") // XP
#pragma comment(linker, "/export:LocalUnlock=kernel32.LocalUnlock") // XP
#pragma comment(linker, "/export:LocaleNameToLCID=kernel32.LocaleNameToLCID")
#pragma comment(linker, "/export:LocateXStateFeature=kernel32.LocateXStateFeature")
#pragma comment(linker, "/export:LockFile=kernel32.LockFile") // XP
#pragma comment(linker, "/export:LockFileEx=kernel32.LockFileEx") // XP
#pragma comment(linker, "/export:LockResource=kernel32.LockResource") // XP
#pragma comment(linker, "/export:MapUserPhysicalPages=kernel32.MapUserPhysicalPages") // XP
#pragma comment(linker, "/export:MapUserPhysicalPagesScatter=kernel32.MapUserPhysicalPagesScatter") // XP
#pragma comment(linker, "/export:MapViewOfFile=kernel32.MapViewOfFile") // XP
#pragma comment(linker, "/export:MapViewOfFileEx=kernel32.MapViewOfFileEx") // XP
#pragma comment(linker, "/export:MapViewOfFileExNuma=kernel32.MapViewOfFileExNuma")
#pragma comment(linker, "/export:MapViewOfFileFromApp=kernel32.MapViewOfFileFromApp")
#pragma comment(linker, "/export:Module32First=kernel32.Module32First") // XP
#pragma comment(linker, "/export:Module32FirstW=kernel32.Module32FirstW") // XP
#pragma comment(linker, "/export:Module32Next=kernel32.Module32Next") // XP
#pragma comment(linker, "/export:Module32NextW=kernel32.Module32NextW") // XP
#pragma comment(linker, "/export:MoveFileA=kernel32.MoveFileA") // XP
#pragma comment(linker, "/export:MoveFileExA=kernel32.MoveFileExA") // XP
#pragma comment(linker, "/export:MoveFileExW=kernel32.MoveFileExW") // XP
#pragma comment(linker, "/export:MoveFileTransactedA=kernel32.MoveFileTransactedA")
#pragma comment(linker, "/export:MoveFileTransactedW=kernel32.MoveFileTransactedW")
#pragma comment(linker, "/export:MoveFileW=kernel32.MoveFileW") // XP
#pragma comment(linker, "/export:MoveFileWithProgressA=kernel32.MoveFileWithProgressA") // XP
#pragma comment(linker, "/export:MoveFileWithProgressW=kernel32.MoveFileWithProgressW") // XP
#pragma comment(linker, "/export:MulDiv=kernel32.MulDiv") // XP
#pragma comment(linker, "/export:MultiByteToWideChar=kernel32.MultiByteToWideChar") // XP
#pragma comment(linker, "/export:NeedCurrentDirectoryForExePathA=kernel32.NeedCurrentDirectoryForExePathA")
#pragma comment(linker, "/export:NeedCurrentDirectoryForExePathW=kernel32.NeedCurrentDirectoryForExePathW")
#pragma comment(linker, "/export:NlsCheckPolicy=kernel32.NlsCheckPolicy")
#pragma comment(linker, "/export:NlsEventDataDescCreate=kernel32.NlsEventDataDescCreate")
#pragma comment(linker, "/export:NlsGetCacheUpdateCount=kernel32.NlsGetCacheUpdateCount") // XP
#pragma comment(linker, "/export:NlsUpdateLocale=kernel32.NlsUpdateLocale")
#pragma comment(linker, "/export:NlsUpdateSystemLocale=kernel32.NlsUpdateSystemLocale")
#pragma comment(linker, "/export:NlsWriteEtwEvent=kernel32.NlsWriteEtwEvent")
#pragma comment(linker, "/export:NormalizeString=kernel32.NormalizeString")
#pragma comment(linker, "/export:NotifyMountMgr=kernel32.NotifyMountMgr")
#pragma comment(linker, "/export:NotifyUILanguageChange=kernel32.NotifyUILanguageChange")
#pragma comment(linker, "/export:NtVdm64CreateProcessInternalW=kernel32.NtVdm64CreateProcessInternalW")
#pragma comment(linker, "/export:OOBEComplete=kernel32.OOBEComplete")
#pragma comment(linker, "/export:OfferVirtualMemory=kernel32.OfferVirtualMemory")
#pragma comment(linker, "/export:OpenConsoleW=kernel32.OpenConsoleW") // XP
#pragma comment(linker, "/export:OpenConsoleWStub=kernel32.OpenConsoleWStub")
#pragma comment(linker, "/export:OpenEventA=kernel32.OpenEventA") // XP
#pragma comment(linker, "/export:OpenEventW=kernel32.OpenEventW") // XP
#pragma comment(linker, "/export:OpenFile=kernel32.OpenFile") // XP
#pragma comment(linker, "/export:OpenFileById=kernel32.OpenFileById")
#pragma comment(linker, "/export:OpenFileMappingA=kernel32.OpenFileMappingA") // XP
#pragma comment(linker, "/export:OpenFileMappingW=kernel32.OpenFileMappingW") // XP
#pragma comment(linker, "/export:OpenJobObjectA=kernel32.OpenJobObjectA") // XP
#pragma comment(linker, "/export:OpenJobObjectW=kernel32.OpenJobObjectW") // XP
#pragma comment(linker, "/export:OpenMutexA=kernel32.OpenMutexA") // XP
#pragma comment(linker, "/export:OpenMutexW=kernel32.OpenMutexW") // XP
#pragma comment(linker, "/export:OpenPackageInfoByFullName=kernel32.OpenPackageInfoByFullName")
#pragma comment(linker, "/export:OpenPrivateNamespaceA=kernel32.OpenPrivateNamespaceA")
#pragma comment(linker, "/export:OpenPrivateNamespaceW=kernel32.OpenPrivateNamespaceW")
#pragma comment(linker, "/export:OpenProcess=kernel32.OpenProcess") // XP
#pragma comment(linker, "/export:OpenProcessToken=kernel32.OpenProcessToken")
#pragma comment(linker, "/export:OpenProfileUserMapping=kernel32.OpenProfileUserMapping") // XP
#pragma comment(linker, "/export:OpenSemaphoreA=kernel32.OpenSemaphoreA") // XP
#pragma comment(linker, "/export:OpenSemaphoreW=kernel32.OpenSemaphoreW") // XP
#pragma comment(linker, "/export:OpenState=kernel32.OpenState")
#pragma comment(linker, "/export:OpenStateExplicit=kernel32.OpenStateExplicit")
#pragma comment(linker, "/export:OpenThread=kernel32.OpenThread") // XP
#pragma comment(linker, "/export:OpenThreadToken=kernel32.OpenThreadToken")
#pragma comment(linker, "/export:OpenWaitableTimerA=kernel32.OpenWaitableTimerA") // XP
#pragma comment(linker, "/export:OpenWaitableTimerW=kernel32.OpenWaitableTimerW") // XP
#pragma comment(linker, "/export:OutputDebugStringA=kernel32.OutputDebugStringA") // XP
#pragma comment(linker, "/export:OutputDebugStringW=kernel32.OutputDebugStringW") // XP
#pragma comment(linker, "/export:PackageFamilyNameFromFullName=kernel32.PackageFamilyNameFromFullName")
#pragma comment(linker, "/export:PackageFamilyNameFromId=kernel32.PackageFamilyNameFromId")
#pragma comment(linker, "/export:PackageFullNameFromId=kernel32.PackageFullNameFromId")
#pragma comment(linker, "/export:PackageIdFromFullName=kernel32.PackageIdFromFullName")
#pragma comment(linker, "/export:PackageNameAndPublisherIdFromFamilyName=kernel32.PackageNameAndPublisherIdFromFamilyName")
#pragma comment(linker, "/export:ParseApplicationUserModelId=kernel32.ParseApplicationUserModelId")
#pragma comment(linker, "/export:PeekConsoleInputA=kernel32.PeekConsoleInputA") // XP
#pragma comment(linker, "/export:PeekConsoleInputW=kernel32.PeekConsoleInputW") // XP
#pragma comment(linker, "/export:PeekNamedPipe=kernel32.PeekNamedPipe") // XP
#pragma comment(linker, "/export:PostQueuedCompletionStatus=kernel32.PostQueuedCompletionStatus") // XP
#pragma comment(linker, "/export:PowerClearRequest=kernel32.PowerClearRequest")
#pragma comment(linker, "/export:PowerCreateRequest=kernel32.PowerCreateRequest")
#pragma comment(linker, "/export:PowerSetRequest=kernel32.PowerSetRequest")
#pragma comment(linker, "/export:PrefetchVirtualMemory=kernel32.PrefetchVirtualMemory")
#pragma comment(linker, "/export:PrepareTape=kernel32.PrepareTape") // XP
#pragma comment(linker, "/export:PrivCopyFileExW=kernel32.PrivCopyFileExW") // XP
#pragma comment(linker, "/export:PrivMoveFileIdentityW=kernel32.PrivMoveFileIdentityW") // XP
#pragma comment(linker, "/export:Process32First=kernel32.Process32First") // XP
#pragma comment(linker, "/export:Process32FirstW=kernel32.Process32FirstW") // XP
#pragma comment(linker, "/export:Process32Next=kernel32.Process32Next") // XP
#pragma comment(linker, "/export:Process32NextW=kernel32.Process32NextW") // XP
#pragma comment(linker, "/export:ProcessIdToSessionId=kernel32.ProcessIdToSessionId") // XP
#pragma comment(linker, "/export:PssCaptureSnapshot=kernel32.PssCaptureSnapshot")
#pragma comment(linker, "/export:PssDuplicateSnapshot=kernel32.PssDuplicateSnapshot")
#pragma comment(linker, "/export:PssFreeSnapshot=kernel32.PssFreeSnapshot")
#pragma comment(linker, "/export:PssQuerySnapshot=kernel32.PssQuerySnapshot")
#pragma comment(linker, "/export:PssWalkMarkerCreate=kernel32.PssWalkMarkerCreate")
#pragma comment(linker, "/export:PssWalkMarkerFree=kernel32.PssWalkMarkerFree")
#pragma comment(linker, "/export:PssWalkMarkerGetPosition=kernel32.PssWalkMarkerGetPosition")
#pragma comment(linker, "/export:PssWalkMarkerRewind=kernel32.PssWalkMarkerRewind")
#pragma comment(linker, "/export:PssWalkMarkerSeek=kernel32.PssWalkMarkerSeek")
#pragma comment(linker, "/export:PssWalkMarkerSeekToBeginning=kernel32.PssWalkMarkerSeekToBeginning")
#pragma comment(linker, "/export:PssWalkMarkerSetPosition=kernel32.PssWalkMarkerSetPosition")
#pragma comment(linker, "/export:PssWalkMarkerTell=kernel32.PssWalkMarkerTell")
#pragma comment(linker, "/export:PssWalkSnapshot=kernel32.PssWalkSnapshot")
#pragma comment(linker, "/export:PulseEvent=kernel32.PulseEvent") // XP
#pragma comment(linker, "/export:PurgeComm=kernel32.PurgeComm") // XP
#pragma comment(linker, "/export:QueryActCtxSettingsW=kernel32.QueryActCtxSettingsW")
#pragma comment(linker, "/export:QueryActCtxSettingsWWorker=kernel32.QueryActCtxSettingsWWorker")
#pragma comment(linker, "/export:QueryActCtxW=kernel32.QueryActCtxW") // XP
#pragma comment(linker, "/export:QueryActCtxWWorker=kernel32.QueryActCtxWWorker")
#pragma comment(linker, "/export:QueryDepthSList=kernel32.QueryDepthSList") // XP
#pragma comment(linker, "/export:QueryDosDeviceA=kernel32.QueryDosDeviceA") // XP
#pragma comment(linker, "/export:QueryDosDeviceW=kernel32.QueryDosDeviceW") // XP
#pragma comment(linker, "/export:QueryFullProcessImageNameA=kernel32.QueryFullProcessImageNameA")
#pragma comment(linker, "/export:QueryFullProcessImageNameW=kernel32.QueryFullProcessImageNameW")
#pragma comment(linker, "/export:QueryIdleProcessorCycleTime=kernel32.QueryIdleProcessorCycleTime")
#pragma comment(linker, "/export:QueryIdleProcessorCycleTimeEx=kernel32.QueryIdleProcessorCycleTimeEx")
#pragma comment(linker, "/export:QueryInformationJobObject=kernel32.QueryInformationJobObject") // XP
#pragma comment(linker, "/export:QueryIoRateControlInformationJobObject=kernel32.QueryIoRateControlInformationJobObject")
#pragma comment(linker, "/export:QueryMemoryResourceNotification=kernel32.QueryMemoryResourceNotification") // XP
#pragma comment(linker, "/export:QueryPerformanceCounter=kernel32.QueryPerformanceCounter") // XP
#pragma comment(linker, "/export:QueryPerformanceFrequency=kernel32.QueryPerformanceFrequency") // XP
#pragma comment(linker, "/export:QueryProcessAffinityUpdateMode=kernel32.QueryProcessAffinityUpdateMode")
#pragma comment(linker, "/export:QueryProcessCycleTime=kernel32.QueryProcessCycleTime")
#pragma comment(linker, "/export:QueryProtectedPolicy=kernel32.QueryProtectedPolicy")
#pragma comment(linker, "/export:QueryThreadCycleTime=kernel32.QueryThreadCycleTime")
#pragma comment(linker, "/export:QueryThreadProfiling=kernel32.QueryThreadProfiling")
#pragma comment(linker, "/export:QueryThreadpoolStackInformation=kernel32.QueryThreadpoolStackInformation")
#pragma comment(linker, "/export:QueryUnbiasedInterruptTime=kernel32.QueryUnbiasedInterruptTime")
#pragma comment(linker, "/export:QueueUserAPC=kernel32.QueueUserAPC") // XP
#pragma comment(linker, "/export:QueueUserWorkItem=kernel32.QueueUserWorkItem") // XP
#pragma comment(linker, "/export:QuirkGetData2Worker=kernel32.QuirkGetData2Worker")
#pragma comment(linker, "/export:QuirkGetDataWorker=kernel32.QuirkGetDataWorker")
#pragma comment(linker, "/export:QuirkIsEnabled2Worker=kernel32.QuirkIsEnabled2Worker")
#pragma comment(linker, "/export:QuirkIsEnabled3Worker=kernel32.QuirkIsEnabled3Worker")
#pragma comment(linker, "/export:QuirkIsEnabledForPackage2Worker=kernel32.QuirkIsEnabledForPackage2Worker")
#pragma comment(linker, "/export:QuirkIsEnabledForPackage3Worker=kernel32.QuirkIsEnabledForPackage3Worker")
#pragma comment(linker, "/export:QuirkIsEnabledForPackage4Worker=kernel32.QuirkIsEnabledForPackage4Worker")
#pragma comment(linker, "/export:QuirkIsEnabledForPackageWorker=kernel32.QuirkIsEnabledForPackageWorker")
#pragma comment(linker, "/export:QuirkIsEnabledForProcessWorker=kernel32.QuirkIsEnabledForProcessWorker")
#pragma comment(linker, "/export:QuirkIsEnabledWorker=kernel32.QuirkIsEnabledWorker")
#pragma comment(linker, "/export:RaiseException=kernel32.RaiseException") // XP
#pragma comment(linker, "/export:RaiseFailFastException=kernel32.RaiseFailFastException")
#pragma comment(linker, "/export:RaiseInvalid16BitExeError=kernel32.RaiseInvalid16BitExeError")
#pragma comment(linker, "/export:ReOpenFile=kernel32.ReOpenFile")
#pragma comment(linker, "/export:ReadConsoleA=kernel32.ReadConsoleA") // XP
#pragma comment(linker, "/export:ReadConsoleInputA=kernel32.ReadConsoleInputA") // XP
#pragma comment(linker, "/export:ReadConsoleInputExA=kernel32.ReadConsoleInputExA") // XP
#pragma comment(linker, "/export:ReadConsoleInputExW=kernel32.ReadConsoleInputExW") // XP
#pragma comment(linker, "/export:ReadConsoleInputW=kernel32.ReadConsoleInputW") // XP
#pragma comment(linker, "/export:ReadConsoleOutputA=kernel32.ReadConsoleOutputA") // XP
#pragma comment(linker, "/export:ReadConsoleOutputAttribute=kernel32.ReadConsoleOutputAttribute") // XP
#pragma comment(linker, "/export:ReadConsoleOutputCharacterA=kernel32.ReadConsoleOutputCharacterA") // XP
#pragma comment(linker, "/export:ReadConsoleOutputCharacterW=kernel32.ReadConsoleOutputCharacterW") // XP
#pragma comment(linker, "/export:ReadConsoleOutputW=kernel32.ReadConsoleOutputW") // XP
#pragma comment(linker, "/export:ReadConsoleW=kernel32.ReadConsoleW") // XP
#pragma comment(linker, "/export:ReadDirectoryChangesW=kernel32.ReadDirectoryChangesW") // XP
#pragma comment(linker, "/export:ReadFile=kernel32.ReadFile") // XP
#pragma comment(linker, "/export:ReadFileEx=kernel32.ReadFileEx") // XP
#pragma comment(linker, "/export:ReadFileScatter=kernel32.ReadFileScatter") // XP
#pragma comment(linker, "/export:ReadProcessMemory=kernel32.ReadProcessMemory") // XP
#pragma comment(linker, "/export:ReadThreadProfilingData=kernel32.ReadThreadProfilingData")
#pragma comment(linker, "/export:ReclaimVirtualMemory=kernel32.ReclaimVirtualMemory")
#pragma comment(linker, "/export:RegCloseKey=kernel32.RegCloseKey")
#pragma comment(linker, "/export:RegCopyTreeW=kernel32.RegCopyTreeW")
#pragma comment(linker, "/export:RegCreateKeyExA=kernel32.RegCreateKeyExA")
#pragma comment(linker, "/export:RegCreateKeyExW=kernel32.RegCreateKeyExW")
#pragma comment(linker, "/export:RegDeleteKeyExA=kernel32.RegDeleteKeyExA")
#pragma comment(linker, "/export:RegDeleteKeyExW=kernel32.RegDeleteKeyExW")
#pragma comment(linker, "/export:RegDeleteTreeA=kernel32.RegDeleteTreeA")
#pragma comment(linker, "/export:RegDeleteTreeW=kernel32.RegDeleteTreeW")
#pragma comment(linker, "/export:RegDeleteValueA=kernel32.RegDeleteValueA")
#pragma comment(linker, "/export:RegDeleteValueW=kernel32.RegDeleteValueW")
#pragma comment(linker, "/export:RegDisablePredefinedCacheEx=kernel32.RegDisablePredefinedCacheEx")
#pragma comment(linker, "/export:RegEnumKeyExA=kernel32.RegEnumKeyExA")
#pragma comment(linker, "/export:RegEnumKeyExW=kernel32.RegEnumKeyExW")
#pragma comment(linker, "/export:RegEnumValueA=kernel32.RegEnumValueA")
#pragma comment(linker, "/export:RegEnumValueW=kernel32.RegEnumValueW")
#pragma comment(linker, "/export:RegFlushKey=kernel32.RegFlushKey")
#pragma comment(linker, "/export:RegGetKeySecurity=kernel32.RegGetKeySecurity")
#pragma comment(linker, "/export:RegGetValueA=kernel32.RegGetValueA")
#pragma comment(linker, "/export:RegGetValueW=kernel32.RegGetValueW")
#pragma comment(linker, "/export:RegLoadKeyA=kernel32.RegLoadKeyA")
#pragma comment(linker, "/export:RegLoadKeyW=kernel32.RegLoadKeyW")
#pragma comment(linker, "/export:RegLoadMUIStringA=kernel32.RegLoadMUIStringA")
#pragma comment(linker, "/export:RegLoadMUIStringW=kernel32.RegLoadMUIStringW")
#pragma comment(linker, "/export:RegNotifyChangeKeyValue=kernel32.RegNotifyChangeKeyValue")
#pragma comment(linker, "/export:RegOpenCurrentUser=kernel32.RegOpenCurrentUser")
#pragma comment(linker, "/export:RegOpenKeyExA=kernel32.RegOpenKeyExA")
#pragma comment(linker, "/export:RegOpenKeyExW=kernel32.RegOpenKeyExW")
#pragma comment(linker, "/export:RegOpenUserClassesRoot=kernel32.RegOpenUserClassesRoot")
#pragma comment(linker, "/export:RegQueryInfoKeyA=kernel32.RegQueryInfoKeyA")
#pragma comment(linker, "/export:RegQueryInfoKeyW=kernel32.RegQueryInfoKeyW")
#pragma comment(linker, "/export:RegQueryValueExA=kernel32.RegQueryValueExA")
#pragma comment(linker, "/export:RegQueryValueExW=kernel32.RegQueryValueExW")
#pragma comment(linker, "/export:RegRestoreKeyA=kernel32.RegRestoreKeyA")
#pragma comment(linker, "/export:RegRestoreKeyW=kernel32.RegRestoreKeyW")
#pragma comment(linker, "/export:RegSaveKeyExA=kernel32.RegSaveKeyExA")
#pragma comment(linker, "/export:RegSaveKeyExW=kernel32.RegSaveKeyExW")
#pragma comment(linker, "/export:RegSetKeySecurity=kernel32.RegSetKeySecurity")
#pragma comment(linker, "/export:RegSetValueExA=kernel32.RegSetValueExA")
#pragma comment(linker, "/export:RegSetValueExW=kernel32.RegSetValueExW")
#pragma comment(linker, "/export:RegUnLoadKeyA=kernel32.RegUnLoadKeyA")
#pragma comment(linker, "/export:RegUnLoadKeyW=kernel32.RegUnLoadKeyW")
#pragma comment(linker, "/export:RegisterApplicationRecoveryCallback=kernel32.RegisterApplicationRecoveryCallback")
#pragma comment(linker, "/export:RegisterApplicationRestart=kernel32.RegisterApplicationRestart")
#pragma comment(linker, "/export:RegisterBadMemoryNotification=kernel32.RegisterBadMemoryNotification")
#pragma comment(linker, "/export:RegisterConsoleIME=kernel32.RegisterConsoleIME") // XP
#pragma comment(linker, "/export:RegisterConsoleOS2=kernel32.RegisterConsoleOS2") // XP
#pragma comment(linker, "/export:RegisterConsoleVDM=kernel32.RegisterConsoleVDM") // XP
#pragma comment(linker, "/export:RegisterWaitForInputIdle=kernel32.RegisterWaitForInputIdle") // XP
#pragma comment(linker, "/export:RegisterWaitForSingleObject=kernel32.RegisterWaitForSingleObject") // XP
#pragma comment(linker, "/export:RegisterWaitForSingleObjectEx=kernel32.RegisterWaitForSingleObjectEx") // XP
#pragma comment(linker, "/export:RegisterWaitUntilOOBECompleted=kernel32.RegisterWaitUntilOOBECompleted")
#pragma comment(linker, "/export:RegisterWowBaseHandlers=kernel32.RegisterWowBaseHandlers") // XP
#pragma comment(linker, "/export:RegisterWowExec=kernel32.RegisterWowExec") // XP
#pragma comment(linker, "/export:ReleaseActCtx=kernel32.ReleaseActCtx") // XP
#pragma comment(linker, "/export:ReleaseActCtxWorker=kernel32.ReleaseActCtxWorker")
#pragma comment(linker, "/export:ReleaseMutex=kernel32.ReleaseMutex") // XP
#pragma comment(linker, "/export:ReleaseMutexWhenCallbackReturns=kernel32.ReleaseMutexWhenCallbackReturns")
#pragma comment(linker, "/export:ReleaseSRWLockExclusive=kernel32.ReleaseSRWLockExclusive")
#pragma comment(linker, "/export:ReleaseSRWLockShared=kernel32.ReleaseSRWLockShared")
#pragma comment(linker, "/export:ReleaseSemaphore=kernel32.ReleaseSemaphore") // XP
#pragma comment(linker, "/export:ReleaseSemaphoreWhenCallbackReturns=kernel32.ReleaseSemaphoreWhenCallbackReturns")
#pragma comment(linker, "/export:RemoveDirectoryA=kernel32.RemoveDirectoryA") // XP
#pragma comment(linker, "/export:RemoveDirectoryTransactedA=kernel32.RemoveDirectoryTransactedA")
#pragma comment(linker, "/export:RemoveDirectoryTransactedW=kernel32.RemoveDirectoryTransactedW")
#pragma comment(linker, "/export:RemoveDirectoryW=kernel32.RemoveDirectoryW") // XP
#pragma comment(linker, "/export:RemoveDllDirectory=kernel32.RemoveDllDirectory")
#pragma comment(linker, "/export:RemoveLocalAlternateComputerNameA=kernel32.RemoveLocalAlternateComputerNameA") // XP
#pragma comment(linker, "/export:RemoveLocalAlternateComputerNameW=kernel32.RemoveLocalAlternateComputerNameW") // XP
#pragma comment(linker, "/export:RemoveSecureMemoryCacheCallback=kernel32.RemoveSecureMemoryCacheCallback")
#pragma comment(linker, "/export:RemoveVectoredContinueHandler=kernel32.RemoveVectoredContinueHandler")
#pragma comment(linker, "/export:RemoveVectoredExceptionHandler=kernel32.RemoveVectoredExceptionHandler") // XP
#pragma comment(linker, "/export:ReplaceFile=kernel32.ReplaceFile") // XP
#pragma comment(linker, "/export:ReplaceFileA=kernel32.ReplaceFileA") // XP
#pragma comment(linker, "/export:ReplaceFileW=kernel32.ReplaceFileW") // XP
#pragma comment(linker, "/export:ReplacePartitionUnit=kernel32.ReplacePartitionUnit")
#pragma comment(linker, "/export:RequestDeviceWakeup=kernel32.RequestDeviceWakeup") // XP
#pragma comment(linker, "/export:RequestWakeupLatency=kernel32.RequestWakeupLatency") // XP
#pragma comment(linker, "/export:ResetEvent=kernel32.ResetEvent") // XP
#pragma comment(linker, "/export:ResetWriteWatch=kernel32.ResetWriteWatch") // XP
#pragma comment(linker, "/export:ResolveDelayLoadedAPI=kernel32.ResolveDelayLoadedAPI")
#pragma comment(linker, "/export:ResolveDelayLoadsFromDll=kernel32.ResolveDelayLoadsFromDll")
#pragma comment(linker, "/export:ResolveLocaleName=kernel32.ResolveLocaleName")
#pragma comment(linker, "/export:RestoreLastError=kernel32.RestoreLastError") // XP
#pragma comment(linker, "/export:ResumeThread=kernel32.ResumeThread") // XP
#pragma comment(linker, "/export:RtlCaptureContext=kernel32.RtlCaptureContext") // XP
#pragma comment(linker, "/export:RtlCaptureStackBackTrace=kernel32.RtlCaptureStackBackTrace") // XP
#pragma comment(linker, "/export:RtlFillMemory=kernel32.RtlFillMemory") // XP
#pragma comment(linker, "/export:RtlMoveMemory=kernel32.RtlMoveMemory") // XP
#pragma comment(linker, "/export:RtlPcToFileHeader=kernel32.RtlPcToFileHeader")
#pragma comment(linker, "/export:RtlUnwind=kernel32.RtlUnwind") // XP
#pragma comment(linker, "/export:RtlZeroMemory=kernel32.RtlZeroMemory") // XP
#pragma comment(linker, "/export:ScrollConsoleScreenBufferA=kernel32.ScrollConsoleScreenBufferA") // XP
#pragma comment(linker, "/export:ScrollConsoleScreenBufferW=kernel32.ScrollConsoleScreenBufferW") // XP
#pragma comment(linker, "/export:SearchPathA=kernel32.SearchPathA") // XP
#pragma comment(linker, "/export:SearchPathW=kernel32.SearchPathW") // XP
#pragma comment(linker, "/export:SetCachedSigningLevel=kernel32.SetCachedSigningLevel")
#pragma comment(linker, "/export:SetCalendarInfoA=kernel32.SetCalendarInfoA") // XP
#pragma comment(linker, "/export:SetCalendarInfoW=kernel32.SetCalendarInfoW") // XP
#pragma comment(linker, "/export:SetComPlusPackageInstallStatus=kernel32.SetComPlusPackageInstallStatus") // XP
#pragma comment(linker, "/export:SetCommBreak=kernel32.SetCommBreak") // XP
#pragma comment(linker, "/export:SetCommConfig=kernel32.SetCommConfig") // XP
#pragma comment(linker, "/export:SetCommMask=kernel32.SetCommMask") // XP
#pragma comment(linker, "/export:SetCommState=kernel32.SetCommState") // XP
#pragma comment(linker, "/export:SetCommTimeouts=kernel32.SetCommTimeouts") // XP
#pragma comment(linker, "/export:SetComputerNameA=kernel32.SetComputerNameA") // XP
#pragma comment(linker, "/export:SetComputerNameEx2W=kernel32.SetComputerNameEx2W")
#pragma comment(linker, "/export:SetComputerNameExA=kernel32.SetComputerNameExA") // XP
#pragma comment(linker, "/export:SetComputerNameExW=kernel32.SetComputerNameExW") // XP
#pragma comment(linker, "/export:SetComputerNameW=kernel32.SetComputerNameW") // XP
#pragma comment(linker, "/export:SetConsoleActiveScreenBuffer=kernel32.SetConsoleActiveScreenBuffer") // XP
#pragma comment(linker, "/export:SetConsoleCP=kernel32.SetConsoleCP") // XP
#pragma comment(linker, "/export:SetConsoleCtrlHandler=kernel32.SetConsoleCtrlHandler") // XP
#pragma comment(linker, "/export:SetConsoleCursor=kernel32.SetConsoleCursor") // XP
#pragma comment(linker, "/export:SetConsoleCursorInfo=kernel32.SetConsoleCursorInfo") // XP
#pragma comment(linker, "/export:SetConsoleCursorMode=kernel32.SetConsoleCursorMode") // XP
#pragma comment(linker, "/export:SetConsoleCursorPosition=kernel32.SetConsoleCursorPosition") // XP
#pragma comment(linker, "/export:SetConsoleDisplayMode=kernel32.SetConsoleDisplayMode") // XP
#pragma comment(linker, "/export:SetConsoleFont=kernel32.SetConsoleFont") // XP
#pragma comment(linker, "/export:SetConsoleHardwareState=kernel32.SetConsoleHardwareState") // XP
#pragma comment(linker, "/export:SetConsoleHistoryInfo=kernel32.SetConsoleHistoryInfo")
#pragma comment(linker, "/export:SetConsoleIcon=kernel32.SetConsoleIcon") // XP
#pragma comment(linker, "/export:SetConsoleInputExeNameA=kernel32.SetConsoleInputExeNameA") // XP
#pragma comment(linker, "/export:SetConsoleInputExeNameW=kernel32.SetConsoleInputExeNameW") // XP
#pragma comment(linker, "/export:SetConsoleKeyShortcuts=kernel32.SetConsoleKeyShortcuts") // XP
#pragma comment(linker, "/export:SetConsoleLocalEUDC=kernel32.SetConsoleLocalEUDC") // XP
#pragma comment(linker, "/export:SetConsoleMaximumWindowSize=kernel32.SetConsoleMaximumWindowSize") // XP
#pragma comment(linker, "/export:SetConsoleMenuClose=kernel32.SetConsoleMenuClose") // XP
#pragma comment(linker, "/export:SetConsoleMode=kernel32.SetConsoleMode") // XP
#pragma comment(linker, "/export:SetConsoleNlsMode=kernel32.SetConsoleNlsMode") // XP
#pragma comment(linker, "/export:SetConsoleNumberOfCommandsA=kernel32.SetConsoleNumberOfCommandsA") // XP
#pragma comment(linker, "/export:SetConsoleNumberOfCommandsW=kernel32.SetConsoleNumberOfCommandsW") // XP
#pragma comment(linker, "/export:SetConsoleOS2OemFormat=kernel32.SetConsoleOS2OemFormat") // XP
#pragma comment(linker, "/export:SetConsoleOutputCP=kernel32.SetConsoleOutputCP") // XP
#pragma comment(linker, "/export:SetConsolePalette=kernel32.SetConsolePalette") // XP
#pragma comment(linker, "/export:SetConsoleScreenBufferInfoEx=kernel32.SetConsoleScreenBufferInfoEx")
#pragma comment(linker, "/export:SetConsoleScreenBufferSize=kernel32.SetConsoleScreenBufferSize") // XP
#pragma comment(linker, "/export:SetConsoleTextAttribute=kernel32.SetConsoleTextAttribute") // XP
#pragma comment(linker, "/export:SetConsoleTitleA=kernel32.SetConsoleTitleA") // XP
#pragma comment(linker, "/export:SetConsoleTitleW=kernel32.SetConsoleTitleW") // XP
#pragma comment(linker, "/export:SetConsoleWindowInfo=kernel32.SetConsoleWindowInfo") // XP
#pragma comment(linker, "/export:SetCriticalSectionSpinCount=kernel32.SetCriticalSectionSpinCount") // XP
#pragma comment(linker, "/export:SetCurrentConsoleFontEx=kernel32.SetCurrentConsoleFontEx")
#pragma comment(linker, "/export:SetCurrentDirectoryA=kernel32.SetCurrentDirectoryA") // XP
#pragma comment(linker, "/export:SetCurrentDirectoryW=kernel32.SetCurrentDirectoryW") // XP
#pragma comment(linker, "/export:SetDefaultCommConfigA=kernel32.SetDefaultCommConfigA") // XP
#pragma comment(linker, "/export:SetDefaultCommConfigW=kernel32.SetDefaultCommConfigW") // XP
#pragma comment(linker, "/export:SetDefaultDllDirectories=kernel32.SetDefaultDllDirectories")
#pragma comment(linker, "/export:SetDllDirectoryA=kernel32.SetDllDirectoryA") // XP
#pragma comment(linker, "/export:SetDllDirectoryW=kernel32.SetDllDirectoryW") // XP
#pragma comment(linker, "/export:SetDynamicTimeZoneInformation=kernel32.SetDynamicTimeZoneInformation")
#pragma comment(linker, "/export:SetEndOfFile=kernel32.SetEndOfFile") // XP
#pragma comment(linker, "/export:SetEnvironmentStringsA=kernel32.SetEnvironmentStringsA")
#pragma comment(linker, "/export:SetEnvironmentStringsW=kernel32.SetEnvironmentStringsW")
#pragma comment(linker, "/export:SetEnvironmentVariableA=kernel32.SetEnvironmentVariableA") // XP
#pragma comment(linker, "/export:SetEnvironmentVariableW=kernel32.SetEnvironmentVariableW") // XP
#pragma comment(linker, "/export:SetErrorMode=kernel32.SetErrorMode") // XP
#pragma comment(linker, "/export:SetEvent=kernel32.SetEvent") // XP
#pragma comment(linker, "/export:SetEventWhenCallbackReturns=kernel32.SetEventWhenCallbackReturns")
#pragma comment(linker, "/export:SetFileApisToANSI=kernel32.SetFileApisToANSI") // XP
#pragma comment(linker, "/export:SetFileApisToOEM=kernel32.SetFileApisToOEM") // XP
#pragma comment(linker, "/export:SetFileAttributesA=kernel32.SetFileAttributesA") // XP
#pragma comment(linker, "/export:SetFileAttributesTransactedA=kernel32.SetFileAttributesTransactedA")
#pragma comment(linker, "/export:SetFileAttributesTransactedW=kernel32.SetFileAttributesTransactedW")
#pragma comment(linker, "/export:SetFileAttributesW=kernel32.SetFileAttributesW") // XP
#pragma comment(linker, "/export:SetFileBandwidthReservation=kernel32.SetFileBandwidthReservation")
#pragma comment(linker, "/export:SetFileCompletionNotificationModes=kernel32.SetFileCompletionNotificationModes")
#pragma comment(linker, "/export:SetFileInformationByHandle=kernel32.SetFileInformationByHandle")
#pragma comment(linker, "/export:SetFileIoOverlappedRange=kernel32.SetFileIoOverlappedRange")
#pragma comment(linker, "/export:SetFilePointer=kernel32.SetFilePointer") // XP
#pragma comment(linker, "/export:SetFilePointerEx=kernel32.SetFilePointerEx") // XP
#pragma comment(linker, "/export:SetFileShortNameA=kernel32.SetFileShortNameA") // XP
#pragma comment(linker, "/export:SetFileShortNameW=kernel32.SetFileShortNameW") // XP
#pragma comment(linker, "/export:SetFileTime=kernel32.SetFileTime") // XP
#pragma comment(linker, "/export:SetFileValidData=kernel32.SetFileValidData") // XP
#pragma comment(linker, "/export:SetFirmwareEnvironmentVariableA=kernel32.SetFirmwareEnvironmentVariableA") // XP
#pragma comment(linker, "/export:SetFirmwareEnvironmentVariableExA=kernel32.SetFirmwareEnvironmentVariableExA")
#pragma comment(linker, "/export:SetFirmwareEnvironmentVariableExW=kernel32.SetFirmwareEnvironmentVariableExW")
#pragma comment(linker, "/export:SetFirmwareEnvironmentVariableW=kernel32.SetFirmwareEnvironmentVariableW") // XP
#pragma comment(linker, "/export:SetHandleContext=kernel32.SetHandleContext") // XP
#pragma comment(linker, "/export:SetHandleCount=kernel32.SetHandleCount") // XP
#pragma comment(linker, "/export:SetHandleInformation=kernel32.SetHandleInformation") // XP
#pragma comment(linker, "/export:SetInformationJobObject=kernel32.SetInformationJobObject") // XP
#pragma comment(linker, "/export:SetIoRateControlInformationJobObject=kernel32.SetIoRateControlInformationJobObject")
#pragma comment(linker, "/export:SetLastConsoleEventActive=kernel32.SetLastConsoleEventActive") // XP
#pragma comment(linker, "/export:SetLastError=kernel32.SetLastError") // XP
#pragma comment(linker, "/export:SetLocalPrimaryComputerNameA=kernel32.SetLocalPrimaryComputerNameA") // XP
#pragma comment(linker, "/export:SetLocalPrimaryComputerNameW=kernel32.SetLocalPrimaryComputerNameW") // XP
#pragma comment(linker, "/export:SetLocalTime=kernel32.SetLocalTime") // XP
#pragma comment(linker, "/export:SetLocaleInfoA=kernel32.SetLocaleInfoA") // XP
#pragma comment(linker, "/export:SetLocaleInfoW=kernel32.SetLocaleInfoW") // XP
#pragma comment(linker, "/export:SetMailslotInfo=kernel32.SetMailslotInfo") // XP
#pragma comment(linker, "/export:SetMessageWaitingIndicator=kernel32.SetMessageWaitingIndicator") // XP
#pragma comment(linker, "/export:SetNamedPipeAttribute=kernel32.SetNamedPipeAttribute")
#pragma comment(linker, "/export:SetNamedPipeHandleState=kernel32.SetNamedPipeHandleState") // XP
#pragma comment(linker, "/export:SetPriorityClass=kernel32.SetPriorityClass") // XP
#pragma comment(linker, "/export:SetProcessAffinityMask=kernel32.SetProcessAffinityMask") // XP
#pragma comment(linker, "/export:SetProcessAffinityUpdateMode=kernel32.SetProcessAffinityUpdateMode")
#pragma comment(linker, "/export:SetProcessDEPPolicy=kernel32.SetProcessDEPPolicy") // XP
#pragma comment(linker, "/export:SetProcessDefaultCpuSets=kernel32.SetProcessDefaultCpuSets")
#pragma comment(linker, "/export:SetProcessInformation=kernel32.SetProcessInformation")
#pragma comment(linker, "/export:SetProcessMitigationPolicy=kernel32.SetProcessMitigationPolicy")
#pragma comment(linker, "/export:SetProcessPreferredUILanguages=kernel32.SetProcessPreferredUILanguages")
#pragma comment(linker, "/export:SetProcessPriorityBoost=kernel32.SetProcessPriorityBoost") // XP
#pragma comment(linker, "/export:SetProcessShutdownParameters=kernel32.SetProcessShutdownParameters") // XP
#pragma comment(linker, "/export:SetProcessWorkingSetSize=kernel32.SetProcessWorkingSetSize") // XP
#pragma comment(linker, "/export:SetProcessWorkingSetSizeEx=kernel32.SetProcessWorkingSetSizeEx")
#pragma comment(linker, "/export:SetProtectedPolicy=kernel32.SetProtectedPolicy")
#pragma comment(linker, "/export:SetSearchPathMode=kernel32.SetSearchPathMode")
#pragma comment(linker, "/export:SetStdHandle=kernel32.SetStdHandle") // XP
#pragma comment(linker, "/export:SetStdHandleEx=kernel32.SetStdHandleEx")
#pragma comment(linker, "/export:SetSystemFileCacheSize=kernel32.SetSystemFileCacheSize")
#pragma comment(linker, "/export:SetSystemPowerState=kernel32.SetSystemPowerState") // XP
#pragma comment(linker, "/export:SetSystemTime=kernel32.SetSystemTime") // XP
#pragma comment(linker, "/export:SetSystemTimeAdjustment=kernel32.SetSystemTimeAdjustment") // XP
#pragma comment(linker, "/export:SetTapeParameters=kernel32.SetTapeParameters") // XP
#pragma comment(linker, "/export:SetTapePosition=kernel32.SetTapePosition") // XP
#pragma comment(linker, "/export:SetTermsrvAppInstallMode=kernel32.SetTermsrvAppInstallMode") // XP
#pragma comment(linker, "/export:SetThreadAffinityMask=kernel32.SetThreadAffinityMask") // XP
#pragma comment(linker, "/export:SetThreadContext=kernel32.SetThreadContext") // XP
#pragma comment(linker, "/export:SetThreadErrorMode=kernel32.SetThreadErrorMode")
#pragma comment(linker, "/export:SetThreadExecutionState=kernel32.SetThreadExecutionState") // XP
#pragma comment(linker, "/export:SetThreadGroupAffinity=kernel32.SetThreadGroupAffinity")
#pragma comment(linker, "/export:SetThreadIdealProcessor=kernel32.SetThreadIdealProcessor") // XP
#pragma comment(linker, "/export:SetThreadIdealProcessorEx=kernel32.SetThreadIdealProcessorEx")
#pragma comment(linker, "/export:SetThreadInformation=kernel32.SetThreadInformation")
#pragma comment(linker, "/export:SetThreadLocale=kernel32.SetThreadLocale") // XP
#pragma comment(linker, "/export:SetThreadPreferredUILanguages=kernel32.SetThreadPreferredUILanguages")
#pragma comment(linker, "/export:SetThreadPriority=kernel32.SetThreadPriority") // XP
#pragma comment(linker, "/export:SetThreadPriorityBoost=kernel32.SetThreadPriorityBoost") // XP
#pragma comment(linker, "/export:SetThreadSelectedCpuSets=kernel32.SetThreadSelectedCpuSets")
#pragma comment(linker, "/export:SetThreadStackGuarantee=kernel32.SetThreadStackGuarantee")
#pragma comment(linker, "/export:SetThreadToken=kernel32.SetThreadToken")
#pragma comment(linker, "/export:SetThreadUILanguage=kernel32.SetThreadUILanguage") // XP
#pragma comment(linker, "/export:SetThreadpoolStackInformation=kernel32.SetThreadpoolStackInformation")
#pragma comment(linker, "/export:SetThreadpoolThreadMaximum=kernel32.SetThreadpoolThreadMaximum")
#pragma comment(linker, "/export:SetThreadpoolThreadMinimum=kernel32.SetThreadpoolThreadMinimum")
#pragma comment(linker, "/export:SetThreadpoolTimer=kernel32.SetThreadpoolTimer")
#pragma comment(linker, "/export:SetThreadpoolTimerEx=kernel32.SetThreadpoolTimerEx")
#pragma comment(linker, "/export:SetThreadpoolWait=kernel32.SetThreadpoolWait")
#pragma comment(linker, "/export:SetThreadpoolWaitEx=kernel32.SetThreadpoolWaitEx")
#pragma comment(linker, "/export:SetTimeZoneInformation=kernel32.SetTimeZoneInformation") // XP
#pragma comment(linker, "/export:SetTimerQueueTimer=kernel32.SetTimerQueueTimer") // XP
#pragma comment(linker, "/export:SetUnhandledExceptionFilter=kernel32.SetUnhandledExceptionFilter") // XP
#pragma comment(linker, "/export:SetUserGeoID=kernel32.SetUserGeoID") // XP
#pragma comment(linker, "/export:SetVDMCurrentDirectories=kernel32.SetVDMCurrentDirectories") // XP
#pragma comment(linker, "/export:SetVolumeLabelA=kernel32.SetVolumeLabelA") // XP
#pragma comment(linker, "/export:SetVolumeLabelW=kernel32.SetVolumeLabelW") // XP
#pragma comment(linker, "/export:SetVolumeMountPointA=kernel32.SetVolumeMountPointA") // XP
#pragma comment(linker, "/export:SetVolumeMountPointW=kernel32.SetVolumeMountPointW") // XP
#pragma comment(linker, "/export:SetVolumeMountPointWStub=kernel32.SetVolumeMountPointWStub")
#pragma comment(linker, "/export:SetWaitableTimer=kernel32.SetWaitableTimer") // XP
#pragma comment(linker, "/export:SetWaitableTimerEx=kernel32.SetWaitableTimerEx")
#pragma comment(linker, "/export:SetXStateFeaturesMask=kernel32.SetXStateFeaturesMask")
#pragma comment(linker, "/export:SetupComm=kernel32.SetupComm") // XP
#pragma comment(linker, "/export:ShowConsoleCursor=kernel32.ShowConsoleCursor") // XP
#pragma comment(linker, "/export:SignalObjectAndWait=kernel32.SignalObjectAndWait") // XP
#pragma comment(linker, "/export:SizeofResource=kernel32.SizeofResource") // XP
#pragma comment(linker, "/export:Sleep=kernel32.Sleep") // XP
#pragma comment(linker, "/export:SleepConditionVariableCS=kernel32.SleepConditionVariableCS")
#pragma comment(linker, "/export:SleepConditionVariableSRW=kernel32.SleepConditionVariableSRW")
#pragma comment(linker, "/export:SleepEx=kernel32.SleepEx") // XP
#pragma comment(linker, "/export:SortCloseHandle=kernel32.SortCloseHandle")
#pragma comment(linker, "/export:SortGetHandle=kernel32.SortGetHandle")
#pragma comment(linker, "/export:StartThreadpoolIo=kernel32.StartThreadpoolIo")
#pragma comment(linker, "/export:SubmitThreadpoolWork=kernel32.SubmitThreadpoolWork")
#pragma comment(linker, "/export:SuspendThread=kernel32.SuspendThread") // XP
#pragma comment(linker, "/export:SwitchToFiber=kernel32.SwitchToFiber") // XP
#pragma comment(linker, "/export:SwitchToThread=kernel32.SwitchToThread") // XP
#pragma comment(linker, "/export:SystemTimeToFileTime=kernel32.SystemTimeToFileTime") // XP
#pragma comment(linker, "/export:SystemTimeToTzSpecificLocalTime=kernel32.SystemTimeToTzSpecificLocalTime") // XP
#pragma comment(linker, "/export:SystemTimeToTzSpecificLocalTimeEx=kernel32.SystemTimeToTzSpecificLocalTimeEx")
#pragma comment(linker, "/export:TerminateJobObject=kernel32.TerminateJobObject") // XP
#pragma comment(linker, "/export:TerminateProcess=kernel32.TerminateProcess") // XP
#pragma comment(linker, "/export:TerminateThread=kernel32.TerminateThread") // XP
#pragma comment(linker, "/export:TermsrvAppInstallMode=kernel32.TermsrvAppInstallMode") // XP
#pragma comment(linker, "/export:TermsrvConvertSysRootToUserDir=kernel32.TermsrvConvertSysRootToUserDir")
#pragma comment(linker, "/export:TermsrvCreateRegEntry=kernel32.TermsrvCreateRegEntry")
#pragma comment(linker, "/export:TermsrvDeleteKey=kernel32.TermsrvDeleteKey")
#pragma comment(linker, "/export:TermsrvDeleteValue=kernel32.TermsrvDeleteValue")
#pragma comment(linker, "/export:TermsrvGetPreSetValue=kernel32.TermsrvGetPreSetValue")
#pragma comment(linker, "/export:TermsrvGetWindowsDirectoryA=kernel32.TermsrvGetWindowsDirectoryA")
#pragma comment(linker, "/export:TermsrvGetWindowsDirectoryW=kernel32.TermsrvGetWindowsDirectoryW")
#pragma comment(linker, "/export:TermsrvOpenRegEntry=kernel32.TermsrvOpenRegEntry")
#pragma comment(linker, "/export:TermsrvOpenUserClasses=kernel32.TermsrvOpenUserClasses")
#pragma comment(linker, "/export:TermsrvRestoreKey=kernel32.TermsrvRestoreKey")
#pragma comment(linker, "/export:TermsrvSetKeySecurity=kernel32.TermsrvSetKeySecurity")
#pragma comment(linker, "/export:TermsrvSetValueKey=kernel32.TermsrvSetValueKey")
#pragma comment(linker, "/export:TermsrvSyncUserIniFileExt=kernel32.TermsrvSyncUserIniFileExt")
#pragma comment(linker, "/export:Thread32First=kernel32.Thread32First") // XP
#pragma comment(linker, "/export:Thread32Next=kernel32.Thread32Next") // XP
#pragma comment(linker, "/export:TlsAlloc=kernel32.TlsAlloc") // XP
#pragma comment(linker, "/export:TlsFree=kernel32.TlsFree") // XP
#pragma comment(linker, "/export:TlsGetValue=kernel32.TlsGetValue") // XP
#pragma comment(linker, "/export:TlsSetValue=kernel32.TlsSetValue") // XP
#pragma comment(linker, "/export:Toolhelp32ReadProcessMemory=kernel32.Toolhelp32ReadProcessMemory") // XP
#pragma comment(linker, "/export:TransactNamedPipe=kernel32.TransactNamedPipe") // XP
#pragma comment(linker, "/export:TransmitCommChar=kernel32.TransmitCommChar") // XP
#pragma comment(linker, "/export:TryAcquireSRWLockExclusive=kernel32.TryAcquireSRWLockExclusive")
#pragma comment(linker, "/export:TryAcquireSRWLockShared=kernel32.TryAcquireSRWLockShared")
#pragma comment(linker, "/export:TryEnterCriticalSection=kernel32.TryEnterCriticalSection") // XP
#pragma comment(linker, "/export:TrySubmitThreadpoolCallback=kernel32.TrySubmitThreadpoolCallback")
#pragma comment(linker, "/export:TzSpecificLocalTimeToSystemTime=kernel32.TzSpecificLocalTimeToSystemTime") // XP
#pragma comment(linker, "/export:TzSpecificLocalTimeToSystemTimeEx=kernel32.TzSpecificLocalTimeToSystemTimeEx")
#pragma comment(linker, "/export:UTRegister=kernel32.UTRegister") // XP
#pragma comment(linker, "/export:UTUnRegister=kernel32.UTUnRegister") // XP
#pragma comment(linker, "/export:UnhandledExceptionFilter=kernel32.UnhandledExceptionFilter") // XP
#pragma comment(linker, "/export:UnlockFile=kernel32.UnlockFile") // XP
#pragma comment(linker, "/export:UnlockFileEx=kernel32.UnlockFileEx") // XP
#pragma comment(linker, "/export:UnmapViewOfFile=kernel32.UnmapViewOfFile") // XP
#pragma comment(linker, "/export:UnmapViewOfFileEx=kernel32.UnmapViewOfFileEx")
#pragma comment(linker, "/export:UnregisterApplicationRecoveryCallback=kernel32.UnregisterApplicationRecoveryCallback")
#pragma comment(linker, "/export:UnregisterApplicationRestart=kernel32.UnregisterApplicationRestart")
#pragma comment(linker, "/export:UnregisterBadMemoryNotification=kernel32.UnregisterBadMemoryNotification")
#pragma comment(linker, "/export:UnregisterConsoleIME=kernel32.UnregisterConsoleIME") // XP
#pragma comment(linker, "/export:UnregisterWait=kernel32.UnregisterWait") // XP
#pragma comment(linker, "/export:UnregisterWaitEx=kernel32.UnregisterWaitEx") // XP
#pragma comment(linker, "/export:UnregisterWaitUntilOOBECompleted=kernel32.UnregisterWaitUntilOOBECompleted")
#pragma comment(linker, "/export:UpdateCalendarDayOfWeek=kernel32.UpdateCalendarDayOfWeek")

BOOL WINAPI impl_UpdateProcThreadAttribute(struct _PROC_THREAD_ATTRIBUTE_LIST *list,
                                           DWORD flags, DWORD_PTR attr, void *value, SIZE_T size,
                                           void *prev_ret, SIZE_T *size_ret);
extern "C" __declspec(dllexport) 
BOOL WINAPI UpdateProcThreadAttribute(struct _PROC_THREAD_ATTRIBUTE_LIST *list,
                                      DWORD flags, DWORD_PTR attr, void *value, SIZE_T size,
                                      void *prev_ret, SIZE_T *size_ret)
{
    return impl_UpdateProcThreadAttribute(list, flags, attr, value, size, prev_ret, size_ret);
}

#pragma comment(linker, "/export:UpdateResourceA=kernel32.UpdateResourceA") // XP
#pragma comment(linker, "/export:UpdateResourceW=kernel32.UpdateResourceW") // XP
#pragma comment(linker, "/export:VDMConsoleOperation=kernel32.VDMConsoleOperation") // XP
#pragma comment(linker, "/export:VDMOperationStarted=kernel32.VDMOperationStarted") // XP
#pragma comment(linker, "/export:VerLanguageNameA=kernel32.VerLanguageNameA") // XP
#pragma comment(linker, "/export:VerLanguageNameW=kernel32.VerLanguageNameW") // XP
#pragma comment(linker, "/export:VerSetConditionMask=kernel32.VerSetConditionMask") // XP
#pragma comment(linker, "/export:VerifyConsoleIoHandle=kernel32.VerifyConsoleIoHandle") // XP
#pragma comment(linker, "/export:VerifyScripts=kernel32.VerifyScripts")
#pragma comment(linker, "/export:VerifyVersionInfoA=kernel32.VerifyVersionInfoA") // XP
#pragma comment(linker, "/export:VerifyVersionInfoW=kernel32.VerifyVersionInfoW") // XP
#pragma comment(linker, "/export:VirtualAlloc=kernel32.VirtualAlloc") // XP
#pragma comment(linker, "/export:VirtualAllocEx=kernel32.VirtualAllocEx") // XP
#pragma comment(linker, "/export:VirtualAllocExNuma=kernel32.VirtualAllocExNuma")
#pragma comment(linker, "/export:VirtualFree=kernel32.VirtualFree") // XP
#pragma comment(linker, "/export:VirtualFreeEx=kernel32.VirtualFreeEx") // XP
#pragma comment(linker, "/export:VirtualLock=kernel32.VirtualLock") // XP
#pragma comment(linker, "/export:VirtualProtect=kernel32.VirtualProtect") // XP
#pragma comment(linker, "/export:VirtualProtectEx=kernel32.VirtualProtectEx") // XP
#pragma comment(linker, "/export:VirtualQuery=kernel32.VirtualQuery") // XP
#pragma comment(linker, "/export:VirtualQueryEx=kernel32.VirtualQueryEx") // XP
#pragma comment(linker, "/export:VirtualUnlock=kernel32.VirtualUnlock") // XP
#pragma comment(linker, "/export:WTSGetActiveConsoleSessionId=kernel32.WTSGetActiveConsoleSessionId") // XP
#pragma comment(linker, "/export:WaitCommEvent=kernel32.WaitCommEvent") // XP
#pragma comment(linker, "/export:WaitForDebugEvent=kernel32.WaitForDebugEvent") // XP
#pragma comment(linker, "/export:WaitForDebugEventEx=kernel32.WaitForDebugEventEx")
#pragma comment(linker, "/export:WaitForMultipleObjects=kernel32.WaitForMultipleObjects") // XP
#pragma comment(linker, "/export:WaitForMultipleObjectsEx=kernel32.WaitForMultipleObjectsEx") // XP
#pragma comment(linker, "/export:WaitForSingleObject=kernel32.WaitForSingleObject") // XP
#pragma comment(linker, "/export:WaitForSingleObjectEx=kernel32.WaitForSingleObjectEx") // XP
#pragma comment(linker, "/export:WaitForThreadpoolIoCallbacks=kernel32.WaitForThreadpoolIoCallbacks")
#pragma comment(linker, "/export:WaitForThreadpoolTimerCallbacks=kernel32.WaitForThreadpoolTimerCallbacks")
#pragma comment(linker, "/export:WaitForThreadpoolWaitCallbacks=kernel32.WaitForThreadpoolWaitCallbacks")
#pragma comment(linker, "/export:WaitForThreadpoolWorkCallbacks=kernel32.WaitForThreadpoolWorkCallbacks")
#pragma comment(linker, "/export:WaitNamedPipeA=kernel32.WaitNamedPipeA") // XP
#pragma comment(linker, "/export:WaitNamedPipeW=kernel32.WaitNamedPipeW") // XP
#pragma comment(linker, "/export:WakeAllConditionVariable=kernel32.WakeAllConditionVariable")
#pragma comment(linker, "/export:WakeConditionVariable=kernel32.WakeConditionVariable")
#pragma comment(linker, "/export:WerGetFlags=kernel32.WerGetFlags")
#pragma comment(linker, "/export:WerGetFlagsWorker=kernel32.WerGetFlagsWorker")
#pragma comment(linker, "/export:WerRegisterFile=kernel32.WerRegisterFile")
#pragma comment(linker, "/export:WerRegisterFileWorker=kernel32.WerRegisterFileWorker")
#pragma comment(linker, "/export:WerRegisterMemoryBlock=kernel32.WerRegisterMemoryBlock")
#pragma comment(linker, "/export:WerRegisterMemoryBlockWorker=kernel32.WerRegisterMemoryBlockWorker")
#pragma comment(linker, "/export:WerRegisterRuntimeExceptionModule=kernel32.WerRegisterRuntimeExceptionModule")
#pragma comment(linker, "/export:WerRegisterRuntimeExceptionModuleWorker=kernel32.WerRegisterRuntimeExceptionModuleWorker")
#pragma comment(linker, "/export:WerSetFlags=kernel32.WerSetFlags")
#pragma comment(linker, "/export:WerSetFlagsWorker=kernel32.WerSetFlagsWorker")
#pragma comment(linker, "/export:WerUnregisterFile=kernel32.WerUnregisterFile")
#pragma comment(linker, "/export:WerUnregisterFileWorker=kernel32.WerUnregisterFileWorker")
#pragma comment(linker, "/export:WerUnregisterMemoryBlock=kernel32.WerUnregisterMemoryBlock")
#pragma comment(linker, "/export:WerUnregisterMemoryBlockWorker=kernel32.WerUnregisterMemoryBlockWorker")
#pragma comment(linker, "/export:WerUnregisterRuntimeExceptionModule=kernel32.WerUnregisterRuntimeExceptionModule")
#pragma comment(linker, "/export:WerUnregisterRuntimeExceptionModuleWorker=kernel32.WerUnregisterRuntimeExceptionModuleWorker")
#pragma comment(linker, "/export:WerpCleanupMessageMapping=kernel32.WerpCleanupMessageMapping")
#pragma comment(linker, "/export:WerpGetDebugger=kernel32.WerpGetDebugger")
#pragma comment(linker, "/export:WerpInitiateRemoteRecovery=kernel32.WerpInitiateRemoteRecovery")
#pragma comment(linker, "/export:WerpLaunchAeDebug=kernel32.WerpLaunchAeDebug")
#pragma comment(linker, "/export:WerpNotifyLoadStringResource=kernel32.WerpNotifyLoadStringResource")
#pragma comment(linker, "/export:WerpNotifyLoadStringResourceEx=kernel32.WerpNotifyLoadStringResourceEx")
#pragma comment(linker, "/export:WerpNotifyLoadStringResourceWorker=kernel32.WerpNotifyLoadStringResourceWorker")
#pragma comment(linker, "/export:WerpNotifyUseStringResource=kernel32.WerpNotifyUseStringResource")
#pragma comment(linker, "/export:WerpNotifyUseStringResourceWorker=kernel32.WerpNotifyUseStringResourceWorker")
#pragma comment(linker, "/export:WerpStringLookup=kernel32.WerpStringLookup")
#pragma comment(linker, "/export:WideCharToMultiByte=kernel32.WideCharToMultiByte") // XP
#pragma comment(linker, "/export:WinExec=kernel32.WinExec") // XP
#pragma comment(linker, "/export:Wow64DisableWow64FsRedirection=kernel32.Wow64DisableWow64FsRedirection")
#pragma comment(linker, "/export:Wow64EnableWow64FsRedirection=kernel32.Wow64EnableWow64FsRedirection")
#pragma comment(linker, "/export:Wow64GetThreadContext=kernel32.Wow64GetThreadContext")
#pragma comment(linker, "/export:Wow64GetThreadSelectorEntry=kernel32.Wow64GetThreadSelectorEntry")
#pragma comment(linker, "/export:Wow64RevertWow64FsRedirection=kernel32.Wow64RevertWow64FsRedirection")
#pragma comment(linker, "/export:Wow64SetThreadContext=kernel32.Wow64SetThreadContext")
#pragma comment(linker, "/export:Wow64SuspendThread=kernel32.Wow64SuspendThread")
#pragma comment(linker, "/export:Wow64Transition=kernel32.Wow64Transition")
#pragma comment(linker, "/export:WriteConsoleA=kernel32.WriteConsoleA") // XP
#pragma comment(linker, "/export:WriteConsoleInputA=kernel32.WriteConsoleInputA") // XP
#pragma comment(linker, "/export:WriteConsoleInputVDMA=kernel32.WriteConsoleInputVDMA") // XP
#pragma comment(linker, "/export:WriteConsoleInputVDMW=kernel32.WriteConsoleInputVDMW") // XP
#pragma comment(linker, "/export:WriteConsoleInputW=kernel32.WriteConsoleInputW") // XP
#pragma comment(linker, "/export:WriteConsoleOutputA=kernel32.WriteConsoleOutputA") // XP
#pragma comment(linker, "/export:WriteConsoleOutputAttribute=kernel32.WriteConsoleOutputAttribute") // XP
#pragma comment(linker, "/export:WriteConsoleOutputCharacterA=kernel32.WriteConsoleOutputCharacterA") // XP
#pragma comment(linker, "/export:WriteConsoleOutputCharacterW=kernel32.WriteConsoleOutputCharacterW") // XP
#pragma comment(linker, "/export:WriteConsoleOutputW=kernel32.WriteConsoleOutputW") // XP
#pragma comment(linker, "/export:WriteConsoleW=kernel32.WriteConsoleW") // XP
#pragma comment(linker, "/export:WriteFile=kernel32.WriteFile") // XP
#pragma comment(linker, "/export:WriteFileEx=kernel32.WriteFileEx") // XP
#pragma comment(linker, "/export:WriteFileGather=kernel32.WriteFileGather") // XP
#pragma comment(linker, "/export:WritePrivateProfileSectionA=kernel32.WritePrivateProfileSectionA") // XP
#pragma comment(linker, "/export:WritePrivateProfileSectionW=kernel32.WritePrivateProfileSectionW") // XP
#pragma comment(linker, "/export:WritePrivateProfileStringA=kernel32.WritePrivateProfileStringA") // XP
#pragma comment(linker, "/export:WritePrivateProfileStringW=kernel32.WritePrivateProfileStringW") // XP
#pragma comment(linker, "/export:WritePrivateProfileStructA=kernel32.WritePrivateProfileStructA") // XP
#pragma comment(linker, "/export:WritePrivateProfileStructW=kernel32.WritePrivateProfileStructW") // XP
#pragma comment(linker, "/export:WriteProcessMemory=kernel32.WriteProcessMemory") // XP
#pragma comment(linker, "/export:WriteProfileSectionA=kernel32.WriteProfileSectionA") // XP
#pragma comment(linker, "/export:WriteProfileSectionW=kernel32.WriteProfileSectionW") // XP
#pragma comment(linker, "/export:WriteProfileStringA=kernel32.WriteProfileStringA") // XP
#pragma comment(linker, "/export:WriteProfileStringW=kernel32.WriteProfileStringW") // XP
#pragma comment(linker, "/export:WriteTapemark=kernel32.WriteTapemark") // XP
#pragma comment(linker, "/export:ZombifyActCtx=kernel32.ZombifyActCtx") // XP
#pragma comment(linker, "/export:ZombifyActCtxWorker=kernel32.ZombifyActCtxWorker")
#pragma comment(linker, "/export:_hread=kernel32._hread") // XP
#pragma comment(linker, "/export:_hwrite=kernel32._hwrite") // XP
#pragma comment(linker, "/export:_lclose=kernel32._lclose") // XP
#pragma comment(linker, "/export:_lcreat=kernel32._lcreat") // XP
#pragma comment(linker, "/export:_llseek=kernel32._llseek") // XP
#pragma comment(linker, "/export:_lopen=kernel32._lopen") // XP
#pragma comment(linker, "/export:_lread=kernel32._lread") // XP
#pragma comment(linker, "/export:_lwrite=kernel32._lwrite") // XP
#pragma comment(linker, "/export:lstrcat=kernel32.lstrcat") // XP
#pragma comment(linker, "/export:lstrcatA=kernel32.lstrcatA") // XP
#pragma comment(linker, "/export:lstrcatW=kernel32.lstrcatW") // XP
#pragma comment(linker, "/export:lstrcmp=kernel32.lstrcmp") // XP
#pragma comment(linker, "/export:lstrcmpA=kernel32.lstrcmpA") // XP
#pragma comment(linker, "/export:lstrcmpW=kernel32.lstrcmpW") // XP
#pragma comment(linker, "/export:lstrcmpi=kernel32.lstrcmpi") // XP
#pragma comment(linker, "/export:lstrcmpiA=kernel32.lstrcmpiA") // XP
#pragma comment(linker, "/export:lstrcmpiW=kernel32.lstrcmpiW") // XP
#pragma comment(linker, "/export:lstrcpy=kernel32.lstrcpy") // XP
#pragma comment(linker, "/export:lstrcpyA=kernel32.lstrcpyA") // XP
#pragma comment(linker, "/export:lstrcpyW=kernel32.lstrcpyW") // XP
#pragma comment(linker, "/export:lstrcpyn=kernel32.lstrcpyn") // XP
#pragma comment(linker, "/export:lstrcpynA=kernel32.lstrcpynA") // XP
#pragma comment(linker, "/export:lstrcpynW=kernel32.lstrcpynW") // XP
#pragma comment(linker, "/export:lstrlen=kernel32.lstrlen") // XP
#pragma comment(linker, "/export:lstrlenA=kernel32.lstrlenA") // XP
#pragma comment(linker, "/export:lstrlenW=kernel32.lstrlenW") // XP
#pragma comment(linker, "/export:timeBeginPeriod=kernel32.timeBeginPeriod")
#pragma comment(linker, "/export:timeEndPeriod=kernel32.timeEndPeriod")
#pragma comment(linker, "/export:timeGetDevCaps=kernel32.timeGetDevCaps")
#pragma comment(linker, "/export:timeGetSystemTime=kernel32.timeGetSystemTime")
#pragma comment(linker, "/export:timeGetTime=kernel32.timeGetTime")
