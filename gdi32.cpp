#include <WinDef.h>

#pragma comment(linker, "/export:AbortDoc=gdi32.AbortDoc") // XP
#pragma comment(linker, "/export:AbortDocImpl=gdi32.AbortDocImpl")
#pragma comment(linker, "/export:AbortPath=gdi32.AbortPath") // XP
#pragma comment(linker, "/export:AddFontMemResourceEx=gdi32.AddFontMemResourceEx") // XP
#pragma comment(linker, "/export:AddFontResourceA=gdi32.AddFontResourceA") // XP
#pragma comment(linker, "/export:AddFontResourceAStub=gdi32.AddFontResourceAStub")
#pragma comment(linker, "/export:AddFontResourceExA=gdi32.AddFontResourceExA") // XP
#pragma comment(linker, "/export:AddFontResourceExW=gdi32.AddFontResourceExW") // XP
#pragma comment(linker, "/export:AddFontResourceTracking=gdi32.AddFontResourceTracking") // XP
#pragma comment(linker, "/export:AddFontResourceW=gdi32.AddFontResourceW") // XP
#pragma comment(linker, "/export:AddFontResourceWImpl=gdi32.AddFontResourceWImpl")
#pragma comment(linker, "/export:AngleArc=gdi32.AngleArc") // XP
#pragma comment(linker, "/export:AnimatePalette=gdi32.AnimatePalette") // XP
#pragma comment(linker, "/export:AnimatePaletteStub=gdi32.AnimatePaletteStub")
#pragma comment(linker, "/export:AnyLinkedFonts=gdi32.AnyLinkedFonts") // XP
#pragma comment(linker, "/export:Arc=gdi32.Arc") // XP
#pragma comment(linker, "/export:ArcStub=gdi32.ArcStub")
#pragma comment(linker, "/export:ArcTo=gdi32.ArcTo") // XP
#pragma comment(linker, "/export:BRUSHOBJ_hGetColorTransform=gdi32.BRUSHOBJ_hGetColorTransform") // XP
#pragma comment(linker, "/export:BRUSHOBJ_pvAllocRbrush=gdi32.BRUSHOBJ_pvAllocRbrush") // XP
#pragma comment(linker, "/export:BRUSHOBJ_pvGetRbrush=gdi32.BRUSHOBJ_pvGetRbrush") // XP
#pragma comment(linker, "/export:BRUSHOBJ_ulGetBrushColor=gdi32.BRUSHOBJ_ulGetBrushColor") // XP
#pragma comment(linker, "/export:BeginGdiRendering=gdi32.BeginGdiRendering")
#pragma comment(linker, "/export:BeginPath=gdi32.BeginPath") // XP
#pragma comment(linker, "/export:BeginPathImpl=gdi32.BeginPathImpl")
#pragma comment(linker, "/export:BitBlt=gdi32.BitBlt") // XP
#pragma comment(linker, "/export:CLIPOBJ_bEnum=gdi32.CLIPOBJ_bEnum") // XP
#pragma comment(linker, "/export:CLIPOBJ_cEnumStart=gdi32.CLIPOBJ_cEnumStart") // XP
#pragma comment(linker, "/export:CLIPOBJ_ppoGetPath=gdi32.CLIPOBJ_ppoGetPath") // XP
#pragma comment(linker, "/export:CancelDC=gdi32.CancelDC") // XP
#pragma comment(linker, "/export:CheckColorsInGamut=gdi32.CheckColorsInGamut") // XP
#pragma comment(linker, "/export:ChoosePixelFormat=gdi32.ChoosePixelFormat") // XP
#pragma comment(linker, "/export:Chord=gdi32.Chord") // XP
#pragma comment(linker, "/export:ClearBitmapAttributes=gdi32.ClearBitmapAttributes") // XP
#pragma comment(linker, "/export:ClearBrushAttributes=gdi32.ClearBrushAttributes") // XP
#pragma comment(linker, "/export:CloseEnhMetaFile=gdi32.CloseEnhMetaFile") // XP
#pragma comment(linker, "/export:CloseFigure=gdi32.CloseFigure") // XP
#pragma comment(linker, "/export:CloseFigureImpl=gdi32.CloseFigureImpl")
#pragma comment(linker, "/export:CloseMetaFile=gdi32.CloseMetaFile") // XP
#pragma comment(linker, "/export:ColorCorrectPalette=gdi32.ColorCorrectPalette") // XP
#pragma comment(linker, "/export:ColorMatchToTarget=gdi32.ColorMatchToTarget") // XP
#pragma comment(linker, "/export:CombineRgn=gdi32.CombineRgn") // XP
#pragma comment(linker, "/export:CombineTransform=gdi32.CombineTransform") // XP
#pragma comment(linker, "/export:ConfigureOPMProtectedOutput=gdi32.ConfigureOPMProtectedOutput")
#pragma comment(linker, "/export:CopyEnhMetaFileA=gdi32.CopyEnhMetaFileA") // XP
#pragma comment(linker, "/export:CopyEnhMetaFileW=gdi32.CopyEnhMetaFileW") // XP
#pragma comment(linker, "/export:CopyMetaFileA=gdi32.CopyMetaFileA") // XP
#pragma comment(linker, "/export:CopyMetaFileW=gdi32.CopyMetaFileW") // XP
#pragma comment(linker, "/export:CreateBitmap=gdi32.CreateBitmap") // XP
#pragma comment(linker, "/export:CreateBitmapFromDxSurface=gdi32.CreateBitmapFromDxSurface")
#pragma comment(linker, "/export:CreateBitmapFromDxSurface2=gdi32.CreateBitmapFromDxSurface2")
#pragma comment(linker, "/export:CreateBitmapIndirect=gdi32.CreateBitmapIndirect") // XP
#pragma comment(linker, "/export:CreateBrushIndirect=gdi32.CreateBrushIndirect") // XP
#pragma comment(linker, "/export:CreateBrushIndirectStub=gdi32.CreateBrushIndirectStub")
#pragma comment(linker, "/export:CreateColorSpaceA=gdi32.CreateColorSpaceA") // XP
#pragma comment(linker, "/export:CreateColorSpaceW=gdi32.CreateColorSpaceW") // XP
#pragma comment(linker, "/export:CreateCompatibleBitmap=gdi32.CreateCompatibleBitmap") // XP
#pragma comment(linker, "/export:CreateCompatibleDC=gdi32.CreateCompatibleDC") // XP
#pragma comment(linker, "/export:CreateDCA=gdi32.CreateDCA") // XP
#pragma comment(linker, "/export:CreateDCAImpl=gdi32.CreateDCAImpl")
#pragma comment(linker, "/export:CreateDCExW=gdi32.CreateDCExW")
#pragma comment(linker, "/export:CreateDCW=gdi32.CreateDCW") // XP
#pragma comment(linker, "/export:CreateDIBPatternBrush=gdi32.CreateDIBPatternBrush") // XP
#pragma comment(linker, "/export:CreateDIBPatternBrushPt=gdi32.CreateDIBPatternBrushPt") // XP
#pragma comment(linker, "/export:CreateDIBSection=gdi32.CreateDIBSection") // XP
#pragma comment(linker, "/export:CreateDIBitmap=gdi32.CreateDIBitmap") // XP
#pragma comment(linker, "/export:CreateDiscardableBitmap=gdi32.CreateDiscardableBitmap") // XP
#pragma comment(linker, "/export:CreateEllipticRgn=gdi32.CreateEllipticRgn") // XP
#pragma comment(linker, "/export:CreateEllipticRgnIndirect=gdi32.CreateEllipticRgnIndirect") // XP
#pragma comment(linker, "/export:CreateEllipticRgnIndirectStub=gdi32.CreateEllipticRgnIndirectStub")
#pragma comment(linker, "/export:CreateEnhMetaFileA=gdi32.CreateEnhMetaFileA") // XP
#pragma comment(linker, "/export:CreateEnhMetaFileW=gdi32.CreateEnhMetaFileW") // XP
#pragma comment(linker, "/export:CreateFontA=gdi32.CreateFontA") // XP
#pragma comment(linker, "/export:CreateFontAStub=gdi32.CreateFontAStub")
#pragma comment(linker, "/export:CreateFontIndirectA=gdi32.CreateFontIndirectA") // XP
#pragma comment(linker, "/export:CreateFontIndirectExA=gdi32.CreateFontIndirectExA") // XP
#pragma comment(linker, "/export:CreateFontIndirectExW=gdi32.CreateFontIndirectExW") // XP
#pragma comment(linker, "/export:CreateFontIndirectW=gdi32.CreateFontIndirectW") // XP
#pragma comment(linker, "/export:CreateFontIndirectWImpl=gdi32.CreateFontIndirectWImpl")
#pragma comment(linker, "/export:CreateFontW=gdi32.CreateFontW") // XP
#pragma comment(linker, "/export:CreateHalftonePalette=gdi32.CreateHalftonePalette") // XP
#pragma comment(linker, "/export:CreateHatchBrush=gdi32.CreateHatchBrush") // XP
#pragma comment(linker, "/export:CreateICA=gdi32.CreateICA") // XP
#pragma comment(linker, "/export:CreateICW=gdi32.CreateICW") // XP
#pragma comment(linker, "/export:CreateMetaFileA=gdi32.CreateMetaFileA") // XP
#pragma comment(linker, "/export:CreateMetaFileW=gdi32.CreateMetaFileW") // XP
#pragma comment(linker, "/export:CreateOPMProtectedOutput=gdi32.CreateOPMProtectedOutput")
#pragma comment(linker, "/export:CreateOPMProtectedOutputs=gdi32.CreateOPMProtectedOutputs")
#pragma comment(linker, "/export:CreatePalette=gdi32.CreatePalette") // XP
#pragma comment(linker, "/export:CreatePatternBrush=gdi32.CreatePatternBrush") // XP
#pragma comment(linker, "/export:CreatePen=gdi32.CreatePen") // XP
#pragma comment(linker, "/export:CreatePenIndirect=gdi32.CreatePenIndirect") // XP
#pragma comment(linker, "/export:CreatePenIndirectStub=gdi32.CreatePenIndirectStub")
#pragma comment(linker, "/export:CreatePolyPolygonRgn=gdi32.CreatePolyPolygonRgn") // XP
#pragma comment(linker, "/export:CreatePolyPolygonRgnStub=gdi32.CreatePolyPolygonRgnStub")
#pragma comment(linker, "/export:CreatePolygonRgn=gdi32.CreatePolygonRgn") // XP
#pragma comment(linker, "/export:CreateRectRgn=gdi32.CreateRectRgn") // XP
#pragma comment(linker, "/export:CreateRectRgnIndirect=gdi32.CreateRectRgnIndirect") // XP
#pragma comment(linker, "/export:CreateRoundRectRgn=gdi32.CreateRoundRectRgn") // XP
#pragma comment(linker, "/export:CreateRoundRectRgnStub=gdi32.CreateRoundRectRgnStub")
#pragma comment(linker, "/export:CreateScalableFontResourceA=gdi32.CreateScalableFontResourceA") // XP
#pragma comment(linker, "/export:CreateScalableFontResourceW=gdi32.CreateScalableFontResourceW") // XP
#pragma comment(linker, "/export:CreateScalableFontResourceWImpl=gdi32.CreateScalableFontResourceWImpl")
#pragma comment(linker, "/export:CreateSessionMappedDIBSection=gdi32.CreateSessionMappedDIBSection")
#pragma comment(linker, "/export:CreateSolidBrush=gdi32.CreateSolidBrush") // XP
#pragma comment(linker, "/export:D3DKMTAbandonSwapChain=gdi32.D3DKMTAbandonSwapChain")
#pragma comment(linker, "/export:D3DKMTAcquireKeyedMutex=gdi32.D3DKMTAcquireKeyedMutex")
#pragma comment(linker, "/export:D3DKMTAcquireKeyedMutex2=gdi32.D3DKMTAcquireKeyedMutex2")
#pragma comment(linker, "/export:D3DKMTAcquireSwapChain=gdi32.D3DKMTAcquireSwapChain")
#pragma comment(linker, "/export:D3DKMTAdjustFullscreenGamma=gdi32.D3DKMTAdjustFullscreenGamma")
#pragma comment(linker, "/export:D3DKMTCacheHybridQueryValue=gdi32.D3DKMTCacheHybridQueryValue")
#pragma comment(linker, "/export:D3DKMTChangeVideoMemoryReservation=gdi32.D3DKMTChangeVideoMemoryReservation")
#pragma comment(linker, "/export:D3DKMTCheckExclusiveOwnership=gdi32.D3DKMTCheckExclusiveOwnership")
#pragma comment(linker, "/export:D3DKMTCheckMonitorPowerState=gdi32.D3DKMTCheckMonitorPowerState")
#pragma comment(linker, "/export:D3DKMTCheckMultiPlaneOverlaySupport=gdi32.D3DKMTCheckMultiPlaneOverlaySupport")
#pragma comment(linker, "/export:D3DKMTCheckMultiPlaneOverlaySupport2=gdi32.D3DKMTCheckMultiPlaneOverlaySupport2")
#pragma comment(linker, "/export:D3DKMTCheckMultiPlaneOverlaySupport3=gdi32.D3DKMTCheckMultiPlaneOverlaySupport3")
#pragma comment(linker, "/export:D3DKMTCheckOcclusion=gdi32.D3DKMTCheckOcclusion")
#pragma comment(linker, "/export:D3DKMTCheckSharedResourceAccess=gdi32.D3DKMTCheckSharedResourceAccess")
#pragma comment(linker, "/export:D3DKMTCheckVidPnExclusiveOwnership=gdi32.D3DKMTCheckVidPnExclusiveOwnership")
#pragma comment(linker, "/export:D3DKMTCloseAdapter=gdi32.D3DKMTCloseAdapter")
#pragma comment(linker, "/export:D3DKMTConfigureSharedResource=gdi32.D3DKMTConfigureSharedResource")
#pragma comment(linker, "/export:D3DKMTCreateAllocation=gdi32.D3DKMTCreateAllocation")
#pragma comment(linker, "/export:D3DKMTCreateAllocation2=gdi32.D3DKMTCreateAllocation2")
#pragma comment(linker, "/export:D3DKMTCreateContext=gdi32.D3DKMTCreateContext")
#pragma comment(linker, "/export:D3DKMTCreateContextVirtual=gdi32.D3DKMTCreateContextVirtual")
#pragma comment(linker, "/export:D3DKMTCreateDCFromMemory=gdi32.D3DKMTCreateDCFromMemory")
#pragma comment(linker, "/export:D3DKMTCreateDevice=gdi32.D3DKMTCreateDevice")
#pragma comment(linker, "/export:D3DKMTCreateKeyedMutex=gdi32.D3DKMTCreateKeyedMutex")
#pragma comment(linker, "/export:D3DKMTCreateKeyedMutex2=gdi32.D3DKMTCreateKeyedMutex2")
#pragma comment(linker, "/export:D3DKMTCreateOutputDupl=gdi32.D3DKMTCreateOutputDupl")
#pragma comment(linker, "/export:D3DKMTCreateOverlay=gdi32.D3DKMTCreateOverlay")
#pragma comment(linker, "/export:D3DKMTCreatePagingQueue=gdi32.D3DKMTCreatePagingQueue")
#pragma comment(linker, "/export:D3DKMTCreateSwapChain=gdi32.D3DKMTCreateSwapChain")
#pragma comment(linker, "/export:D3DKMTCreateSynchronizationObject=gdi32.D3DKMTCreateSynchronizationObject")
#pragma comment(linker, "/export:D3DKMTCreateSynchronizationObject2=gdi32.D3DKMTCreateSynchronizationObject2")
#pragma comment(linker, "/export:D3DKMTDestroyAllocation=gdi32.D3DKMTDestroyAllocation")
#pragma comment(linker, "/export:D3DKMTDestroyAllocation2=gdi32.D3DKMTDestroyAllocation2")
#pragma comment(linker, "/export:D3DKMTDestroyContext=gdi32.D3DKMTDestroyContext")
#pragma comment(linker, "/export:D3DKMTDestroyDCFromMemory=gdi32.D3DKMTDestroyDCFromMemory")
#pragma comment(linker, "/export:D3DKMTDestroyDevice=gdi32.D3DKMTDestroyDevice")
#pragma comment(linker, "/export:D3DKMTDestroyKeyedMutex=gdi32.D3DKMTDestroyKeyedMutex")
#pragma comment(linker, "/export:D3DKMTDestroyOutputDupl=gdi32.D3DKMTDestroyOutputDupl")
#pragma comment(linker, "/export:D3DKMTDestroyOverlay=gdi32.D3DKMTDestroyOverlay")
#pragma comment(linker, "/export:D3DKMTDestroyPagingQueue=gdi32.D3DKMTDestroyPagingQueue")
#pragma comment(linker, "/export:D3DKMTDestroySynchronizationObject=gdi32.D3DKMTDestroySynchronizationObject")
#pragma comment(linker, "/export:D3DKMTEnumAdapters=gdi32.D3DKMTEnumAdapters")
#pragma comment(linker, "/export:D3DKMTEnumAdapters2=gdi32.D3DKMTEnumAdapters2")
#pragma comment(linker, "/export:D3DKMTEscape=gdi32.D3DKMTEscape")
#pragma comment(linker, "/export:D3DKMTEvict=gdi32.D3DKMTEvict")
#pragma comment(linker, "/export:D3DKMTFlipOverlay=gdi32.D3DKMTFlipOverlay")
#pragma comment(linker, "/export:D3DKMTFlushHeapTransitions=gdi32.D3DKMTFlushHeapTransitions")
#pragma comment(linker, "/export:D3DKMTFreeGpuVirtualAddress=gdi32.D3DKMTFreeGpuVirtualAddress")
#pragma comment(linker, "/export:D3DKMTGetCachedHybridQueryValue=gdi32.D3DKMTGetCachedHybridQueryValue")
#pragma comment(linker, "/export:D3DKMTGetContextInProcessSchedulingPriority=gdi32.D3DKMTGetContextInProcessSchedulingPriority")
#pragma comment(linker, "/export:D3DKMTGetContextSchedulingPriority=gdi32.D3DKMTGetContextSchedulingPriority")
#pragma comment(linker, "/export:D3DKMTGetDWMVerticalBlankEvent=gdi32.D3DKMTGetDWMVerticalBlankEvent")
#pragma comment(linker, "/export:D3DKMTGetDeviceState=gdi32.D3DKMTGetDeviceState")
#pragma comment(linker, "/export:D3DKMTGetDisplayModeList=gdi32.D3DKMTGetDisplayModeList")
#pragma comment(linker, "/export:D3DKMTGetMultisampleMethodList=gdi32.D3DKMTGetMultisampleMethodList")
#pragma comment(linker, "/export:D3DKMTGetOverlayState=gdi32.D3DKMTGetOverlayState")
#pragma comment(linker, "/export:D3DKMTGetPresentHistory=gdi32.D3DKMTGetPresentHistory")
#pragma comment(linker, "/export:D3DKMTGetPresentQueueEvent=gdi32.D3DKMTGetPresentQueueEvent")
#pragma comment(linker, "/export:D3DKMTGetProcessSchedulingPriorityClass=gdi32.D3DKMTGetProcessSchedulingPriorityClass")
#pragma comment(linker, "/export:D3DKMTGetResourcePresentPrivateDriverData=gdi32.D3DKMTGetResourcePresentPrivateDriverData")
#pragma comment(linker, "/export:D3DKMTGetRuntimeData=gdi32.D3DKMTGetRuntimeData")
#pragma comment(linker, "/export:D3DKMTGetScanLine=gdi32.D3DKMTGetScanLine")
#pragma comment(linker, "/export:D3DKMTGetSetSwapChainMetadata=gdi32.D3DKMTGetSetSwapChainMetadata")
#pragma comment(linker, "/export:D3DKMTGetSharedPrimaryHandle=gdi32.D3DKMTGetSharedPrimaryHandle")
#pragma comment(linker, "/export:D3DKMTGetSharedResourceAdapterLuid=gdi32.D3DKMTGetSharedResourceAdapterLuid")
#pragma comment(linker, "/export:D3DKMTInvalidateActiveVidPn=gdi32.D3DKMTInvalidateActiveVidPn")
#pragma comment(linker, "/export:D3DKMTInvalidateCache=gdi32.D3DKMTInvalidateCache")
#pragma comment(linker, "/export:D3DKMTLock=gdi32.D3DKMTLock")
#pragma comment(linker, "/export:D3DKMTLock2=gdi32.D3DKMTLock2")
#pragma comment(linker, "/export:D3DKMTMakeResident=gdi32.D3DKMTMakeResident")
#pragma comment(linker, "/export:D3DKMTMapGpuVirtualAddress=gdi32.D3DKMTMapGpuVirtualAddress")
#pragma comment(linker, "/export:D3DKMTMarkDeviceAsError=gdi32.D3DKMTMarkDeviceAsError")
#pragma comment(linker, "/export:D3DKMTNetDispGetNextChunkInfo=gdi32.D3DKMTNetDispGetNextChunkInfo")
#pragma comment(linker, "/export:D3DKMTNetDispQueryMiracastDisplayDeviceStatus=gdi32.D3DKMTNetDispQueryMiracastDisplayDeviceStatus")
#pragma comment(linker, "/export:D3DKMTNetDispQueryMiracastDisplayDeviceSupport=gdi32.D3DKMTNetDispQueryMiracastDisplayDeviceSupport")
#pragma comment(linker, "/export:D3DKMTNetDispStartMiracastDisplayDevice=gdi32.D3DKMTNetDispStartMiracastDisplayDevice")
#pragma comment(linker, "/export:D3DKMTNetDispStartMiracastDisplayDevice2=gdi32.D3DKMTNetDispStartMiracastDisplayDevice2")
#pragma comment(linker, "/export:D3DKMTNetDispStartMiracastDisplayDeviceEx=gdi32.D3DKMTNetDispStartMiracastDisplayDeviceEx")
#pragma comment(linker, "/export:D3DKMTNetDispStopMiracastDisplayDevice=gdi32.D3DKMTNetDispStopMiracastDisplayDevice")
#pragma comment(linker, "/export:D3DKMTNetDispStopSessions=gdi32.D3DKMTNetDispStopSessions")
#pragma comment(linker, "/export:D3DKMTOfferAllocations=gdi32.D3DKMTOfferAllocations")
#pragma comment(linker, "/export:D3DKMTOpenAdapterFromDeviceName=gdi32.D3DKMTOpenAdapterFromDeviceName")
#pragma comment(linker, "/export:D3DKMTOpenAdapterFromGdiDisplayName=gdi32.D3DKMTOpenAdapterFromGdiDisplayName")
#pragma comment(linker, "/export:D3DKMTOpenAdapterFromHdc=gdi32.D3DKMTOpenAdapterFromHdc")
#pragma comment(linker, "/export:D3DKMTOpenAdapterFromLuid=gdi32.D3DKMTOpenAdapterFromLuid")
#pragma comment(linker, "/export:D3DKMTOpenKeyedMutex=gdi32.D3DKMTOpenKeyedMutex")
#pragma comment(linker, "/export:D3DKMTOpenKeyedMutex2=gdi32.D3DKMTOpenKeyedMutex2")
#pragma comment(linker, "/export:D3DKMTOpenNtHandleFromName=gdi32.D3DKMTOpenNtHandleFromName")
#pragma comment(linker, "/export:D3DKMTOpenResource=gdi32.D3DKMTOpenResource")
#pragma comment(linker, "/export:D3DKMTOpenResource2=gdi32.D3DKMTOpenResource2")
#pragma comment(linker, "/export:D3DKMTOpenResourceFromNtHandle=gdi32.D3DKMTOpenResourceFromNtHandle")
#pragma comment(linker, "/export:D3DKMTOpenSwapChain=gdi32.D3DKMTOpenSwapChain")
#pragma comment(linker, "/export:D3DKMTOpenSyncObjectFromNtHandle=gdi32.D3DKMTOpenSyncObjectFromNtHandle")
#pragma comment(linker, "/export:D3DKMTOpenSyncObjectFromNtHandle2=gdi32.D3DKMTOpenSyncObjectFromNtHandle2")
#pragma comment(linker, "/export:D3DKMTOpenSyncObjectNtHandleFromName=gdi32.D3DKMTOpenSyncObjectNtHandleFromName")
#pragma comment(linker, "/export:D3DKMTOpenSynchronizationObject=gdi32.D3DKMTOpenSynchronizationObject")
#pragma comment(linker, "/export:D3DKMTOutputDuplGetFrameInfo=gdi32.D3DKMTOutputDuplGetFrameInfo")
#pragma comment(linker, "/export:D3DKMTOutputDuplGetMetaData=gdi32.D3DKMTOutputDuplGetMetaData")
#pragma comment(linker, "/export:D3DKMTOutputDuplGetPointerShapeData=gdi32.D3DKMTOutputDuplGetPointerShapeData")
#pragma comment(linker, "/export:D3DKMTOutputDuplPresent=gdi32.D3DKMTOutputDuplPresent")
#pragma comment(linker, "/export:D3DKMTOutputDuplReleaseFrame=gdi32.D3DKMTOutputDuplReleaseFrame")
#pragma comment(linker, "/export:D3DKMTPinDirectFlipResources=gdi32.D3DKMTPinDirectFlipResources")
#pragma comment(linker, "/export:D3DKMTPollDisplayChildren=gdi32.D3DKMTPollDisplayChildren")
#pragma comment(linker, "/export:D3DKMTPresent=gdi32.D3DKMTPresent")
#pragma comment(linker, "/export:D3DKMTPresentMultiPlaneOverlay=gdi32.D3DKMTPresentMultiPlaneOverlay")
#pragma comment(linker, "/export:D3DKMTPresentMultiPlaneOverlay2=gdi32.D3DKMTPresentMultiPlaneOverlay2")
#pragma comment(linker, "/export:D3DKMTPresentMultiPlaneOverlay3=gdi32.D3DKMTPresentMultiPlaneOverlay3")
#pragma comment(linker, "/export:D3DKMTQueryAdapterInfo=gdi32.D3DKMTQueryAdapterInfo")
#pragma comment(linker, "/export:D3DKMTQueryAllocationResidency=gdi32.D3DKMTQueryAllocationResidency")
#pragma comment(linker, "/export:D3DKMTQueryClockCalibration=gdi32.D3DKMTQueryClockCalibration")
#pragma comment(linker, "/export:D3DKMTQueryFSEBlock=gdi32.D3DKMTQueryFSEBlock")
#pragma comment(linker, "/export:D3DKMTQueryProcessOfferInfo=gdi32.D3DKMTQueryProcessOfferInfo")
#pragma comment(linker, "/export:D3DKMTQueryRemoteVidPnSourceFromGdiDisplayName=gdi32.D3DKMTQueryRemoteVidPnSourceFromGdiDisplayName")
#pragma comment(linker, "/export:D3DKMTQueryResourceInfo=gdi32.D3DKMTQueryResourceInfo")
#pragma comment(linker, "/export:D3DKMTQueryResourceInfoFromNtHandle=gdi32.D3DKMTQueryResourceInfoFromNtHandle")
#pragma comment(linker, "/export:D3DKMTQueryStatistics=gdi32.D3DKMTQueryStatistics")
#pragma comment(linker, "/export:D3DKMTQueryVidPnExclusiveOwnership=gdi32.D3DKMTQueryVidPnExclusiveOwnership")
#pragma comment(linker, "/export:D3DKMTQueryVideoMemoryInfo=gdi32.D3DKMTQueryVideoMemoryInfo")
#pragma comment(linker, "/export:D3DKMTReclaimAllocations=gdi32.D3DKMTReclaimAllocations")
#pragma comment(linker, "/export:D3DKMTReclaimAllocations2=gdi32.D3DKMTReclaimAllocations2")
#pragma comment(linker, "/export:D3DKMTRegisterTrimNotification=gdi32.D3DKMTRegisterTrimNotification")
#pragma comment(linker, "/export:D3DKMTReleaseKeyedMutex=gdi32.D3DKMTReleaseKeyedMutex")
#pragma comment(linker, "/export:D3DKMTReleaseKeyedMutex2=gdi32.D3DKMTReleaseKeyedMutex2")
#pragma comment(linker, "/export:D3DKMTReleaseProcessVidPnSourceOwners=gdi32.D3DKMTReleaseProcessVidPnSourceOwners")
#pragma comment(linker, "/export:D3DKMTReleaseSwapChain=gdi32.D3DKMTReleaseSwapChain")
#pragma comment(linker, "/export:D3DKMTRender=gdi32.D3DKMTRender")
#pragma comment(linker, "/export:D3DKMTReserveGpuVirtualAddress=gdi32.D3DKMTReserveGpuVirtualAddress")
#pragma comment(linker, "/export:D3DKMTSetAllocationPriority=gdi32.D3DKMTSetAllocationPriority")
#pragma comment(linker, "/export:D3DKMTSetContextInProcessSchedulingPriority=gdi32.D3DKMTSetContextInProcessSchedulingPriority")
#pragma comment(linker, "/export:D3DKMTSetContextSchedulingPriority=gdi32.D3DKMTSetContextSchedulingPriority")
#pragma comment(linker, "/export:D3DKMTSetDisplayMode=gdi32.D3DKMTSetDisplayMode")
#pragma comment(linker, "/export:D3DKMTSetDisplayPrivateDriverFormat=gdi32.D3DKMTSetDisplayPrivateDriverFormat")
#pragma comment(linker, "/export:D3DKMTSetDodIndirectSwapchain=gdi32.D3DKMTSetDodIndirectSwapchain")
#pragma comment(linker, "/export:D3DKMTSetFSEBlock=gdi32.D3DKMTSetFSEBlock")
#pragma comment(linker, "/export:D3DKMTSetGammaRamp=gdi32.D3DKMTSetGammaRamp")
#pragma comment(linker, "/export:D3DKMTSetHwProtectionTeardownRecovery=gdi32.D3DKMTSetHwProtectionTeardownRecovery")
#pragma comment(linker, "/export:D3DKMTSetProcessSchedulingPriorityClass=gdi32.D3DKMTSetProcessSchedulingPriorityClass")
#pragma comment(linker, "/export:D3DKMTSetQueuedLimit=gdi32.D3DKMTSetQueuedLimit")
#pragma comment(linker, "/export:D3DKMTSetStablePowerState=gdi32.D3DKMTSetStablePowerState")
#pragma comment(linker, "/export:D3DKMTSetStereoEnabled=gdi32.D3DKMTSetStereoEnabled")
#pragma comment(linker, "/export:D3DKMTSetSyncRefreshCountWaitTarget=gdi32.D3DKMTSetSyncRefreshCountWaitTarget")
#pragma comment(linker, "/export:D3DKMTSetVidPnSourceHwProtection=gdi32.D3DKMTSetVidPnSourceHwProtection")
#pragma comment(linker, "/export:D3DKMTSetVidPnSourceOwner=gdi32.D3DKMTSetVidPnSourceOwner")
#pragma comment(linker, "/export:D3DKMTSetVidPnSourceOwner1=gdi32.D3DKMTSetVidPnSourceOwner1")
#pragma comment(linker, "/export:D3DKMTShareObjects=gdi32.D3DKMTShareObjects")
#pragma comment(linker, "/export:D3DKMTSharedPrimaryLockNotification=gdi32.D3DKMTSharedPrimaryLockNotification")
#pragma comment(linker, "/export:D3DKMTSharedPrimaryUnLockNotification=gdi32.D3DKMTSharedPrimaryUnLockNotification")
#pragma comment(linker, "/export:D3DKMTSignalSynchronizationObject=gdi32.D3DKMTSignalSynchronizationObject")
#pragma comment(linker, "/export:D3DKMTSignalSynchronizationObject2=gdi32.D3DKMTSignalSynchronizationObject2")
#pragma comment(linker, "/export:D3DKMTSignalSynchronizationObjectFromCpu=gdi32.D3DKMTSignalSynchronizationObjectFromCpu")
#pragma comment(linker, "/export:D3DKMTSignalSynchronizationObjectFromGpu=gdi32.D3DKMTSignalSynchronizationObjectFromGpu")
#pragma comment(linker, "/export:D3DKMTSignalSynchronizationObjectFromGpu2=gdi32.D3DKMTSignalSynchronizationObjectFromGpu2")
#pragma comment(linker, "/export:D3DKMTSubmitCommand=gdi32.D3DKMTSubmitCommand")
#pragma comment(linker, "/export:D3DKMTTrimProcessCommitment=gdi32.D3DKMTTrimProcessCommitment")
#pragma comment(linker, "/export:D3DKMTUnlock=gdi32.D3DKMTUnlock")
#pragma comment(linker, "/export:D3DKMTUnlock2=gdi32.D3DKMTUnlock2")
#pragma comment(linker, "/export:D3DKMTUnpinDirectFlipResources=gdi32.D3DKMTUnpinDirectFlipResources")
#pragma comment(linker, "/export:D3DKMTUnregisterTrimNotification=gdi32.D3DKMTUnregisterTrimNotification")
#pragma comment(linker, "/export:D3DKMTUpdateAllocationProperty=gdi32.D3DKMTUpdateAllocationProperty")
#pragma comment(linker, "/export:D3DKMTUpdateGpuVirtualAddress=gdi32.D3DKMTUpdateGpuVirtualAddress")
#pragma comment(linker, "/export:D3DKMTUpdateOverlay=gdi32.D3DKMTUpdateOverlay")
#pragma comment(linker, "/export:D3DKMTWaitForIdle=gdi32.D3DKMTWaitForIdle")
#pragma comment(linker, "/export:D3DKMTWaitForSynchronizationObject=gdi32.D3DKMTWaitForSynchronizationObject")
#pragma comment(linker, "/export:D3DKMTWaitForSynchronizationObject2=gdi32.D3DKMTWaitForSynchronizationObject2")
#pragma comment(linker, "/export:D3DKMTWaitForSynchronizationObjectFromCpu=gdi32.D3DKMTWaitForSynchronizationObjectFromCpu")
#pragma comment(linker, "/export:D3DKMTWaitForSynchronizationObjectFromGpu=gdi32.D3DKMTWaitForSynchronizationObjectFromGpu")
#pragma comment(linker, "/export:D3DKMTWaitForVerticalBlankEvent=gdi32.D3DKMTWaitForVerticalBlankEvent")
#pragma comment(linker, "/export:D3DKMTWaitForVerticalBlankEvent2=gdi32.D3DKMTWaitForVerticalBlankEvent2")
#pragma comment(linker, "/export:DDCCIGetCapabilitiesString=gdi32.DDCCIGetCapabilitiesString")
#pragma comment(linker, "/export:DDCCIGetCapabilitiesStringLength=gdi32.DDCCIGetCapabilitiesStringLength")
#pragma comment(linker, "/export:DDCCIGetTimingReport=gdi32.DDCCIGetTimingReport")
#pragma comment(linker, "/export:DDCCIGetVCPFeature=gdi32.DDCCIGetVCPFeature")
#pragma comment(linker, "/export:DDCCISaveCurrentSettings=gdi32.DDCCISaveCurrentSettings")
#pragma comment(linker, "/export:DDCCISetVCPFeature=gdi32.DDCCISetVCPFeature")
#pragma comment(linker, "/export:DPtoLP=gdi32.DPtoLP") // XP
#pragma comment(linker, "/export:DdCreateFullscreenSprite=gdi32.DdCreateFullscreenSprite")
#pragma comment(linker, "/export:DdDestroyFullscreenSprite=gdi32.DdDestroyFullscreenSprite")
#pragma comment(linker, "/export:DdEntry0=gdi32.DdEntry0") // XP
#pragma comment(linker, "/export:DdEntry1=gdi32.DdEntry1") // XP
#pragma comment(linker, "/export:DdEntry10=gdi32.DdEntry10") // XP
#pragma comment(linker, "/export:DdEntry11=gdi32.DdEntry11") // XP
#pragma comment(linker, "/export:DdEntry12=gdi32.DdEntry12") // XP
#pragma comment(linker, "/export:DdEntry13=gdi32.DdEntry13") // XP
#pragma comment(linker, "/export:DdEntry14=gdi32.DdEntry14") // XP
#pragma comment(linker, "/export:DdEntry15=gdi32.DdEntry15") // XP
#pragma comment(linker, "/export:DdEntry16=gdi32.DdEntry16") // XP
#pragma comment(linker, "/export:DdEntry17=gdi32.DdEntry17") // XP
#pragma comment(linker, "/export:DdEntry18=gdi32.DdEntry18") // XP
#pragma comment(linker, "/export:DdEntry19=gdi32.DdEntry19") // XP
#pragma comment(linker, "/export:DdEntry2=gdi32.DdEntry2") // XP
#pragma comment(linker, "/export:DdEntry20=gdi32.DdEntry20") // XP
#pragma comment(linker, "/export:DdEntry21=gdi32.DdEntry21") // XP
#pragma comment(linker, "/export:DdEntry22=gdi32.DdEntry22") // XP
#pragma comment(linker, "/export:DdEntry23=gdi32.DdEntry23") // XP
#pragma comment(linker, "/export:DdEntry24=gdi32.DdEntry24") // XP
#pragma comment(linker, "/export:DdEntry25=gdi32.DdEntry25") // XP
#pragma comment(linker, "/export:DdEntry26=gdi32.DdEntry26") // XP
#pragma comment(linker, "/export:DdEntry27=gdi32.DdEntry27") // XP
#pragma comment(linker, "/export:DdEntry28=gdi32.DdEntry28") // XP
#pragma comment(linker, "/export:DdEntry29=gdi32.DdEntry29") // XP
#pragma comment(linker, "/export:DdEntry3=gdi32.DdEntry3") // XP
#pragma comment(linker, "/export:DdEntry30=gdi32.DdEntry30") // XP
#pragma comment(linker, "/export:DdEntry31=gdi32.DdEntry31") // XP
#pragma comment(linker, "/export:DdEntry32=gdi32.DdEntry32") // XP
#pragma comment(linker, "/export:DdEntry33=gdi32.DdEntry33") // XP
#pragma comment(linker, "/export:DdEntry34=gdi32.DdEntry34") // XP
#pragma comment(linker, "/export:DdEntry35=gdi32.DdEntry35") // XP
#pragma comment(linker, "/export:DdEntry36=gdi32.DdEntry36") // XP
#pragma comment(linker, "/export:DdEntry37=gdi32.DdEntry37") // XP
#pragma comment(linker, "/export:DdEntry38=gdi32.DdEntry38") // XP
#pragma comment(linker, "/export:DdEntry39=gdi32.DdEntry39") // XP
#pragma comment(linker, "/export:DdEntry4=gdi32.DdEntry4") // XP
#pragma comment(linker, "/export:DdEntry40=gdi32.DdEntry40") // XP
#pragma comment(linker, "/export:DdEntry41=gdi32.DdEntry41") // XP
#pragma comment(linker, "/export:DdEntry42=gdi32.DdEntry42") // XP
#pragma comment(linker, "/export:DdEntry43=gdi32.DdEntry43") // XP
#pragma comment(linker, "/export:DdEntry44=gdi32.DdEntry44") // XP
#pragma comment(linker, "/export:DdEntry45=gdi32.DdEntry45") // XP
#pragma comment(linker, "/export:DdEntry46=gdi32.DdEntry46") // XP
#pragma comment(linker, "/export:DdEntry47=gdi32.DdEntry47") // XP
#pragma comment(linker, "/export:DdEntry48=gdi32.DdEntry48") // XP
#pragma comment(linker, "/export:DdEntry49=gdi32.DdEntry49") // XP
#pragma comment(linker, "/export:DdEntry5=gdi32.DdEntry5") // XP
#pragma comment(linker, "/export:DdEntry50=gdi32.DdEntry50") // XP
#pragma comment(linker, "/export:DdEntry51=gdi32.DdEntry51") // XP
#pragma comment(linker, "/export:DdEntry52=gdi32.DdEntry52") // XP
#pragma comment(linker, "/export:DdEntry53=gdi32.DdEntry53") // XP
#pragma comment(linker, "/export:DdEntry54=gdi32.DdEntry54") // XP
#pragma comment(linker, "/export:DdEntry55=gdi32.DdEntry55") // XP
#pragma comment(linker, "/export:DdEntry56=gdi32.DdEntry56") // XP
#pragma comment(linker, "/export:DdEntry6=gdi32.DdEntry6") // XP
#pragma comment(linker, "/export:DdEntry7=gdi32.DdEntry7") // XP
#pragma comment(linker, "/export:DdEntry8=gdi32.DdEntry8") // XP
#pragma comment(linker, "/export:DdEntry9=gdi32.DdEntry9") // XP
#pragma comment(linker, "/export:DdNotifyFullscreenSpriteUpdate=gdi32.DdNotifyFullscreenSpriteUpdate")
#pragma comment(linker, "/export:DdQueryVisRgnUniqueness=gdi32.DdQueryVisRgnUniqueness")
#pragma comment(linker, "/export:DeleteColorSpace=gdi32.DeleteColorSpace") // XP
#pragma comment(linker, "/export:DeleteDC=gdi32.DeleteDC") // XP
#pragma comment(linker, "/export:DeleteEMFSpoolData=gdi32.DeleteEMFSpoolData")
#pragma comment(linker, "/export:DeleteEnhMetaFile=gdi32.DeleteEnhMetaFile") // XP
#pragma comment(linker, "/export:DeleteMetaFile=gdi32.DeleteMetaFile") // XP
#pragma comment(linker, "/export:DeleteObject=gdi32.DeleteObject") // XP
#pragma comment(linker, "/export:DescribePixelFormat=gdi32.DescribePixelFormat") // XP
#pragma comment(linker, "/export:DestroyOPMProtectedOutput=gdi32.DestroyOPMProtectedOutput")
#pragma comment(linker, "/export:DestroyPhysicalMonitorInternal=gdi32.DestroyPhysicalMonitorInternal")
#pragma comment(linker, "/export:DeviceCapabilitiesExA=gdi32.DeviceCapabilitiesExA") // XP
#pragma comment(linker, "/export:DeviceCapabilitiesExW=gdi32.DeviceCapabilitiesExW") // XP
#pragma comment(linker, "/export:DocumentEventEx=gdi32.DocumentEventEx")
#pragma comment(linker, "/export:DrawEscape=gdi32.DrawEscape") // XP
#pragma comment(linker, "/export:DwmCreatedBitmapRemotingOutput=gdi32.DwmCreatedBitmapRemotingOutput")
#pragma comment(linker, "/export:DwmGetDirtyRgnImpl=gdi32.DwmGetDirtyRgnImpl")
#pragma comment(linker, "/export:DxTrimNotificationListHead=gdi32.DxTrimNotificationListHead")
#pragma comment(linker, "/export:Ellipse=gdi32.Ellipse") // XP
#pragma comment(linker, "/export:EllipseStub=gdi32.EllipseStub")
#pragma comment(linker, "/export:EnableEUDC=gdi32.EnableEUDC") // XP
#pragma comment(linker, "/export:EndDoc=gdi32.EndDoc") // XP
#pragma comment(linker, "/export:EndDocImpl=gdi32.EndDocImpl")
#pragma comment(linker, "/export:EndFormPage=gdi32.EndFormPage") // XP
#pragma comment(linker, "/export:EndGdiRendering=gdi32.EndGdiRendering")
#pragma comment(linker, "/export:EndPage=gdi32.EndPage") // XP
#pragma comment(linker, "/export:EndPageImpl=gdi32.EndPageImpl")
#pragma comment(linker, "/export:EndPath=gdi32.EndPath") // XP
#pragma comment(linker, "/export:EndPathImpl=gdi32.EndPathImpl")
#pragma comment(linker, "/export:EngAcquireSemaphore=gdi32.EngAcquireSemaphore") // XP
#pragma comment(linker, "/export:EngAlphaBlend=gdi32.EngAlphaBlend") // XP
#pragma comment(linker, "/export:EngAssociateSurface=gdi32.EngAssociateSurface") // XP
#pragma comment(linker, "/export:EngBitBlt=gdi32.EngBitBlt") // XP
#pragma comment(linker, "/export:EngCheckAbort=gdi32.EngCheckAbort") // XP
#pragma comment(linker, "/export:EngComputeGlyphSet=gdi32.EngComputeGlyphSet") // XP
#pragma comment(linker, "/export:EngCopyBits=gdi32.EngCopyBits") // XP
#pragma comment(linker, "/export:EngCreateBitmap=gdi32.EngCreateBitmap") // XP
#pragma comment(linker, "/export:EngCreateClip=gdi32.EngCreateClip") // XP
#pragma comment(linker, "/export:EngCreateDeviceBitmap=gdi32.EngCreateDeviceBitmap") // XP
#pragma comment(linker, "/export:EngCreateDeviceSurface=gdi32.EngCreateDeviceSurface") // XP
#pragma comment(linker, "/export:EngCreatePalette=gdi32.EngCreatePalette") // XP
#pragma comment(linker, "/export:EngCreateSemaphore=gdi32.EngCreateSemaphore") // XP
#pragma comment(linker, "/export:EngDeleteClip=gdi32.EngDeleteClip") // XP
#pragma comment(linker, "/export:EngDeletePalette=gdi32.EngDeletePalette") // XP
#pragma comment(linker, "/export:EngDeletePath=gdi32.EngDeletePath") // XP
#pragma comment(linker, "/export:EngDeleteSemaphore=gdi32.EngDeleteSemaphore") // XP
#pragma comment(linker, "/export:EngDeleteSurface=gdi32.EngDeleteSurface") // XP
#pragma comment(linker, "/export:EngEraseSurface=gdi32.EngEraseSurface") // XP
#pragma comment(linker, "/export:EngFillPath=gdi32.EngFillPath") // XP
#pragma comment(linker, "/export:EngFindResource=gdi32.EngFindResource") // XP
#pragma comment(linker, "/export:EngFreeModule=gdi32.EngFreeModule") // XP
#pragma comment(linker, "/export:EngGetCurrentCodePage=gdi32.EngGetCurrentCodePage") // XP
#pragma comment(linker, "/export:EngGetDriverName=gdi32.EngGetDriverName") // XP
#pragma comment(linker, "/export:EngGetPrinterDataFileName=gdi32.EngGetPrinterDataFileName") // XP
#pragma comment(linker, "/export:EngGradientFill=gdi32.EngGradientFill") // XP
#pragma comment(linker, "/export:EngLineTo=gdi32.EngLineTo") // XP
#pragma comment(linker, "/export:EngLoadModule=gdi32.EngLoadModule") // XP
#pragma comment(linker, "/export:EngLockSurface=gdi32.EngLockSurface") // XP
#pragma comment(linker, "/export:EngMarkBandingSurface=gdi32.EngMarkBandingSurface") // XP
#pragma comment(linker, "/export:EngMultiByteToUnicodeN=gdi32.EngMultiByteToUnicodeN") // XP
#pragma comment(linker, "/export:EngMultiByteToWideChar=gdi32.EngMultiByteToWideChar") // XP
#pragma comment(linker, "/export:EngPaint=gdi32.EngPaint") // XP
#pragma comment(linker, "/export:EngPlgBlt=gdi32.EngPlgBlt") // XP
#pragma comment(linker, "/export:EngQueryEMFInfo=gdi32.EngQueryEMFInfo") // XP
#pragma comment(linker, "/export:EngQueryLocalTime=gdi32.EngQueryLocalTime") // XP
#pragma comment(linker, "/export:EngReleaseSemaphore=gdi32.EngReleaseSemaphore") // XP
#pragma comment(linker, "/export:EngStretchBlt=gdi32.EngStretchBlt") // XP
#pragma comment(linker, "/export:EngStretchBltROP=gdi32.EngStretchBltROP") // XP
#pragma comment(linker, "/export:EngStrokeAndFillPath=gdi32.EngStrokeAndFillPath") // XP
#pragma comment(linker, "/export:EngStrokePath=gdi32.EngStrokePath") // XP
#pragma comment(linker, "/export:EngTextOut=gdi32.EngTextOut") // XP
#pragma comment(linker, "/export:EngTransparentBlt=gdi32.EngTransparentBlt") // XP
#pragma comment(linker, "/export:EngUnicodeToMultiByteN=gdi32.EngUnicodeToMultiByteN") // XP
#pragma comment(linker, "/export:EngUnlockSurface=gdi32.EngUnlockSurface") // XP
#pragma comment(linker, "/export:EngWideCharToMultiByte=gdi32.EngWideCharToMultiByte") // XP
#pragma comment(linker, "/export:EnumEnhMetaFile=gdi32.EnumEnhMetaFile") // XP
#pragma comment(linker, "/export:EnumEnhMetaFileStub=gdi32.EnumEnhMetaFileStub")
#pragma comment(linker, "/export:EnumFontFamiliesA=gdi32.EnumFontFamiliesA") // XP
#pragma comment(linker, "/export:EnumFontFamiliesExA=gdi32.EnumFontFamiliesExA") // XP
#pragma comment(linker, "/export:EnumFontFamiliesExW=gdi32.EnumFontFamiliesExW") // XP
#pragma comment(linker, "/export:EnumFontFamiliesW=gdi32.EnumFontFamiliesW") // XP
#pragma comment(linker, "/export:EnumFontsA=gdi32.EnumFontsA") // XP
#pragma comment(linker, "/export:EnumFontsW=gdi32.EnumFontsW") // XP
#pragma comment(linker, "/export:EnumICMProfilesA=gdi32.EnumICMProfilesA") // XP
#pragma comment(linker, "/export:EnumICMProfilesW=gdi32.EnumICMProfilesW") // XP
#pragma comment(linker, "/export:EnumMetaFile=gdi32.EnumMetaFile") // XP
#pragma comment(linker, "/export:EnumObjects=gdi32.EnumObjects") // XP
#pragma comment(linker, "/export:EqualRgn=gdi32.EqualRgn") // XP
#pragma comment(linker, "/export:Escape=gdi32.Escape") // XP
#pragma comment(linker, "/export:EscapeImpl=gdi32.EscapeImpl")
#pragma comment(linker, "/export:EudcLoadLinkW=gdi32.EudcLoadLinkW") // XP
#pragma comment(linker, "/export:EudcUnloadLinkW=gdi32.EudcUnloadLinkW") // XP
#pragma comment(linker, "/export:ExcludeClipRect=gdi32.ExcludeClipRect") // XP
#pragma comment(linker, "/export:ExtCreatePen=gdi32.ExtCreatePen") // XP
#pragma comment(linker, "/export:ExtCreateRegion=gdi32.ExtCreateRegion") // XP
#pragma comment(linker, "/export:ExtEscape=gdi32.ExtEscape") // XP
#pragma comment(linker, "/export:ExtEscapeImpl=gdi32.ExtEscapeImpl")
#pragma comment(linker, "/export:ExtFloodFill=gdi32.ExtFloodFill") // XP
#pragma comment(linker, "/export:ExtSelectClipRgn=gdi32.ExtSelectClipRgn") // XP
#pragma comment(linker, "/export:ExtSelectClipRgnImpl=gdi32.ExtSelectClipRgnImpl")
#pragma comment(linker, "/export:ExtTextOutA=gdi32.ExtTextOutA") // XP
#pragma comment(linker, "/export:ExtTextOutAImpl=gdi32.ExtTextOutAImpl")
#pragma comment(linker, "/export:ExtTextOutW=gdi32.ExtTextOutW") // XP
#pragma comment(linker, "/export:ExtTextOutWImpl=gdi32.ExtTextOutWImpl")
#pragma comment(linker, "/export:FONTOBJ_cGetAllGlyphHandles=gdi32.FONTOBJ_cGetAllGlyphHandles") // XP
#pragma comment(linker, "/export:FONTOBJ_cGetGlyphs=gdi32.FONTOBJ_cGetGlyphs") // XP
#pragma comment(linker, "/export:FONTOBJ_pQueryGlyphAttrs=gdi32.FONTOBJ_pQueryGlyphAttrs") // XP
#pragma comment(linker, "/export:FONTOBJ_pfdg=gdi32.FONTOBJ_pfdg") // XP
#pragma comment(linker, "/export:FONTOBJ_pifi=gdi32.FONTOBJ_pifi") // XP
#pragma comment(linker, "/export:FONTOBJ_pvTrueTypeFontFile=gdi32.FONTOBJ_pvTrueTypeFontFile") // XP
#pragma comment(linker, "/export:FONTOBJ_pxoGetXform=gdi32.FONTOBJ_pxoGetXform") // XP
#pragma comment(linker, "/export:FONTOBJ_vGetInfo=gdi32.FONTOBJ_vGetInfo") // XP
#pragma comment(linker, "/export:FillPath=gdi32.FillPath") // XP
#pragma comment(linker, "/export:FillPathImpl=gdi32.FillPathImpl")
#pragma comment(linker, "/export:FillRgn=gdi32.FillRgn") // XP
#pragma comment(linker, "/export:FillRgnStub=gdi32.FillRgnStub")
#pragma comment(linker, "/export:FixBrushOrgEx=gdi32.FixBrushOrgEx") // XP
#pragma comment(linker, "/export:FlattenPath=gdi32.FlattenPath") // XP
#pragma comment(linker, "/export:FloodFill=gdi32.FloodFill") // XP
#pragma comment(linker, "/export:FontIsLinked=gdi32.FontIsLinked") // XP
#pragma comment(linker, "/export:FrameRgn=gdi32.FrameRgn") // XP
#pragma comment(linker, "/export:FrameRgnStub=gdi32.FrameRgnStub")
#pragma comment(linker, "/export:Gdi32DllInitialize=gdi32.Gdi32DllInitialize")
#pragma comment(linker, "/export:GdiAddFontResourceW=gdi32.GdiAddFontResourceW") // XP
#pragma comment(linker, "/export:GdiAddGlsBounds=gdi32.GdiAddGlsBounds") // XP
#pragma comment(linker, "/export:GdiAddGlsRecord=gdi32.GdiAddGlsRecord") // XP
#pragma comment(linker, "/export:GdiAlphaBlend=gdi32.GdiAlphaBlend") // XP
#pragma comment(linker, "/export:GdiArtificialDecrementDriver=gdi32.GdiArtificialDecrementDriver") // XP
#pragma comment(linker, "/export:GdiBatchLimit=gdi32.GdiBatchLimit")
#pragma comment(linker, "/export:GdiCleanCacheDC=gdi32.GdiCleanCacheDC") // XP
#pragma comment(linker, "/export:GdiComment=gdi32.GdiComment") // XP
#pragma comment(linker, "/export:GdiCommentStub=gdi32.GdiCommentStub")
#pragma comment(linker, "/export:GdiConsoleTextOut=gdi32.GdiConsoleTextOut") // XP
#pragma comment(linker, "/export:GdiConvertAndCheckDC=gdi32.GdiConvertAndCheckDC") // XP
#pragma comment(linker, "/export:GdiConvertBitmap=gdi32.GdiConvertBitmap") // XP
#pragma comment(linker, "/export:GdiConvertBitmapV5=gdi32.GdiConvertBitmapV5") // XP
#pragma comment(linker, "/export:GdiConvertBrush=gdi32.GdiConvertBrush") // XP
#pragma comment(linker, "/export:GdiConvertDC=gdi32.GdiConvertDC") // XP
#pragma comment(linker, "/export:GdiConvertEnhMetaFile=gdi32.GdiConvertEnhMetaFile") // XP
#pragma comment(linker, "/export:GdiConvertFont=gdi32.GdiConvertFont") // XP
#pragma comment(linker, "/export:GdiConvertMetaFilePict=gdi32.GdiConvertMetaFilePict") // XP
#pragma comment(linker, "/export:GdiConvertPalette=gdi32.GdiConvertPalette") // XP
#pragma comment(linker, "/export:GdiConvertRegion=gdi32.GdiConvertRegion") // XP
#pragma comment(linker, "/export:GdiConvertToDevmodeW=gdi32.GdiConvertToDevmodeW") // XP
#pragma comment(linker, "/export:GdiCreateLocalEnhMetaFile=gdi32.GdiCreateLocalEnhMetaFile") // XP
#pragma comment(linker, "/export:GdiCreateLocalMetaFilePict=gdi32.GdiCreateLocalMetaFilePict") // XP
#pragma comment(linker, "/export:GdiDeleteLocalDC=gdi32.GdiDeleteLocalDC") // XP
#pragma comment(linker, "/export:GdiDeleteSpoolFileHandle=gdi32.GdiDeleteSpoolFileHandle") // XP
#pragma comment(linker, "/export:GdiDescribePixelFormat=gdi32.GdiDescribePixelFormat") // XP
#pragma comment(linker, "/export:GdiDllInitialize=gdi32.GdiDllInitialize") // XP
#pragma comment(linker, "/export:GdiDllInitializeWrapper=gdi32.GdiDllInitializeWrapper")
#pragma comment(linker, "/export:GdiDrawStream=gdi32.GdiDrawStream") // XP
#pragma comment(linker, "/export:GdiEndDocEMF=gdi32.GdiEndDocEMF") // XP
#pragma comment(linker, "/export:GdiEndPageEMF=gdi32.GdiEndPageEMF") // XP
#pragma comment(linker, "/export:GdiEntry1=gdi32.GdiEntry1") // XP
#pragma comment(linker, "/export:GdiEntry10=gdi32.GdiEntry10") // XP
#pragma comment(linker, "/export:GdiEntry11=gdi32.GdiEntry11") // XP
#pragma comment(linker, "/export:GdiEntry12=gdi32.GdiEntry12") // XP
#pragma comment(linker, "/export:GdiEntry13=gdi32.GdiEntry13") // XP
#pragma comment(linker, "/export:GdiEntry14=gdi32.GdiEntry14") // XP
#pragma comment(linker, "/export:GdiEntry15=gdi32.GdiEntry15") // XP
#pragma comment(linker, "/export:GdiEntry16=gdi32.GdiEntry16") // XP
#pragma comment(linker, "/export:GdiEntry2=gdi32.GdiEntry2") // XP
#pragma comment(linker, "/export:GdiEntry3=gdi32.GdiEntry3") // XP
#pragma comment(linker, "/export:GdiEntry4=gdi32.GdiEntry4") // XP
#pragma comment(linker, "/export:GdiEntry5=gdi32.GdiEntry5") // XP
#pragma comment(linker, "/export:GdiEntry6=gdi32.GdiEntry6") // XP
#pragma comment(linker, "/export:GdiEntry7=gdi32.GdiEntry7") // XP
#pragma comment(linker, "/export:GdiEntry8=gdi32.GdiEntry8") // XP
#pragma comment(linker, "/export:GdiEntry9=gdi32.GdiEntry9") // XP
#pragma comment(linker, "/export:GdiFixUpHandle=gdi32.GdiFixUpHandle") // XP
#pragma comment(linker, "/export:GdiFlush=gdi32.GdiFlush") // XP
#pragma comment(linker, "/export:GdiFullscreenControl=gdi32.GdiFullscreenControl") // XP
#pragma comment(linker, "/export:GdiGetBatchLimit=gdi32.GdiGetBatchLimit") // XP
#pragma comment(linker, "/export:GdiGetBitmapBitsSize=gdi32.GdiGetBitmapBitsSize") // XP
#pragma comment(linker, "/export:GdiGetCharDimensions=gdi32.GdiGetCharDimensions") // XP
#pragma comment(linker, "/export:GdiGetCodePage=gdi32.GdiGetCodePage") // XP
#pragma comment(linker, "/export:GdiGetDC=gdi32.GdiGetDC") // XP
#pragma comment(linker, "/export:GdiGetDevmodeForPage=gdi32.GdiGetDevmodeForPage") // XP
#pragma comment(linker, "/export:GdiGetEntry=gdi32.GdiGetEntry")
#pragma comment(linker, "/export:GdiGetLocalBrush=gdi32.GdiGetLocalBrush") // XP
#pragma comment(linker, "/export:GdiGetLocalDC=gdi32.GdiGetLocalDC") // XP
#pragma comment(linker, "/export:GdiGetLocalFont=gdi32.GdiGetLocalFont") // XP
#pragma comment(linker, "/export:GdiGetPageCount=gdi32.GdiGetPageCount") // XP
#pragma comment(linker, "/export:GdiGetPageHandle=gdi32.GdiGetPageHandle") // XP
#pragma comment(linker, "/export:GdiGetSpoolFileHandle=gdi32.GdiGetSpoolFileHandle") // XP
#pragma comment(linker, "/export:GdiGetSpoolMessage=gdi32.GdiGetSpoolMessage") // XP
#pragma comment(linker, "/export:GdiGradientFill=gdi32.GdiGradientFill") // XP
#pragma comment(linker, "/export:GdiInitSpool=gdi32.GdiInitSpool") // XP
#pragma comment(linker, "/export:GdiInitializeLanguagePack=gdi32.GdiInitializeLanguagePack") // XP
#pragma comment(linker, "/export:GdiIsMetaFileDC=gdi32.GdiIsMetaFileDC") // XP
#pragma comment(linker, "/export:GdiIsMetaPrintDC=gdi32.GdiIsMetaPrintDC") // XP
#pragma comment(linker, "/export:GdiIsPlayMetafileDC=gdi32.GdiIsPlayMetafileDC") // XP
#pragma comment(linker, "/export:GdiIsScreenDC=gdi32.GdiIsScreenDC")
#pragma comment(linker, "/export:GdiIsUMPDSandboxingEnabled=gdi32.GdiIsUMPDSandboxingEnabled")
#pragma comment(linker, "/export:GdiLoadType1Fonts=gdi32.GdiLoadType1Fonts")
#pragma comment(linker, "/export:GdiPlayDCScript=gdi32.GdiPlayDCScript") // XP
#pragma comment(linker, "/export:GdiPlayEMF=gdi32.GdiPlayEMF") // XP
#pragma comment(linker, "/export:GdiPlayJournal=gdi32.GdiPlayJournal") // XP
#pragma comment(linker, "/export:GdiPlayPageEMF=gdi32.GdiPlayPageEMF") // XP
#pragma comment(linker, "/export:GdiPlayPrivatePageEMF=gdi32.GdiPlayPrivatePageEMF") // XP
#pragma comment(linker, "/export:GdiPlayScript=gdi32.GdiPlayScript") // XP
#pragma comment(linker, "/export:GdiPrinterThunk=gdi32.GdiPrinterThunk") // XP
#pragma comment(linker, "/export:GdiProcessSetup=gdi32.GdiProcessSetup") // XP
#pragma comment(linker, "/export:GdiQueryFonts=gdi32.GdiQueryFonts") // XP
#pragma comment(linker, "/export:GdiQueryTable=gdi32.GdiQueryTable") // XP
#pragma comment(linker, "/export:GdiRealizationInfo=gdi32.GdiRealizationInfo") // XP
#pragma comment(linker, "/export:GdiReleaseDC=gdi32.GdiReleaseDC") // XP
#pragma comment(linker, "/export:GdiReleaseLocalDC=gdi32.GdiReleaseLocalDC") // XP
#pragma comment(linker, "/export:GdiResetDCEMF=gdi32.GdiResetDCEMF") // XP
#pragma comment(linker, "/export:GdiSetAttrs=gdi32.GdiSetAttrs") // XP
#pragma comment(linker, "/export:GdiSetBatchLimit=gdi32.GdiSetBatchLimit") // XP
#pragma comment(linker, "/export:GdiSetLastError=gdi32.GdiSetLastError") // XP
#pragma comment(linker, "/export:GdiSetPixelFormat=gdi32.GdiSetPixelFormat") // XP
#pragma comment(linker, "/export:GdiSetServerAttr=gdi32.GdiSetServerAttr") // XP
#pragma comment(linker, "/export:GdiStartDocEMF=gdi32.GdiStartDocEMF") // XP
#pragma comment(linker, "/export:GdiStartPageEMF=gdi32.GdiStartPageEMF") // XP
#pragma comment(linker, "/export:GdiSupportsFontChangeEvent=gdi32.GdiSupportsFontChangeEvent")
#pragma comment(linker, "/export:GdiSwapBuffers=gdi32.GdiSwapBuffers") // XP
#pragma comment(linker, "/export:GdiTransparentBlt=gdi32.GdiTransparentBlt") // XP
#pragma comment(linker, "/export:GdiValidateHandle=gdi32.GdiValidateHandle") // XP
#pragma comment(linker, "/export:GetArcDirection=gdi32.GetArcDirection") // XP
#pragma comment(linker, "/export:GetAspectRatioFilterEx=gdi32.GetAspectRatioFilterEx") // XP
#pragma comment(linker, "/export:GetBitmapAttributes=gdi32.GetBitmapAttributes") // XP
#pragma comment(linker, "/export:GetBitmapBits=gdi32.GetBitmapBits") // XP
#pragma comment(linker, "/export:GetBitmapDimensionEx=gdi32.GetBitmapDimensionEx") // XP
#pragma comment(linker, "/export:GetBkColor=gdi32.GetBkColor") // XP
#pragma comment(linker, "/export:GetBkMode=gdi32.GetBkMode") // XP
#pragma comment(linker, "/export:GetBoundsRect=gdi32.GetBoundsRect") // XP
#pragma comment(linker, "/export:GetBrushAttributes=gdi32.GetBrushAttributes") // XP
#pragma comment(linker, "/export:GetBrushOrgEx=gdi32.GetBrushOrgEx") // XP
#pragma comment(linker, "/export:GetCOPPCompatibleOPMInformation=gdi32.GetCOPPCompatibleOPMInformation")
#pragma comment(linker, "/export:GetCertificate=gdi32.GetCertificate")
#pragma comment(linker, "/export:GetCertificateByHandle=gdi32.GetCertificateByHandle")
#pragma comment(linker, "/export:GetCertificateSize=gdi32.GetCertificateSize")
#pragma comment(linker, "/export:GetCertificateSizeByHandle=gdi32.GetCertificateSizeByHandle")
#pragma comment(linker, "/export:GetCharABCWidthsA=gdi32.GetCharABCWidthsA") // XP
#pragma comment(linker, "/export:GetCharABCWidthsFloatA=gdi32.GetCharABCWidthsFloatA") // XP
#pragma comment(linker, "/export:GetCharABCWidthsFloatW=gdi32.GetCharABCWidthsFloatW") // XP
#pragma comment(linker, "/export:GetCharABCWidthsI=gdi32.GetCharABCWidthsI") // XP
#pragma comment(linker, "/export:GetCharABCWidthsW=gdi32.GetCharABCWidthsW") // XP
#pragma comment(linker, "/export:GetCharWidth32A=gdi32.GetCharWidth32A") // XP
#pragma comment(linker, "/export:GetCharWidth32W=gdi32.GetCharWidth32W") // XP
#pragma comment(linker, "/export:GetCharWidthA=gdi32.GetCharWidthA") // XP
#pragma comment(linker, "/export:GetCharWidthFloatA=gdi32.GetCharWidthFloatA") // XP
#pragma comment(linker, "/export:GetCharWidthFloatW=gdi32.GetCharWidthFloatW") // XP
#pragma comment(linker, "/export:GetCharWidthI=gdi32.GetCharWidthI") // XP
#pragma comment(linker, "/export:GetCharWidthInfo=gdi32.GetCharWidthInfo") // XP
#pragma comment(linker, "/export:GetCharWidthW=gdi32.GetCharWidthW") // XP
#pragma comment(linker, "/export:GetCharacterPlacementA=gdi32.GetCharacterPlacementA") // XP
#pragma comment(linker, "/export:GetCharacterPlacementW=gdi32.GetCharacterPlacementW") // XP
#pragma comment(linker, "/export:GetClipBox=gdi32.GetClipBox") // XP
#pragma comment(linker, "/export:GetClipBoxImpl=gdi32.GetClipBoxImpl")
#pragma comment(linker, "/export:GetClipRgn=gdi32.GetClipRgn") // XP
#pragma comment(linker, "/export:GetCodePage=gdi32.GetCodePage")
#pragma comment(linker, "/export:GetColorAdjustment=gdi32.GetColorAdjustment") // XP
#pragma comment(linker, "/export:GetColorSpace=gdi32.GetColorSpace") // XP
#pragma comment(linker, "/export:GetCurrentDpiInfo=gdi32.GetCurrentDpiInfo")
#pragma comment(linker, "/export:GetCurrentObject=gdi32.GetCurrentObject") // XP
#pragma comment(linker, "/export:GetCurrentPositionEx=gdi32.GetCurrentPositionEx") // XP
#pragma comment(linker, "/export:GetCurrentPositionExStub=gdi32.GetCurrentPositionExStub")
#pragma comment(linker, "/export:GetDCBrushColor=gdi32.GetDCBrushColor") // XP
#pragma comment(linker, "/export:GetDCOrgEx=gdi32.GetDCOrgEx") // XP
#pragma comment(linker, "/export:GetDCPenColor=gdi32.GetDCPenColor") // XP
#pragma comment(linker, "/export:GetDIBColorTable=gdi32.GetDIBColorTable") // XP
#pragma comment(linker, "/export:GetDIBits=gdi32.GetDIBits") // XP
#pragma comment(linker, "/export:GetDeviceCaps=gdi32.GetDeviceCaps") // XP
#pragma comment(linker, "/export:GetDeviceGammaRamp=gdi32.GetDeviceGammaRamp") // XP
#pragma comment(linker, "/export:GetETM=gdi32.GetETM") // XP
#pragma comment(linker, "/export:GetEUDCTimeStamp=gdi32.GetEUDCTimeStamp") // XP
#pragma comment(linker, "/export:GetEUDCTimeStampExW=gdi32.GetEUDCTimeStampExW") // XP
#pragma comment(linker, "/export:GetEnhMetaFileA=gdi32.GetEnhMetaFileA") // XP
#pragma comment(linker, "/export:GetEnhMetaFileAStub=gdi32.GetEnhMetaFileAStub")
#pragma comment(linker, "/export:GetEnhMetaFileBits=gdi32.GetEnhMetaFileBits") // XP
#pragma comment(linker, "/export:GetEnhMetaFileDescriptionA=gdi32.GetEnhMetaFileDescriptionA") // XP
#pragma comment(linker, "/export:GetEnhMetaFileDescriptionAStub=gdi32.GetEnhMetaFileDescriptionAStub")
#pragma comment(linker, "/export:GetEnhMetaFileDescriptionW=gdi32.GetEnhMetaFileDescriptionW") // XP
#pragma comment(linker, "/export:GetEnhMetaFileHeader=gdi32.GetEnhMetaFileHeader") // XP
#pragma comment(linker, "/export:GetEnhMetaFilePaletteEntries=gdi32.GetEnhMetaFilePaletteEntries") // XP
#pragma comment(linker, "/export:GetEnhMetaFilePixelFormat=gdi32.GetEnhMetaFilePixelFormat") // XP
#pragma comment(linker, "/export:GetEnhMetaFileW=gdi32.GetEnhMetaFileW") // XP
#pragma comment(linker, "/export:GetFontAssocStatus=gdi32.GetFontAssocStatus") // XP
#pragma comment(linker, "/export:GetFontData=gdi32.GetFontData") // XP
#pragma comment(linker, "/export:GetFontDataImpl=gdi32.GetFontDataImpl")
#pragma comment(linker, "/export:GetFontFileData=gdi32.GetFontFileData")
#pragma comment(linker, "/export:GetFontFileInfo=gdi32.GetFontFileInfo")
#pragma comment(linker, "/export:GetFontLanguageInfo=gdi32.GetFontLanguageInfo") // XP
#pragma comment(linker, "/export:GetFontRealizationInfo=gdi32.GetFontRealizationInfo")
#pragma comment(linker, "/export:GetFontResourceInfoW=gdi32.GetFontResourceInfoW") // XP
#pragma comment(linker, "/export:GetFontUnicodeRanges=gdi32.GetFontUnicodeRanges") // XP
#pragma comment(linker, "/export:GetGlyphIndicesA=gdi32.GetGlyphIndicesA") // XP
#pragma comment(linker, "/export:GetGlyphIndicesW=gdi32.GetGlyphIndicesW") // XP
#pragma comment(linker, "/export:GetGlyphOutline=gdi32.GetGlyphOutline") // XP
#pragma comment(linker, "/export:GetGlyphOutlineA=gdi32.GetGlyphOutlineA") // XP
#pragma comment(linker, "/export:GetGlyphOutlineAStub=gdi32.GetGlyphOutlineAStub")
#pragma comment(linker, "/export:GetGlyphOutlineW=gdi32.GetGlyphOutlineW") // XP
#pragma comment(linker, "/export:GetGlyphOutlineWow=gdi32.GetGlyphOutlineWow") // XP
#pragma comment(linker, "/export:GetGraphicsMode=gdi32.GetGraphicsMode") // XP
#pragma comment(linker, "/export:GetHFONT=gdi32.GetHFONT") // XP
#pragma comment(linker, "/export:GetICMProfileA=gdi32.GetICMProfileA") // XP
#pragma comment(linker, "/export:GetICMProfileW=gdi32.GetICMProfileW") // XP
#pragma comment(linker, "/export:GetKerningPairs=gdi32.GetKerningPairs") // XP
#pragma comment(linker, "/export:GetKerningPairsA=gdi32.GetKerningPairsA") // XP
#pragma comment(linker, "/export:GetKerningPairsW=gdi32.GetKerningPairsW") // XP
#pragma comment(linker, "/export:GetLayout=gdi32.GetLayout") // XP
#pragma comment(linker, "/export:GetLogColorSpaceA=gdi32.GetLogColorSpaceA") // XP
#pragma comment(linker, "/export:GetLogColorSpaceW=gdi32.GetLogColorSpaceW") // XP
#pragma comment(linker, "/export:GetMapMode=gdi32.GetMapMode") // XP
#pragma comment(linker, "/export:GetMetaFileA=gdi32.GetMetaFileA") // XP
#pragma comment(linker, "/export:GetMetaFileBitsEx=gdi32.GetMetaFileBitsEx") // XP
#pragma comment(linker, "/export:GetMetaFileW=gdi32.GetMetaFileW") // XP
#pragma comment(linker, "/export:GetMetaRgn=gdi32.GetMetaRgn") // XP
#pragma comment(linker, "/export:GetMiterLimit=gdi32.GetMiterLimit") // XP
#pragma comment(linker, "/export:GetNearestColor=gdi32.GetNearestColor") // XP
#pragma comment(linker, "/export:GetNearestPaletteIndex=gdi32.GetNearestPaletteIndex") // XP
#pragma comment(linker, "/export:GetNumberOfPhysicalMonitors=gdi32.GetNumberOfPhysicalMonitors")
#pragma comment(linker, "/export:GetOPMInformation=gdi32.GetOPMInformation")
#pragma comment(linker, "/export:GetOPMRandomNumber=gdi32.GetOPMRandomNumber")
#pragma comment(linker, "/export:GetObjectA=gdi32.GetObjectA") // XP
#pragma comment(linker, "/export:GetObjectType=gdi32.GetObjectType") // XP
#pragma comment(linker, "/export:GetObjectW=gdi32.GetObjectW") // XP
#pragma comment(linker, "/export:GetOutlineTextMetricsA=gdi32.GetOutlineTextMetricsA") // XP
#pragma comment(linker, "/export:GetOutlineTextMetricsW=gdi32.GetOutlineTextMetricsW") // XP
#pragma comment(linker, "/export:GetPaletteEntries=gdi32.GetPaletteEntries") // XP
#pragma comment(linker, "/export:GetPath=gdi32.GetPath") // XP
#pragma comment(linker, "/export:GetPhysicalMonitorDescription=gdi32.GetPhysicalMonitorDescription")
#pragma comment(linker, "/export:GetPhysicalMonitors=gdi32.GetPhysicalMonitors")
#pragma comment(linker, "/export:GetPixel=gdi32.GetPixel") // XP
#pragma comment(linker, "/export:GetPixelFormat=gdi32.GetPixelFormat") // XP
#pragma comment(linker, "/export:GetPolyFillMode=gdi32.GetPolyFillMode") // XP
#pragma comment(linker, "/export:GetProcessSessionFonts=gdi32.GetProcessSessionFonts")
#pragma comment(linker, "/export:GetROP2=gdi32.GetROP2") // XP
#pragma comment(linker, "/export:GetROP2Stub=gdi32.GetROP2Stub")
#pragma comment(linker, "/export:GetRandomRgn=gdi32.GetRandomRgn") // XP
#pragma comment(linker, "/export:GetRasterizerCaps=gdi32.GetRasterizerCaps") // XP
#pragma comment(linker, "/export:GetRasterizerCapsStub=gdi32.GetRasterizerCapsStub")
#pragma comment(linker, "/export:GetRegionData=gdi32.GetRegionData") // XP
#pragma comment(linker, "/export:GetRelAbs=gdi32.GetRelAbs") // XP
#pragma comment(linker, "/export:GetRgnBox=gdi32.GetRgnBox") // XP
#pragma comment(linker, "/export:GetStockObject=gdi32.GetStockObject") // XP
#pragma comment(linker, "/export:GetStretchBltMode=gdi32.GetStretchBltMode") // XP
#pragma comment(linker, "/export:GetStringBitmapA=gdi32.GetStringBitmapA") // XP
#pragma comment(linker, "/export:GetStringBitmapW=gdi32.GetStringBitmapW") // XP
#pragma comment(linker, "/export:GetSuggestedOPMProtectedOutputArraySize=gdi32.GetSuggestedOPMProtectedOutputArraySize")
#pragma comment(linker, "/export:GetSystemPaletteEntries=gdi32.GetSystemPaletteEntries") // XP
#pragma comment(linker, "/export:GetSystemPaletteUse=gdi32.GetSystemPaletteUse") // XP
#pragma comment(linker, "/export:GetTextAlign=gdi32.GetTextAlign") // XP
#pragma comment(linker, "/export:GetTextCharacterExtra=gdi32.GetTextCharacterExtra") // XP
#pragma comment(linker, "/export:GetTextCharacterExtraStub=gdi32.GetTextCharacterExtraStub")
#pragma comment(linker, "/export:GetTextCharset=gdi32.GetTextCharset") // XP
#pragma comment(linker, "/export:GetTextCharsetInfo=gdi32.GetTextCharsetInfo") // XP
#pragma comment(linker, "/export:GetTextColor=gdi32.GetTextColor") // XP
#pragma comment(linker, "/export:GetTextExtentExPointA=gdi32.GetTextExtentExPointA") // XP
#pragma comment(linker, "/export:GetTextExtentExPointAStub=gdi32.GetTextExtentExPointAStub")
#pragma comment(linker, "/export:GetTextExtentExPointI=gdi32.GetTextExtentExPointI") // XP
#pragma comment(linker, "/export:GetTextExtentExPointW=gdi32.GetTextExtentExPointW") // XP
#pragma comment(linker, "/export:GetTextExtentExPointWPri=gdi32.GetTextExtentExPointWPri") // XP
#pragma comment(linker, "/export:GetTextExtentPoint32A=gdi32.GetTextExtentPoint32A") // XP
#pragma comment(linker, "/export:GetTextExtentPoint32AStub=gdi32.GetTextExtentPoint32AStub")
#pragma comment(linker, "/export:GetTextExtentPoint32W=gdi32.GetTextExtentPoint32W") // XP
#pragma comment(linker, "/export:GetTextExtentPointA=gdi32.GetTextExtentPointA") // XP
#pragma comment(linker, "/export:GetTextExtentPointAStub=gdi32.GetTextExtentPointAStub")
#pragma comment(linker, "/export:GetTextExtentPointI=gdi32.GetTextExtentPointI") // XP
#pragma comment(linker, "/export:GetTextExtentPointW=gdi32.GetTextExtentPointW") // XP
#pragma comment(linker, "/export:GetTextFaceA=gdi32.GetTextFaceA") // XP
#pragma comment(linker, "/export:GetTextFaceAliasW=gdi32.GetTextFaceAliasW") // XP
#pragma comment(linker, "/export:GetTextFaceW=gdi32.GetTextFaceW") // XP
#pragma comment(linker, "/export:GetTextMetricsA=gdi32.GetTextMetricsA") // XP
#pragma comment(linker, "/export:GetTextMetricsAImpl=gdi32.GetTextMetricsAImpl")
#pragma comment(linker, "/export:GetTextMetricsW=gdi32.GetTextMetricsW") // XP
#pragma comment(linker, "/export:GetTransform=gdi32.GetTransform") // XP
#pragma comment(linker, "/export:GetViewportExtEx=gdi32.GetViewportExtEx") // XP
#pragma comment(linker, "/export:GetViewportOrgEx=gdi32.GetViewportOrgEx") // XP
#pragma comment(linker, "/export:GetWinMetaFileBits=gdi32.GetWinMetaFileBits") // XP
#pragma comment(linker, "/export:GetWindowExtEx=gdi32.GetWindowExtEx") // XP
#pragma comment(linker, "/export:GetWindowOrgEx=gdi32.GetWindowOrgEx") // XP
#pragma comment(linker, "/export:GetWorldTransform=gdi32.GetWorldTransform") // XP
#pragma comment(linker, "/export:HT_Get8BPPFormatPalette=gdi32.HT_Get8BPPFormatPalette") // XP
#pragma comment(linker, "/export:HT_Get8BPPMaskPalette=gdi32.HT_Get8BPPMaskPalette") // XP
#pragma comment(linker, "/export:IcmDeleteLocalDC=gdi32.IcmDeleteLocalDC")
#pragma comment(linker, "/export:IcmReleaseCachedColorSpace=gdi32.IcmReleaseCachedColorSpace")
#pragma comment(linker, "/export:InternalDeleteDC=gdi32.InternalDeleteDC")
#pragma comment(linker, "/export:IntersectClipRect=gdi32.IntersectClipRect") // XP
#pragma comment(linker, "/export:IntersectClipRectImpl=gdi32.IntersectClipRectImpl")
#pragma comment(linker, "/export:InvertRgn=gdi32.InvertRgn") // XP
#pragma comment(linker, "/export:InvertRgnStub=gdi32.InvertRgnStub")
#pragma comment(linker, "/export:IsValidEnhMetaRecord=gdi32.IsValidEnhMetaRecord") // XP
#pragma comment(linker, "/export:IsValidEnhMetaRecordOffExt=gdi32.IsValidEnhMetaRecordOffExt") // XP
#pragma comment(linker, "/export:LPtoDP=gdi32.LPtoDP") // XP
#pragma comment(linker, "/export:LineDDA=gdi32.LineDDA") // XP
#pragma comment(linker, "/export:LineTo=gdi32.LineTo") // XP
#pragma comment(linker, "/export:LineToImpl=gdi32.LineToImpl")
#pragma comment(linker, "/export:LpkDrawTextEx=gdi32.LpkDrawTextEx")
#pragma comment(linker, "/export:LpkEditControl=gdi32.LpkEditControl")
#pragma comment(linker, "/export:LpkExtTextOut=gdi32.LpkExtTextOut")
#pragma comment(linker, "/export:LpkGetCharacterPlacement=gdi32.LpkGetCharacterPlacement")
#pragma comment(linker, "/export:LpkGetEditControl=gdi32.LpkGetEditControl")
#pragma comment(linker, "/export:LpkGetTextExtentExPoint=gdi32.LpkGetTextExtentExPoint")
#pragma comment(linker, "/export:LpkInitialize=gdi32.LpkInitialize")
#pragma comment(linker, "/export:LpkPSMTextOut=gdi32.LpkPSMTextOut")
#pragma comment(linker, "/export:LpkPresent=gdi32.LpkPresent")
#pragma comment(linker, "/export:LpkTabbedTextOut=gdi32.LpkTabbedTextOut")
#pragma comment(linker, "/export:LpkUseGDIWidthCache=gdi32.LpkUseGDIWidthCache")
#pragma comment(linker, "/export:LpkpEditControlSize=gdi32.LpkpEditControlSize")
#pragma comment(linker, "/export:LpkpInitializeEditControl=gdi32.LpkpInitializeEditControl")
#pragma comment(linker, "/export:MF16_DeleteObject=gdi32.MF16_DeleteObject")
#pragma comment(linker, "/export:MF_DeleteObject=gdi32.MF_DeleteObject")
#pragma comment(linker, "/export:MaskBlt=gdi32.MaskBlt") // XP
#pragma comment(linker, "/export:MirrorRgn=gdi32.MirrorRgn") // XP
#pragma comment(linker, "/export:ModerncoreGdiInit=gdi32.ModerncoreGdiInit")
#pragma comment(linker, "/export:ModifyWorldTransform=gdi32.ModifyWorldTransform") // XP
#pragma comment(linker, "/export:MoveToEx=gdi32.MoveToEx") // XP
#pragma comment(linker, "/export:MoveToExImpl=gdi32.MoveToExImpl")
#pragma comment(linker, "/export:NamedEscape=gdi32.NamedEscape") // XP
#pragma comment(linker, "/export:NtGdiAbortDoc=gdi32.NtGdiAbortDoc")
#pragma comment(linker, "/export:NtGdiAbortPath=gdi32.NtGdiAbortPath")
#pragma comment(linker, "/export:NtGdiAddEmbFontToDC=gdi32.NtGdiAddEmbFontToDC")
#pragma comment(linker, "/export:NtGdiAddFontMemResourceEx=gdi32.NtGdiAddFontMemResourceEx")
#pragma comment(linker, "/export:NtGdiAddFontResourceW=gdi32.NtGdiAddFontResourceW")
#pragma comment(linker, "/export:NtGdiAddRemoteFontToDC=gdi32.NtGdiAddRemoteFontToDC")
#pragma comment(linker, "/export:NtGdiAddRemoteMMInstanceToDC=gdi32.NtGdiAddRemoteMMInstanceToDC")
#pragma comment(linker, "/export:NtGdiAlphaBlend=gdi32.NtGdiAlphaBlend")
#pragma comment(linker, "/export:NtGdiAngleArc=gdi32.NtGdiAngleArc")
#pragma comment(linker, "/export:NtGdiAnyLinkedFonts=gdi32.NtGdiAnyLinkedFonts")
#pragma comment(linker, "/export:NtGdiArcInternal=gdi32.NtGdiArcInternal")
#pragma comment(linker, "/export:NtGdiBRUSHOBJ_DeleteRbrush=gdi32.NtGdiBRUSHOBJ_DeleteRbrush")
#pragma comment(linker, "/export:NtGdiBRUSHOBJ_hGetColorTransform=gdi32.NtGdiBRUSHOBJ_hGetColorTransform")
#pragma comment(linker, "/export:NtGdiBRUSHOBJ_pvAllocRbrush=gdi32.NtGdiBRUSHOBJ_pvAllocRbrush")
#pragma comment(linker, "/export:NtGdiBRUSHOBJ_pvGetRbrush=gdi32.NtGdiBRUSHOBJ_pvGetRbrush")
#pragma comment(linker, "/export:NtGdiBRUSHOBJ_ulGetBrushColor=gdi32.NtGdiBRUSHOBJ_ulGetBrushColor")
#pragma comment(linker, "/export:NtGdiBeginGdiRendering=gdi32.NtGdiBeginGdiRendering")
#pragma comment(linker, "/export:NtGdiBeginPath=gdi32.NtGdiBeginPath")
#pragma comment(linker, "/export:NtGdiBitBlt=gdi32.NtGdiBitBlt")
#pragma comment(linker, "/export:NtGdiCLIPOBJ_bEnum=gdi32.NtGdiCLIPOBJ_bEnum")
#pragma comment(linker, "/export:NtGdiCLIPOBJ_cEnumStart=gdi32.NtGdiCLIPOBJ_cEnumStart")
#pragma comment(linker, "/export:NtGdiCLIPOBJ_ppoGetPath=gdi32.NtGdiCLIPOBJ_ppoGetPath")
#pragma comment(linker, "/export:NtGdiCancelDC=gdi32.NtGdiCancelDC")
#pragma comment(linker, "/export:NtGdiChangeGhostFont=gdi32.NtGdiChangeGhostFont")
#pragma comment(linker, "/export:NtGdiCheckBitmapBits=gdi32.NtGdiCheckBitmapBits")
#pragma comment(linker, "/export:NtGdiClearBitmapAttributes=gdi32.NtGdiClearBitmapAttributes")
#pragma comment(linker, "/export:NtGdiClearBrushAttributes=gdi32.NtGdiClearBrushAttributes")
#pragma comment(linker, "/export:NtGdiCloseFigure=gdi32.NtGdiCloseFigure")
#pragma comment(linker, "/export:NtGdiColorCorrectPalette=gdi32.NtGdiColorCorrectPalette")
#pragma comment(linker, "/export:NtGdiCombineRgn=gdi32.NtGdiCombineRgn")
#pragma comment(linker, "/export:NtGdiCombineTransform=gdi32.NtGdiCombineTransform")
#pragma comment(linker, "/export:NtGdiComputeXformCoefficients=gdi32.NtGdiComputeXformCoefficients")
#pragma comment(linker, "/export:NtGdiConfigureOPMProtectedOutput=gdi32.NtGdiConfigureOPMProtectedOutput")
#pragma comment(linker, "/export:NtGdiConvertMetafileRect=gdi32.NtGdiConvertMetafileRect")
#pragma comment(linker, "/export:NtGdiCreateBitmap=gdi32.NtGdiCreateBitmap")
#pragma comment(linker, "/export:NtGdiCreateBitmapFromDxSurface=gdi32.NtGdiCreateBitmapFromDxSurface")
#pragma comment(linker, "/export:NtGdiCreateBitmapFromDxSurface2=gdi32.NtGdiCreateBitmapFromDxSurface2")
#pragma comment(linker, "/export:NtGdiCreateClientObj=gdi32.NtGdiCreateClientObj")
#pragma comment(linker, "/export:NtGdiCreateColorSpace=gdi32.NtGdiCreateColorSpace")
#pragma comment(linker, "/export:NtGdiCreateColorTransform=gdi32.NtGdiCreateColorTransform")
#pragma comment(linker, "/export:NtGdiCreateCompatibleBitmap=gdi32.NtGdiCreateCompatibleBitmap")
#pragma comment(linker, "/export:NtGdiCreateCompatibleDC=gdi32.NtGdiCreateCompatibleDC")
#pragma comment(linker, "/export:NtGdiCreateDIBBrush=gdi32.NtGdiCreateDIBBrush")
#pragma comment(linker, "/export:NtGdiCreateDIBSection=gdi32.NtGdiCreateDIBSection")
#pragma comment(linker, "/export:NtGdiCreateDIBitmapInternal=gdi32.NtGdiCreateDIBitmapInternal")
#pragma comment(linker, "/export:NtGdiCreateEllipticRgn=gdi32.NtGdiCreateEllipticRgn")
#pragma comment(linker, "/export:NtGdiCreateHalftonePalette=gdi32.NtGdiCreateHalftonePalette")
#pragma comment(linker, "/export:NtGdiCreateHatchBrushInternal=gdi32.NtGdiCreateHatchBrushInternal")
#pragma comment(linker, "/export:NtGdiCreateMetafileDC=gdi32.NtGdiCreateMetafileDC")
#pragma comment(linker, "/export:NtGdiCreateOPMProtectedOutput=gdi32.NtGdiCreateOPMProtectedOutput")
#pragma comment(linker, "/export:NtGdiCreateOPMProtectedOutputs=gdi32.NtGdiCreateOPMProtectedOutputs")
#pragma comment(linker, "/export:NtGdiCreatePaletteInternal=gdi32.NtGdiCreatePaletteInternal")
#pragma comment(linker, "/export:NtGdiCreatePatternBrushInternal=gdi32.NtGdiCreatePatternBrushInternal")
#pragma comment(linker, "/export:NtGdiCreatePen=gdi32.NtGdiCreatePen")
#pragma comment(linker, "/export:NtGdiCreateRectRgn=gdi32.NtGdiCreateRectRgn")
#pragma comment(linker, "/export:NtGdiCreateRoundRectRgn=gdi32.NtGdiCreateRoundRectRgn")
#pragma comment(linker, "/export:NtGdiCreateServerMetaFile=gdi32.NtGdiCreateServerMetaFile")
#pragma comment(linker, "/export:NtGdiCreateSessionMappedDIBSection=gdi32.NtGdiCreateSessionMappedDIBSection")
#pragma comment(linker, "/export:NtGdiCreateSolidBrush=gdi32.NtGdiCreateSolidBrush")
#pragma comment(linker, "/export:NtGdiD3dContextCreate=gdi32.NtGdiD3dContextCreate")
#pragma comment(linker, "/export:NtGdiD3dContextDestroy=gdi32.NtGdiD3dContextDestroy")
#pragma comment(linker, "/export:NtGdiD3dContextDestroyAll=gdi32.NtGdiD3dContextDestroyAll")
#pragma comment(linker, "/export:NtGdiD3dDrawPrimitives2=gdi32.NtGdiD3dDrawPrimitives2")
#pragma comment(linker, "/export:NtGdiD3dValidateTextureStageState=gdi32.NtGdiD3dValidateTextureStageState")
#pragma comment(linker, "/export:NtGdiDDCCIGetCapabilitiesString=gdi32.NtGdiDDCCIGetCapabilitiesString")
#pragma comment(linker, "/export:NtGdiDDCCIGetCapabilitiesStringLength=gdi32.NtGdiDDCCIGetCapabilitiesStringLength")
#pragma comment(linker, "/export:NtGdiDDCCIGetTimingReport=gdi32.NtGdiDDCCIGetTimingReport")
#pragma comment(linker, "/export:NtGdiDDCCIGetVCPFeature=gdi32.NtGdiDDCCIGetVCPFeature")
#pragma comment(linker, "/export:NtGdiDDCCISaveCurrentSettings=gdi32.NtGdiDDCCISaveCurrentSettings")
#pragma comment(linker, "/export:NtGdiDDCCISetVCPFeature=gdi32.NtGdiDDCCISetVCPFeature")
#pragma comment(linker, "/export:NtGdiDdAddAttachedSurface=gdi32.NtGdiDdAddAttachedSurface")
#pragma comment(linker, "/export:NtGdiDdAlphaBlt=gdi32.NtGdiDdAlphaBlt")
#pragma comment(linker, "/export:NtGdiDdAttachSurface=gdi32.NtGdiDdAttachSurface")
#pragma comment(linker, "/export:NtGdiDdBeginMoCompFrame=gdi32.NtGdiDdBeginMoCompFrame")
#pragma comment(linker, "/export:NtGdiDdBlt=gdi32.NtGdiDdBlt")
#pragma comment(linker, "/export:NtGdiDdCanCreateD3DBuffer=gdi32.NtGdiDdCanCreateD3DBuffer")
#pragma comment(linker, "/export:NtGdiDdCanCreateSurface=gdi32.NtGdiDdCanCreateSurface")
#pragma comment(linker, "/export:NtGdiDdColorControl=gdi32.NtGdiDdColorControl")
#pragma comment(linker, "/export:NtGdiDdCreateD3DBuffer=gdi32.NtGdiDdCreateD3DBuffer")
#pragma comment(linker, "/export:NtGdiDdCreateDirectDrawObject=gdi32.NtGdiDdCreateDirectDrawObject")
#pragma comment(linker, "/export:NtGdiDdCreateFullscreenSprite=gdi32.NtGdiDdCreateFullscreenSprite")
#pragma comment(linker, "/export:NtGdiDdCreateMoComp=gdi32.NtGdiDdCreateMoComp")
#pragma comment(linker, "/export:NtGdiDdCreateSurface=gdi32.NtGdiDdCreateSurface")
#pragma comment(linker, "/export:NtGdiDdCreateSurfaceEx=gdi32.NtGdiDdCreateSurfaceEx")
#pragma comment(linker, "/export:NtGdiDdCreateSurfaceObject=gdi32.NtGdiDdCreateSurfaceObject")
#pragma comment(linker, "/export:NtGdiDdDDIAbandonSwapChain=gdi32.NtGdiDdDDIAbandonSwapChain")
#pragma comment(linker, "/export:NtGdiDdDDIAcquireKeyedMutex=gdi32.NtGdiDdDDIAcquireKeyedMutex")
#pragma comment(linker, "/export:NtGdiDdDDIAcquireKeyedMutex2=gdi32.NtGdiDdDDIAcquireKeyedMutex2")
#pragma comment(linker, "/export:NtGdiDdDDIAcquireSwapChain=gdi32.NtGdiDdDDIAcquireSwapChain")
#pragma comment(linker, "/export:NtGdiDdDDIAdjustFullscreenGamma=gdi32.NtGdiDdDDIAdjustFullscreenGamma")
#pragma comment(linker, "/export:NtGdiDdDDICacheHybridQueryValue=gdi32.NtGdiDdDDICacheHybridQueryValue")
#pragma comment(linker, "/export:NtGdiDdDDIChangeVideoMemoryReservation=gdi32.NtGdiDdDDIChangeVideoMemoryReservation")
#pragma comment(linker, "/export:NtGdiDdDDICheckExclusiveOwnership=gdi32.NtGdiDdDDICheckExclusiveOwnership")
#pragma comment(linker, "/export:NtGdiDdDDICheckMonitorPowerState=gdi32.NtGdiDdDDICheckMonitorPowerState")
#pragma comment(linker, "/export:NtGdiDdDDICheckMultiPlaneOverlaySupport=gdi32.NtGdiDdDDICheckMultiPlaneOverlaySupport")
#pragma comment(linker, "/export:NtGdiDdDDICheckMultiPlaneOverlaySupport2=gdi32.NtGdiDdDDICheckMultiPlaneOverlaySupport2")
#pragma comment(linker, "/export:NtGdiDdDDICheckMultiPlaneOverlaySupport3=gdi32.NtGdiDdDDICheckMultiPlaneOverlaySupport3")
#pragma comment(linker, "/export:NtGdiDdDDICheckOcclusion=gdi32.NtGdiDdDDICheckOcclusion")
#pragma comment(linker, "/export:NtGdiDdDDICheckSharedResourceAccess=gdi32.NtGdiDdDDICheckSharedResourceAccess")
#pragma comment(linker, "/export:NtGdiDdDDICheckVidPnExclusiveOwnership=gdi32.NtGdiDdDDICheckVidPnExclusiveOwnership")
#pragma comment(linker, "/export:NtGdiDdDDICloseAdapter=gdi32.NtGdiDdDDICloseAdapter")
#pragma comment(linker, "/export:NtGdiDdDDIConfigureSharedResource=gdi32.NtGdiDdDDIConfigureSharedResource")
#pragma comment(linker, "/export:NtGdiDdDDICreateAllocation=gdi32.NtGdiDdDDICreateAllocation")
#pragma comment(linker, "/export:NtGdiDdDDICreateContext=gdi32.NtGdiDdDDICreateContext")
#pragma comment(linker, "/export:NtGdiDdDDICreateContextVirtual=gdi32.NtGdiDdDDICreateContextVirtual")
#pragma comment(linker, "/export:NtGdiDdDDICreateDCFromMemory=gdi32.NtGdiDdDDICreateDCFromMemory")
#pragma comment(linker, "/export:NtGdiDdDDICreateDevice=gdi32.NtGdiDdDDICreateDevice")
#pragma comment(linker, "/export:NtGdiDdDDICreateKeyedMutex=gdi32.NtGdiDdDDICreateKeyedMutex")
#pragma comment(linker, "/export:NtGdiDdDDICreateKeyedMutex2=gdi32.NtGdiDdDDICreateKeyedMutex2")
#pragma comment(linker, "/export:NtGdiDdDDICreateOutputDupl=gdi32.NtGdiDdDDICreateOutputDupl")
#pragma comment(linker, "/export:NtGdiDdDDICreateOverlay=gdi32.NtGdiDdDDICreateOverlay")
#pragma comment(linker, "/export:NtGdiDdDDICreatePagingQueue=gdi32.NtGdiDdDDICreatePagingQueue")
#pragma comment(linker, "/export:NtGdiDdDDICreateSwapChain=gdi32.NtGdiDdDDICreateSwapChain")
#pragma comment(linker, "/export:NtGdiDdDDICreateSynchronizationObject=gdi32.NtGdiDdDDICreateSynchronizationObject")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyAllocation=gdi32.NtGdiDdDDIDestroyAllocation")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyAllocation2=gdi32.NtGdiDdDDIDestroyAllocation2")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyContext=gdi32.NtGdiDdDDIDestroyContext")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyDCFromMemory=gdi32.NtGdiDdDDIDestroyDCFromMemory")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyDevice=gdi32.NtGdiDdDDIDestroyDevice")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyKeyedMutex=gdi32.NtGdiDdDDIDestroyKeyedMutex")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyOutputDupl=gdi32.NtGdiDdDDIDestroyOutputDupl")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyOverlay=gdi32.NtGdiDdDDIDestroyOverlay")
#pragma comment(linker, "/export:NtGdiDdDDIDestroyPagingQueue=gdi32.NtGdiDdDDIDestroyPagingQueue")
#pragma comment(linker, "/export:NtGdiDdDDIDestroySynchronizationObject=gdi32.NtGdiDdDDIDestroySynchronizationObject")
#pragma comment(linker, "/export:NtGdiDdDDIEnumAdapters=gdi32.NtGdiDdDDIEnumAdapters")
#pragma comment(linker, "/export:NtGdiDdDDIEnumAdapters2=gdi32.NtGdiDdDDIEnumAdapters2")
#pragma comment(linker, "/export:NtGdiDdDDIEscape=gdi32.NtGdiDdDDIEscape")
#pragma comment(linker, "/export:NtGdiDdDDIEvict=gdi32.NtGdiDdDDIEvict")
#pragma comment(linker, "/export:NtGdiDdDDIFlipOverlay=gdi32.NtGdiDdDDIFlipOverlay")
#pragma comment(linker, "/export:NtGdiDdDDIFlushHeapTransitions=gdi32.NtGdiDdDDIFlushHeapTransitions")
#pragma comment(linker, "/export:NtGdiDdDDIFreeGpuVirtualAddress=gdi32.NtGdiDdDDIFreeGpuVirtualAddress")
#pragma comment(linker, "/export:NtGdiDdDDIGetCachedHybridQueryValue=gdi32.NtGdiDdDDIGetCachedHybridQueryValue")
#pragma comment(linker, "/export:NtGdiDdDDIGetContextInProcessSchedulingPriority=gdi32.NtGdiDdDDIGetContextInProcessSchedulingPriority")
#pragma comment(linker, "/export:NtGdiDdDDIGetContextSchedulingPriority=gdi32.NtGdiDdDDIGetContextSchedulingPriority")
#pragma comment(linker, "/export:NtGdiDdDDIGetDWMVerticalBlankEvent=gdi32.NtGdiDdDDIGetDWMVerticalBlankEvent")
#pragma comment(linker, "/export:NtGdiDdDDIGetDeviceState=gdi32.NtGdiDdDDIGetDeviceState")
#pragma comment(linker, "/export:NtGdiDdDDIGetDisplayModeList=gdi32.NtGdiDdDDIGetDisplayModeList")
#pragma comment(linker, "/export:NtGdiDdDDIGetMultisampleMethodList=gdi32.NtGdiDdDDIGetMultisampleMethodList")
#pragma comment(linker, "/export:NtGdiDdDDIGetOverlayState=gdi32.NtGdiDdDDIGetOverlayState")
#pragma comment(linker, "/export:NtGdiDdDDIGetPresentHistory=gdi32.NtGdiDdDDIGetPresentHistory")
#pragma comment(linker, "/export:NtGdiDdDDIGetPresentQueueEvent=gdi32.NtGdiDdDDIGetPresentQueueEvent")
#pragma comment(linker, "/export:NtGdiDdDDIGetProcessSchedulingPriorityClass=gdi32.NtGdiDdDDIGetProcessSchedulingPriorityClass")
#pragma comment(linker, "/export:NtGdiDdDDIGetResourcePresentPrivateDriverData=gdi32.NtGdiDdDDIGetResourcePresentPrivateDriverData")
#pragma comment(linker, "/export:NtGdiDdDDIGetRuntimeData=gdi32.NtGdiDdDDIGetRuntimeData")
#pragma comment(linker, "/export:NtGdiDdDDIGetScanLine=gdi32.NtGdiDdDDIGetScanLine")
#pragma comment(linker, "/export:NtGdiDdDDIGetSetSwapChainMetadata=gdi32.NtGdiDdDDIGetSetSwapChainMetadata")
#pragma comment(linker, "/export:NtGdiDdDDIGetSharedPrimaryHandle=gdi32.NtGdiDdDDIGetSharedPrimaryHandle")
#pragma comment(linker, "/export:NtGdiDdDDIGetSharedResourceAdapterLuid=gdi32.NtGdiDdDDIGetSharedResourceAdapterLuid")
#pragma comment(linker, "/export:NtGdiDdDDIInvalidateActiveVidPn=gdi32.NtGdiDdDDIInvalidateActiveVidPn")
#pragma comment(linker, "/export:NtGdiDdDDIInvalidateCache=gdi32.NtGdiDdDDIInvalidateCache")
#pragma comment(linker, "/export:NtGdiDdDDILock=gdi32.NtGdiDdDDILock")
#pragma comment(linker, "/export:NtGdiDdDDILock2=gdi32.NtGdiDdDDILock2")
#pragma comment(linker, "/export:NtGdiDdDDIMakeResident=gdi32.NtGdiDdDDIMakeResident")
#pragma comment(linker, "/export:NtGdiDdDDIMapGpuVirtualAddress=gdi32.NtGdiDdDDIMapGpuVirtualAddress")
#pragma comment(linker, "/export:NtGdiDdDDIMarkDeviceAsError=gdi32.NtGdiDdDDIMarkDeviceAsError")
#pragma comment(linker, "/export:NtGdiDdDDINetDispGetNextChunkInfo=gdi32.NtGdiDdDDINetDispGetNextChunkInfo")
#pragma comment(linker, "/export:NtGdiDdDDINetDispQueryMiracastDisplayDeviceStatus=gdi32.NtGdiDdDDINetDispQueryMiracastDisplayDeviceStatus")
#pragma comment(linker, "/export:NtGdiDdDDINetDispQueryMiracastDisplayDeviceSupport=gdi32.NtGdiDdDDINetDispQueryMiracastDisplayDeviceSupport")
#pragma comment(linker, "/export:NtGdiDdDDINetDispStartMiracastDisplayDevice=gdi32.NtGdiDdDDINetDispStartMiracastDisplayDevice")
#pragma comment(linker, "/export:NtGdiDdDDINetDispStopMiracastDisplayDevice=gdi32.NtGdiDdDDINetDispStopMiracastDisplayDevice")
#pragma comment(linker, "/export:NtGdiDdDDINetDispStopSessions=gdi32.NtGdiDdDDINetDispStopSessions")
#pragma comment(linker, "/export:NtGdiDdDDIOfferAllocations=gdi32.NtGdiDdDDIOfferAllocations")
#pragma comment(linker, "/export:NtGdiDdDDIOpenAdapterFromDeviceName=gdi32.NtGdiDdDDIOpenAdapterFromDeviceName")
#pragma comment(linker, "/export:NtGdiDdDDIOpenAdapterFromHdc=gdi32.NtGdiDdDDIOpenAdapterFromHdc")
#pragma comment(linker, "/export:NtGdiDdDDIOpenAdapterFromLuid=gdi32.NtGdiDdDDIOpenAdapterFromLuid")
#pragma comment(linker, "/export:NtGdiDdDDIOpenKeyedMutex=gdi32.NtGdiDdDDIOpenKeyedMutex")
#pragma comment(linker, "/export:NtGdiDdDDIOpenKeyedMutex2=gdi32.NtGdiDdDDIOpenKeyedMutex2")
#pragma comment(linker, "/export:NtGdiDdDDIOpenNtHandleFromName=gdi32.NtGdiDdDDIOpenNtHandleFromName")
#pragma comment(linker, "/export:NtGdiDdDDIOpenResource=gdi32.NtGdiDdDDIOpenResource")
#pragma comment(linker, "/export:NtGdiDdDDIOpenResourceFromNtHandle=gdi32.NtGdiDdDDIOpenResourceFromNtHandle")
#pragma comment(linker, "/export:NtGdiDdDDIOpenSwapChain=gdi32.NtGdiDdDDIOpenSwapChain")
#pragma comment(linker, "/export:NtGdiDdDDIOpenSyncObjectFromNtHandle=gdi32.NtGdiDdDDIOpenSyncObjectFromNtHandle")
#pragma comment(linker, "/export:NtGdiDdDDIOpenSyncObjectFromNtHandle2=gdi32.NtGdiDdDDIOpenSyncObjectFromNtHandle2")
#pragma comment(linker, "/export:NtGdiDdDDIOpenSyncObjectNtHandleFromName=gdi32.NtGdiDdDDIOpenSyncObjectNtHandleFromName")
#pragma comment(linker, "/export:NtGdiDdDDIOpenSynchronizationObject=gdi32.NtGdiDdDDIOpenSynchronizationObject")
#pragma comment(linker, "/export:NtGdiDdDDIOutputDuplGetFrameInfo=gdi32.NtGdiDdDDIOutputDuplGetFrameInfo")
#pragma comment(linker, "/export:NtGdiDdDDIOutputDuplGetMetaData=gdi32.NtGdiDdDDIOutputDuplGetMetaData")
#pragma comment(linker, "/export:NtGdiDdDDIOutputDuplGetPointerShapeData=gdi32.NtGdiDdDDIOutputDuplGetPointerShapeData")
#pragma comment(linker, "/export:NtGdiDdDDIOutputDuplPresent=gdi32.NtGdiDdDDIOutputDuplPresent")
#pragma comment(linker, "/export:NtGdiDdDDIOutputDuplReleaseFrame=gdi32.NtGdiDdDDIOutputDuplReleaseFrame")
#pragma comment(linker, "/export:NtGdiDdDDIPinDirectFlipResources=gdi32.NtGdiDdDDIPinDirectFlipResources")
#pragma comment(linker, "/export:NtGdiDdDDIPollDisplayChildren=gdi32.NtGdiDdDDIPollDisplayChildren")
#pragma comment(linker, "/export:NtGdiDdDDIPresent=gdi32.NtGdiDdDDIPresent")
#pragma comment(linker, "/export:NtGdiDdDDIPresentMultiPlaneOverlay=gdi32.NtGdiDdDDIPresentMultiPlaneOverlay")
#pragma comment(linker, "/export:NtGdiDdDDIPresentMultiPlaneOverlay2=gdi32.NtGdiDdDDIPresentMultiPlaneOverlay2")
#pragma comment(linker, "/export:NtGdiDdDDIPresentMultiPlaneOverlay3=gdi32.NtGdiDdDDIPresentMultiPlaneOverlay3")
#pragma comment(linker, "/export:NtGdiDdDDIQueryAdapterInfo=gdi32.NtGdiDdDDIQueryAdapterInfo")
#pragma comment(linker, "/export:NtGdiDdDDIQueryAllocationResidency=gdi32.NtGdiDdDDIQueryAllocationResidency")
#pragma comment(linker, "/export:NtGdiDdDDIQueryClockCalibration=gdi32.NtGdiDdDDIQueryClockCalibration")
#pragma comment(linker, "/export:NtGdiDdDDIQueryFSEBlock=gdi32.NtGdiDdDDIQueryFSEBlock")
#pragma comment(linker, "/export:NtGdiDdDDIQueryProcessOfferInfo=gdi32.NtGdiDdDDIQueryProcessOfferInfo")
#pragma comment(linker, "/export:NtGdiDdDDIQueryRemoteVidPnSourceFromGdiDisplayName=gdi32.NtGdiDdDDIQueryRemoteVidPnSourceFromGdiDisplayName")
#pragma comment(linker, "/export:NtGdiDdDDIQueryResourceInfo=gdi32.NtGdiDdDDIQueryResourceInfo")
#pragma comment(linker, "/export:NtGdiDdDDIQueryResourceInfoFromNtHandle=gdi32.NtGdiDdDDIQueryResourceInfoFromNtHandle")
#pragma comment(linker, "/export:NtGdiDdDDIQueryStatistics=gdi32.NtGdiDdDDIQueryStatistics")
#pragma comment(linker, "/export:NtGdiDdDDIQueryVidPnExclusiveOwnership=gdi32.NtGdiDdDDIQueryVidPnExclusiveOwnership")
#pragma comment(linker, "/export:NtGdiDdDDIQueryVideoMemoryInfo=gdi32.NtGdiDdDDIQueryVideoMemoryInfo")
#pragma comment(linker, "/export:NtGdiDdDDIReclaimAllocations=gdi32.NtGdiDdDDIReclaimAllocations")
#pragma comment(linker, "/export:NtGdiDdDDIReclaimAllocations2=gdi32.NtGdiDdDDIReclaimAllocations2")
#pragma comment(linker, "/export:NtGdiDdDDIReleaseKeyedMutex=gdi32.NtGdiDdDDIReleaseKeyedMutex")
#pragma comment(linker, "/export:NtGdiDdDDIReleaseKeyedMutex2=gdi32.NtGdiDdDDIReleaseKeyedMutex2")
#pragma comment(linker, "/export:NtGdiDdDDIReleaseProcessVidPnSourceOwners=gdi32.NtGdiDdDDIReleaseProcessVidPnSourceOwners")
#pragma comment(linker, "/export:NtGdiDdDDIReleaseSwapChain=gdi32.NtGdiDdDDIReleaseSwapChain")
#pragma comment(linker, "/export:NtGdiDdDDIRender=gdi32.NtGdiDdDDIRender")
#pragma comment(linker, "/export:NtGdiDdDDIReserveGpuVirtualAddress=gdi32.NtGdiDdDDIReserveGpuVirtualAddress")
#pragma comment(linker, "/export:NtGdiDdDDISetAllocationPriority=gdi32.NtGdiDdDDISetAllocationPriority")
#pragma comment(linker, "/export:NtGdiDdDDISetContextInProcessSchedulingPriority=gdi32.NtGdiDdDDISetContextInProcessSchedulingPriority")
#pragma comment(linker, "/export:NtGdiDdDDISetContextSchedulingPriority=gdi32.NtGdiDdDDISetContextSchedulingPriority")
#pragma comment(linker, "/export:NtGdiDdDDISetDisplayMode=gdi32.NtGdiDdDDISetDisplayMode")
#pragma comment(linker, "/export:NtGdiDdDDISetDisplayPrivateDriverFormat=gdi32.NtGdiDdDDISetDisplayPrivateDriverFormat")
#pragma comment(linker, "/export:NtGdiDdDDISetDodIndirectSwapchain=gdi32.NtGdiDdDDISetDodIndirectSwapchain")
#pragma comment(linker, "/export:NtGdiDdDDISetFSEBlock=gdi32.NtGdiDdDDISetFSEBlock")
#pragma comment(linker, "/export:NtGdiDdDDISetGammaRamp=gdi32.NtGdiDdDDISetGammaRamp")
#pragma comment(linker, "/export:NtGdiDdDDISetHwProtectionTeardownRecovery=gdi32.NtGdiDdDDISetHwProtectionTeardownRecovery")
#pragma comment(linker, "/export:NtGdiDdDDISetProcessSchedulingPriorityClass=gdi32.NtGdiDdDDISetProcessSchedulingPriorityClass")
#pragma comment(linker, "/export:NtGdiDdDDISetQueuedLimit=gdi32.NtGdiDdDDISetQueuedLimit")
#pragma comment(linker, "/export:NtGdiDdDDISetStablePowerState=gdi32.NtGdiDdDDISetStablePowerState")
#pragma comment(linker, "/export:NtGdiDdDDISetStereoEnabled=gdi32.NtGdiDdDDISetStereoEnabled")
#pragma comment(linker, "/export:NtGdiDdDDISetSyncRefreshCountWaitTarget=gdi32.NtGdiDdDDISetSyncRefreshCountWaitTarget")
#pragma comment(linker, "/export:NtGdiDdDDISetVidPnSourceHwProtection=gdi32.NtGdiDdDDISetVidPnSourceHwProtection")
#pragma comment(linker, "/export:NtGdiDdDDISetVidPnSourceOwner=gdi32.NtGdiDdDDISetVidPnSourceOwner")
#pragma comment(linker, "/export:NtGdiDdDDISetVidPnSourceOwner1=gdi32.NtGdiDdDDISetVidPnSourceOwner1")
#pragma comment(linker, "/export:NtGdiDdDDIShareObjects=gdi32.NtGdiDdDDIShareObjects")
#pragma comment(linker, "/export:NtGdiDdDDISharedPrimaryLockNotification=gdi32.NtGdiDdDDISharedPrimaryLockNotification")
#pragma comment(linker, "/export:NtGdiDdDDISharedPrimaryUnLockNotification=gdi32.NtGdiDdDDISharedPrimaryUnLockNotification")
#pragma comment(linker, "/export:NtGdiDdDDISignalSynchronizationObject=gdi32.NtGdiDdDDISignalSynchronizationObject")
#pragma comment(linker, "/export:NtGdiDdDDISignalSynchronizationObjectFromCpu=gdi32.NtGdiDdDDISignalSynchronizationObjectFromCpu")
#pragma comment(linker, "/export:NtGdiDdDDISignalSynchronizationObjectFromGpu=gdi32.NtGdiDdDDISignalSynchronizationObjectFromGpu")
#pragma comment(linker, "/export:NtGdiDdDDISignalSynchronizationObjectFromGpu2=gdi32.NtGdiDdDDISignalSynchronizationObjectFromGpu2")
#pragma comment(linker, "/export:NtGdiDdDDISubmitCommand=gdi32.NtGdiDdDDISubmitCommand")
#pragma comment(linker, "/export:NtGdiDdDDITrimProcessCommitment=gdi32.NtGdiDdDDITrimProcessCommitment")
#pragma comment(linker, "/export:NtGdiDdDDIUnlock=gdi32.NtGdiDdDDIUnlock")
#pragma comment(linker, "/export:NtGdiDdDDIUnlock2=gdi32.NtGdiDdDDIUnlock2")
#pragma comment(linker, "/export:NtGdiDdDDIUnpinDirectFlipResources=gdi32.NtGdiDdDDIUnpinDirectFlipResources")
#pragma comment(linker, "/export:NtGdiDdDDIUpdateAllocationProperty=gdi32.NtGdiDdDDIUpdateAllocationProperty")
#pragma comment(linker, "/export:NtGdiDdDDIUpdateGpuVirtualAddress=gdi32.NtGdiDdDDIUpdateGpuVirtualAddress")
#pragma comment(linker, "/export:NtGdiDdDDIUpdateOverlay=gdi32.NtGdiDdDDIUpdateOverlay")
#pragma comment(linker, "/export:NtGdiDdDDIWaitForIdle=gdi32.NtGdiDdDDIWaitForIdle")
#pragma comment(linker, "/export:NtGdiDdDDIWaitForSynchronizationObject=gdi32.NtGdiDdDDIWaitForSynchronizationObject")
#pragma comment(linker, "/export:NtGdiDdDDIWaitForSynchronizationObjectFromCpu=gdi32.NtGdiDdDDIWaitForSynchronizationObjectFromCpu")
#pragma comment(linker, "/export:NtGdiDdDDIWaitForSynchronizationObjectFromGpu=gdi32.NtGdiDdDDIWaitForSynchronizationObjectFromGpu")
#pragma comment(linker, "/export:NtGdiDdDDIWaitForVerticalBlankEvent=gdi32.NtGdiDdDDIWaitForVerticalBlankEvent")
#pragma comment(linker, "/export:NtGdiDdDDIWaitForVerticalBlankEvent2=gdi32.NtGdiDdDDIWaitForVerticalBlankEvent2")
#pragma comment(linker, "/export:NtGdiDdDeleteDirectDrawObject=gdi32.NtGdiDdDeleteDirectDrawObject")
#pragma comment(linker, "/export:NtGdiDdDeleteSurfaceObject=gdi32.NtGdiDdDeleteSurfaceObject")
#pragma comment(linker, "/export:NtGdiDdDestroyD3DBuffer=gdi32.NtGdiDdDestroyD3DBuffer")
#pragma comment(linker, "/export:NtGdiDdDestroyFullscreenSprite=gdi32.NtGdiDdDestroyFullscreenSprite")
#pragma comment(linker, "/export:NtGdiDdDestroyMoComp=gdi32.NtGdiDdDestroyMoComp")
#pragma comment(linker, "/export:NtGdiDdDestroySurface=gdi32.NtGdiDdDestroySurface")
#pragma comment(linker, "/export:NtGdiDdEndMoCompFrame=gdi32.NtGdiDdEndMoCompFrame")
#pragma comment(linker, "/export:NtGdiDdFlip=gdi32.NtGdiDdFlip")
#pragma comment(linker, "/export:NtGdiDdFlipToGDISurface=gdi32.NtGdiDdFlipToGDISurface")
#pragma comment(linker, "/export:NtGdiDdGetAvailDriverMemory=gdi32.NtGdiDdGetAvailDriverMemory")
#pragma comment(linker, "/export:NtGdiDdGetBltStatus=gdi32.NtGdiDdGetBltStatus")
#pragma comment(linker, "/export:NtGdiDdGetDC=gdi32.NtGdiDdGetDC")
#pragma comment(linker, "/export:NtGdiDdGetDriverInfo=gdi32.NtGdiDdGetDriverInfo")
#pragma comment(linker, "/export:NtGdiDdGetDriverState=gdi32.NtGdiDdGetDriverState")
#pragma comment(linker, "/export:NtGdiDdGetDxHandle=gdi32.NtGdiDdGetDxHandle")
#pragma comment(linker, "/export:NtGdiDdGetFlipStatus=gdi32.NtGdiDdGetFlipStatus")
#pragma comment(linker, "/export:NtGdiDdGetInternalMoCompInfo=gdi32.NtGdiDdGetInternalMoCompInfo")
#pragma comment(linker, "/export:NtGdiDdGetMoCompBuffInfo=gdi32.NtGdiDdGetMoCompBuffInfo")
#pragma comment(linker, "/export:NtGdiDdGetMoCompFormats=gdi32.NtGdiDdGetMoCompFormats")
#pragma comment(linker, "/export:NtGdiDdGetMoCompGuids=gdi32.NtGdiDdGetMoCompGuids")
#pragma comment(linker, "/export:NtGdiDdGetScanLine=gdi32.NtGdiDdGetScanLine")
#pragma comment(linker, "/export:NtGdiDdLock=gdi32.NtGdiDdLock")
#pragma comment(linker, "/export:NtGdiDdLockD3D=gdi32.NtGdiDdLockD3D")
#pragma comment(linker, "/export:NtGdiDdNotifyFullscreenSpriteUpdate=gdi32.NtGdiDdNotifyFullscreenSpriteUpdate")
#pragma comment(linker, "/export:NtGdiDdQueryDirectDrawObject=gdi32.NtGdiDdQueryDirectDrawObject")
#pragma comment(linker, "/export:NtGdiDdQueryMoCompStatus=gdi32.NtGdiDdQueryMoCompStatus")
#pragma comment(linker, "/export:NtGdiDdQueryVisRgnUniqueness=gdi32.NtGdiDdQueryVisRgnUniqueness")
#pragma comment(linker, "/export:NtGdiDdReenableDirectDrawObject=gdi32.NtGdiDdReenableDirectDrawObject")
#pragma comment(linker, "/export:NtGdiDdReleaseDC=gdi32.NtGdiDdReleaseDC")
#pragma comment(linker, "/export:NtGdiDdRenderMoComp=gdi32.NtGdiDdRenderMoComp")
#pragma comment(linker, "/export:NtGdiDdResetVisrgn=gdi32.NtGdiDdResetVisrgn")
#pragma comment(linker, "/export:NtGdiDdSetColorKey=gdi32.NtGdiDdSetColorKey")
#pragma comment(linker, "/export:NtGdiDdSetExclusiveMode=gdi32.NtGdiDdSetExclusiveMode")
#pragma comment(linker, "/export:NtGdiDdSetGammaRamp=gdi32.NtGdiDdSetGammaRamp")
#pragma comment(linker, "/export:NtGdiDdSetOverlayPosition=gdi32.NtGdiDdSetOverlayPosition")
#pragma comment(linker, "/export:NtGdiDdUnattachSurface=gdi32.NtGdiDdUnattachSurface")
#pragma comment(linker, "/export:NtGdiDdUnlock=gdi32.NtGdiDdUnlock")
#pragma comment(linker, "/export:NtGdiDdUnlockD3D=gdi32.NtGdiDdUnlockD3D")
#pragma comment(linker, "/export:NtGdiDdUpdateOverlay=gdi32.NtGdiDdUpdateOverlay")
#pragma comment(linker, "/export:NtGdiDdWaitForVerticalBlank=gdi32.NtGdiDdWaitForVerticalBlank")
#pragma comment(linker, "/export:NtGdiDeleteClientObj=gdi32.NtGdiDeleteClientObj")
#pragma comment(linker, "/export:NtGdiDeleteColorSpace=gdi32.NtGdiDeleteColorSpace")
#pragma comment(linker, "/export:NtGdiDeleteColorTransform=gdi32.NtGdiDeleteColorTransform")
#pragma comment(linker, "/export:NtGdiDeleteObjectApp=gdi32.NtGdiDeleteObjectApp")
#pragma comment(linker, "/export:NtGdiDescribePixelFormat=gdi32.NtGdiDescribePixelFormat")
#pragma comment(linker, "/export:NtGdiDestroyOPMProtectedOutput=gdi32.NtGdiDestroyOPMProtectedOutput")
#pragma comment(linker, "/export:NtGdiDestroyPhysicalMonitor=gdi32.NtGdiDestroyPhysicalMonitor")
#pragma comment(linker, "/export:NtGdiDoBanding=gdi32.NtGdiDoBanding")
#pragma comment(linker, "/export:NtGdiDoPalette=gdi32.NtGdiDoPalette")
#pragma comment(linker, "/export:NtGdiDrawEscape=gdi32.NtGdiDrawEscape")
#pragma comment(linker, "/export:NtGdiDrawStream=gdi32.NtGdiDrawStream")
#pragma comment(linker, "/export:NtGdiDvpAcquireNotification=gdi32.NtGdiDvpAcquireNotification")
#pragma comment(linker, "/export:NtGdiDvpCanCreateVideoPort=gdi32.NtGdiDvpCanCreateVideoPort")
#pragma comment(linker, "/export:NtGdiDvpColorControl=gdi32.NtGdiDvpColorControl")
#pragma comment(linker, "/export:NtGdiDvpCreateVideoPort=gdi32.NtGdiDvpCreateVideoPort")
#pragma comment(linker, "/export:NtGdiDvpDestroyVideoPort=gdi32.NtGdiDvpDestroyVideoPort")
#pragma comment(linker, "/export:NtGdiDvpFlipVideoPort=gdi32.NtGdiDvpFlipVideoPort")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortBandwidth=gdi32.NtGdiDvpGetVideoPortBandwidth")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortConnectInfo=gdi32.NtGdiDvpGetVideoPortConnectInfo")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortField=gdi32.NtGdiDvpGetVideoPortField")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortFlipStatus=gdi32.NtGdiDvpGetVideoPortFlipStatus")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortInputFormats=gdi32.NtGdiDvpGetVideoPortInputFormats")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortLine=gdi32.NtGdiDvpGetVideoPortLine")
#pragma comment(linker, "/export:NtGdiDvpGetVideoPortOutputFormats=gdi32.NtGdiDvpGetVideoPortOutputFormats")
#pragma comment(linker, "/export:NtGdiDvpGetVideoSignalStatus=gdi32.NtGdiDvpGetVideoSignalStatus")
#pragma comment(linker, "/export:NtGdiDvpReleaseNotification=gdi32.NtGdiDvpReleaseNotification")
#pragma comment(linker, "/export:NtGdiDvpUpdateVideoPort=gdi32.NtGdiDvpUpdateVideoPort")
#pragma comment(linker, "/export:NtGdiDvpWaitForVideoPortSync=gdi32.NtGdiDvpWaitForVideoPortSync")
#pragma comment(linker, "/export:NtGdiDwmCreatedBitmapRemotingOutput=gdi32.NtGdiDwmCreatedBitmapRemotingOutput")
#pragma comment(linker, "/export:NtGdiDxgGenericThunk=gdi32.NtGdiDxgGenericThunk")
#pragma comment(linker, "/export:NtGdiEllipse=gdi32.NtGdiEllipse")
#pragma comment(linker, "/export:NtGdiEnableEudc=gdi32.NtGdiEnableEudc")
#pragma comment(linker, "/export:NtGdiEndDoc=gdi32.NtGdiEndDoc")
#pragma comment(linker, "/export:NtGdiEndGdiRendering=gdi32.NtGdiEndGdiRendering")
#pragma comment(linker, "/export:NtGdiEndPage=gdi32.NtGdiEndPage")
#pragma comment(linker, "/export:NtGdiEndPath=gdi32.NtGdiEndPath")
#pragma comment(linker, "/export:NtGdiEngAlphaBlend=gdi32.NtGdiEngAlphaBlend")
#pragma comment(linker, "/export:NtGdiEngAssociateSurface=gdi32.NtGdiEngAssociateSurface")
#pragma comment(linker, "/export:NtGdiEngBitBlt=gdi32.NtGdiEngBitBlt")
#pragma comment(linker, "/export:NtGdiEngCheckAbort=gdi32.NtGdiEngCheckAbort")
#pragma comment(linker, "/export:NtGdiEngComputeGlyphSet=gdi32.NtGdiEngComputeGlyphSet")
#pragma comment(linker, "/export:NtGdiEngCopyBits=gdi32.NtGdiEngCopyBits")
#pragma comment(linker, "/export:NtGdiEngCreateBitmap=gdi32.NtGdiEngCreateBitmap")
#pragma comment(linker, "/export:NtGdiEngCreateClip=gdi32.NtGdiEngCreateClip")
#pragma comment(linker, "/export:NtGdiEngCreateDeviceBitmap=gdi32.NtGdiEngCreateDeviceBitmap")
#pragma comment(linker, "/export:NtGdiEngCreateDeviceSurface=gdi32.NtGdiEngCreateDeviceSurface")
#pragma comment(linker, "/export:NtGdiEngCreatePalette=gdi32.NtGdiEngCreatePalette")
#pragma comment(linker, "/export:NtGdiEngDeleteClip=gdi32.NtGdiEngDeleteClip")
#pragma comment(linker, "/export:NtGdiEngDeletePalette=gdi32.NtGdiEngDeletePalette")
#pragma comment(linker, "/export:NtGdiEngDeletePath=gdi32.NtGdiEngDeletePath")
#pragma comment(linker, "/export:NtGdiEngDeleteSurface=gdi32.NtGdiEngDeleteSurface")
#pragma comment(linker, "/export:NtGdiEngEraseSurface=gdi32.NtGdiEngEraseSurface")
#pragma comment(linker, "/export:NtGdiEngFillPath=gdi32.NtGdiEngFillPath")
#pragma comment(linker, "/export:NtGdiEngGradientFill=gdi32.NtGdiEngGradientFill")
#pragma comment(linker, "/export:NtGdiEngLineTo=gdi32.NtGdiEngLineTo")
#pragma comment(linker, "/export:NtGdiEngLockSurface=gdi32.NtGdiEngLockSurface")
#pragma comment(linker, "/export:NtGdiEngMarkBandingSurface=gdi32.NtGdiEngMarkBandingSurface")
#pragma comment(linker, "/export:NtGdiEngPaint=gdi32.NtGdiEngPaint")
#pragma comment(linker, "/export:NtGdiEngPlgBlt=gdi32.NtGdiEngPlgBlt")
#pragma comment(linker, "/export:NtGdiEngStretchBlt=gdi32.NtGdiEngStretchBlt")
#pragma comment(linker, "/export:NtGdiEngStretchBltROP=gdi32.NtGdiEngStretchBltROP")
#pragma comment(linker, "/export:NtGdiEngStrokeAndFillPath=gdi32.NtGdiEngStrokeAndFillPath")
#pragma comment(linker, "/export:NtGdiEngStrokePath=gdi32.NtGdiEngStrokePath")
#pragma comment(linker, "/export:NtGdiEngTextOut=gdi32.NtGdiEngTextOut")
#pragma comment(linker, "/export:NtGdiEngTransparentBlt=gdi32.NtGdiEngTransparentBlt")
#pragma comment(linker, "/export:NtGdiEngUnlockSurface=gdi32.NtGdiEngUnlockSurface")
#pragma comment(linker, "/export:NtGdiEnumFonts=gdi32.NtGdiEnumFonts")
#pragma comment(linker, "/export:NtGdiEnumObjects=gdi32.NtGdiEnumObjects")
#pragma comment(linker, "/export:NtGdiEqualRgn=gdi32.NtGdiEqualRgn")
#pragma comment(linker, "/export:NtGdiEudcLoadUnloadLink=gdi32.NtGdiEudcLoadUnloadLink")
#pragma comment(linker, "/export:NtGdiExcludeClipRect=gdi32.NtGdiExcludeClipRect")
#pragma comment(linker, "/export:NtGdiExtCreatePen=gdi32.NtGdiExtCreatePen")
#pragma comment(linker, "/export:NtGdiExtCreateRegion=gdi32.NtGdiExtCreateRegion")
#pragma comment(linker, "/export:NtGdiExtEscape=gdi32.NtGdiExtEscape")
#pragma comment(linker, "/export:NtGdiExtFloodFill=gdi32.NtGdiExtFloodFill")
#pragma comment(linker, "/export:NtGdiExtGetObjectW=gdi32.NtGdiExtGetObjectW")
#pragma comment(linker, "/export:NtGdiExtSelectClipRgn=gdi32.NtGdiExtSelectClipRgn")
#pragma comment(linker, "/export:NtGdiExtTextOutW=gdi32.NtGdiExtTextOutW")
#pragma comment(linker, "/export:NtGdiFONTOBJ_cGetAllGlyphHandles=gdi32.NtGdiFONTOBJ_cGetAllGlyphHandles")
#pragma comment(linker, "/export:NtGdiFONTOBJ_cGetGlyphs=gdi32.NtGdiFONTOBJ_cGetGlyphs")
#pragma comment(linker, "/export:NtGdiFONTOBJ_pQueryGlyphAttrs=gdi32.NtGdiFONTOBJ_pQueryGlyphAttrs")
#pragma comment(linker, "/export:NtGdiFONTOBJ_pfdg=gdi32.NtGdiFONTOBJ_pfdg")
#pragma comment(linker, "/export:NtGdiFONTOBJ_pifi=gdi32.NtGdiFONTOBJ_pifi")
#pragma comment(linker, "/export:NtGdiFONTOBJ_pvTrueTypeFontFile=gdi32.NtGdiFONTOBJ_pvTrueTypeFontFile")
#pragma comment(linker, "/export:NtGdiFONTOBJ_pxoGetXform=gdi32.NtGdiFONTOBJ_pxoGetXform")
#pragma comment(linker, "/export:NtGdiFONTOBJ_vGetInfo=gdi32.NtGdiFONTOBJ_vGetInfo")
#pragma comment(linker, "/export:NtGdiFillPath=gdi32.NtGdiFillPath")
#pragma comment(linker, "/export:NtGdiFillRgn=gdi32.NtGdiFillRgn")
#pragma comment(linker, "/export:NtGdiFlattenPath=gdi32.NtGdiFlattenPath")
#pragma comment(linker, "/export:NtGdiFlush=gdi32.NtGdiFlush")
#pragma comment(linker, "/export:NtGdiFontIsLinked=gdi32.NtGdiFontIsLinked")
#pragma comment(linker, "/export:NtGdiForceUFIMapping=gdi32.NtGdiForceUFIMapping")
#pragma comment(linker, "/export:NtGdiFrameRgn=gdi32.NtGdiFrameRgn")
#pragma comment(linker, "/export:NtGdiFullscreenControl=gdi32.NtGdiFullscreenControl")
#pragma comment(linker, "/export:NtGdiGetAndSetDCDword=gdi32.NtGdiGetAndSetDCDword")
#pragma comment(linker, "/export:NtGdiGetAppClipBox=gdi32.NtGdiGetAppClipBox")
#pragma comment(linker, "/export:NtGdiGetBitmapBits=gdi32.NtGdiGetBitmapBits")
#pragma comment(linker, "/export:NtGdiGetBitmapDimension=gdi32.NtGdiGetBitmapDimension")
#pragma comment(linker, "/export:NtGdiGetBoundsRect=gdi32.NtGdiGetBoundsRect")
#pragma comment(linker, "/export:NtGdiGetCOPPCompatibleOPMInformation=gdi32.NtGdiGetCOPPCompatibleOPMInformation")
#pragma comment(linker, "/export:NtGdiGetCertificate=gdi32.NtGdiGetCertificate")
#pragma comment(linker, "/export:NtGdiGetCertificateByHandle=gdi32.NtGdiGetCertificateByHandle")
#pragma comment(linker, "/export:NtGdiGetCertificateSize=gdi32.NtGdiGetCertificateSize")
#pragma comment(linker, "/export:NtGdiGetCertificateSizeByHandle=gdi32.NtGdiGetCertificateSizeByHandle")
#pragma comment(linker, "/export:NtGdiGetCharABCWidthsW=gdi32.NtGdiGetCharABCWidthsW")
#pragma comment(linker, "/export:NtGdiGetCharSet=gdi32.NtGdiGetCharSet")
#pragma comment(linker, "/export:NtGdiGetCharWidthInfo=gdi32.NtGdiGetCharWidthInfo")
#pragma comment(linker, "/export:NtGdiGetCharWidthW=gdi32.NtGdiGetCharWidthW")
#pragma comment(linker, "/export:NtGdiGetCharacterPlacementW=gdi32.NtGdiGetCharacterPlacementW")
#pragma comment(linker, "/export:NtGdiGetColorAdjustment=gdi32.NtGdiGetColorAdjustment")
#pragma comment(linker, "/export:NtGdiGetColorSpaceforBitmap=gdi32.NtGdiGetColorSpaceforBitmap")
#pragma comment(linker, "/export:NtGdiGetCurrentDpiInfo=gdi32.NtGdiGetCurrentDpiInfo")
#pragma comment(linker, "/export:NtGdiGetDCDword=gdi32.NtGdiGetDCDword")
#pragma comment(linker, "/export:NtGdiGetDCObject=gdi32.NtGdiGetDCObject")
#pragma comment(linker, "/export:NtGdiGetDCPoint=gdi32.NtGdiGetDCPoint")
#pragma comment(linker, "/export:NtGdiGetDCforBitmap=gdi32.NtGdiGetDCforBitmap")
#pragma comment(linker, "/export:NtGdiGetDIBitsInternal=gdi32.NtGdiGetDIBitsInternal")
#pragma comment(linker, "/export:NtGdiGetDeviceCaps=gdi32.NtGdiGetDeviceCaps")
#pragma comment(linker, "/export:NtGdiGetDeviceCapsAll=gdi32.NtGdiGetDeviceCapsAll")
#pragma comment(linker, "/export:NtGdiGetDeviceGammaRamp=gdi32.NtGdiGetDeviceGammaRamp")
#pragma comment(linker, "/export:NtGdiGetDeviceWidth=gdi32.NtGdiGetDeviceWidth")
#pragma comment(linker, "/export:NtGdiGetDhpdev=gdi32.NtGdiGetDhpdev")
#pragma comment(linker, "/export:NtGdiGetETM=gdi32.NtGdiGetETM")
#pragma comment(linker, "/export:NtGdiGetEmbUFI=gdi32.NtGdiGetEmbUFI")
#pragma comment(linker, "/export:NtGdiGetEmbedFonts=gdi32.NtGdiGetEmbedFonts")
#pragma comment(linker, "/export:NtGdiGetEntry=gdi32.NtGdiGetEntry")
#pragma comment(linker, "/export:NtGdiGetEudcTimeStampEx=gdi32.NtGdiGetEudcTimeStampEx")
#pragma comment(linker, "/export:NtGdiGetFontData=gdi32.NtGdiGetFontData")
#pragma comment(linker, "/export:NtGdiGetFontFileData=gdi32.NtGdiGetFontFileData")
#pragma comment(linker, "/export:NtGdiGetFontFileInfo=gdi32.NtGdiGetFontFileInfo")
#pragma comment(linker, "/export:NtGdiGetFontResourceInfoInternalW=gdi32.NtGdiGetFontResourceInfoInternalW")
#pragma comment(linker, "/export:NtGdiGetFontUnicodeRanges=gdi32.NtGdiGetFontUnicodeRanges")
#pragma comment(linker, "/export:NtGdiGetGlyphIndicesW=gdi32.NtGdiGetGlyphIndicesW")
#pragma comment(linker, "/export:NtGdiGetGlyphIndicesWInternal=gdi32.NtGdiGetGlyphIndicesWInternal")
#pragma comment(linker, "/export:NtGdiGetGlyphOutline=gdi32.NtGdiGetGlyphOutline")
#pragma comment(linker, "/export:NtGdiGetKerningPairs=gdi32.NtGdiGetKerningPairs")
#pragma comment(linker, "/export:NtGdiGetLinkedUFIs=gdi32.NtGdiGetLinkedUFIs")
#pragma comment(linker, "/export:NtGdiGetMiterLimit=gdi32.NtGdiGetMiterLimit")
#pragma comment(linker, "/export:NtGdiGetMonitorID=gdi32.NtGdiGetMonitorID")
#pragma comment(linker, "/export:NtGdiGetNearestColor=gdi32.NtGdiGetNearestColor")
#pragma comment(linker, "/export:NtGdiGetNearestPaletteIndex=gdi32.NtGdiGetNearestPaletteIndex")
#pragma comment(linker, "/export:NtGdiGetNumberOfPhysicalMonitors=gdi32.NtGdiGetNumberOfPhysicalMonitors")
#pragma comment(linker, "/export:NtGdiGetOPMInformation=gdi32.NtGdiGetOPMInformation")
#pragma comment(linker, "/export:NtGdiGetOPMRandomNumber=gdi32.NtGdiGetOPMRandomNumber")
#pragma comment(linker, "/export:NtGdiGetObjectBitmapHandle=gdi32.NtGdiGetObjectBitmapHandle")
#pragma comment(linker, "/export:NtGdiGetOutlineTextMetricsInternalW=gdi32.NtGdiGetOutlineTextMetricsInternalW")
#pragma comment(linker, "/export:NtGdiGetPath=gdi32.NtGdiGetPath")
#pragma comment(linker, "/export:NtGdiGetPerBandInfo=gdi32.NtGdiGetPerBandInfo")
#pragma comment(linker, "/export:NtGdiGetPhysicalMonitorDescription=gdi32.NtGdiGetPhysicalMonitorDescription")
#pragma comment(linker, "/export:NtGdiGetPhysicalMonitors=gdi32.NtGdiGetPhysicalMonitors")
#pragma comment(linker, "/export:NtGdiGetPixel=gdi32.NtGdiGetPixel")
#pragma comment(linker, "/export:NtGdiGetRandomRgn=gdi32.NtGdiGetRandomRgn")
#pragma comment(linker, "/export:NtGdiGetRasterizerCaps=gdi32.NtGdiGetRasterizerCaps")
#pragma comment(linker, "/export:NtGdiGetRealizationInfo=gdi32.NtGdiGetRealizationInfo")
#pragma comment(linker, "/export:NtGdiGetRegionData=gdi32.NtGdiGetRegionData")
#pragma comment(linker, "/export:NtGdiGetRgnBox=gdi32.NtGdiGetRgnBox")
#pragma comment(linker, "/export:NtGdiGetServerMetaFileBits=gdi32.NtGdiGetServerMetaFileBits")
#pragma comment(linker, "/export:NtGdiGetSpoolMessage=gdi32.NtGdiGetSpoolMessage")
#pragma comment(linker, "/export:NtGdiGetStats=gdi32.NtGdiGetStats")
#pragma comment(linker, "/export:NtGdiGetStringBitmapW=gdi32.NtGdiGetStringBitmapW")
#pragma comment(linker, "/export:NtGdiGetSuggestedOPMProtectedOutputArraySize=gdi32.NtGdiGetSuggestedOPMProtectedOutputArraySize")
#pragma comment(linker, "/export:NtGdiGetSystemPaletteUse=gdi32.NtGdiGetSystemPaletteUse")
#pragma comment(linker, "/export:NtGdiGetTextCharsetInfo=gdi32.NtGdiGetTextCharsetInfo")
#pragma comment(linker, "/export:NtGdiGetTextExtent=gdi32.NtGdiGetTextExtent")
#pragma comment(linker, "/export:NtGdiGetTextExtentExW=gdi32.NtGdiGetTextExtentExW")
#pragma comment(linker, "/export:NtGdiGetTextFaceW=gdi32.NtGdiGetTextFaceW")
#pragma comment(linker, "/export:NtGdiGetTextMetricsW=gdi32.NtGdiGetTextMetricsW")
#pragma comment(linker, "/export:NtGdiGetTransform=gdi32.NtGdiGetTransform")
#pragma comment(linker, "/export:NtGdiGetUFI=gdi32.NtGdiGetUFI")
#pragma comment(linker, "/export:NtGdiGetUFIPathname=gdi32.NtGdiGetUFIPathname")
#pragma comment(linker, "/export:NtGdiGetWidthTable=gdi32.NtGdiGetWidthTable")
#pragma comment(linker, "/export:NtGdiGradientFill=gdi32.NtGdiGradientFill")
#pragma comment(linker, "/export:NtGdiHLSurfGetInformation=gdi32.NtGdiHLSurfGetInformation")
#pragma comment(linker, "/export:NtGdiHLSurfSetInformation=gdi32.NtGdiHLSurfSetInformation")
#pragma comment(linker, "/export:NtGdiHT_Get8BPPFormatPalette=gdi32.NtGdiHT_Get8BPPFormatPalette")
#pragma comment(linker, "/export:NtGdiHT_Get8BPPMaskPalette=gdi32.NtGdiHT_Get8BPPMaskPalette")
#pragma comment(linker, "/export:NtGdiHfontCreate=gdi32.NtGdiHfontCreate")
#pragma comment(linker, "/export:NtGdiIcmBrushInfo=gdi32.NtGdiIcmBrushInfo")
#pragma comment(linker, "/export:NtGdiInit=gdi32.NtGdiInit")
#pragma comment(linker, "/export:NtGdiInitSpool=gdi32.NtGdiInitSpool")
#pragma comment(linker, "/export:NtGdiIntersectClipRect=gdi32.NtGdiIntersectClipRect")
#pragma comment(linker, "/export:NtGdiInvertRgn=gdi32.NtGdiInvertRgn")
#pragma comment(linker, "/export:NtGdiLineTo=gdi32.NtGdiLineTo")
#pragma comment(linker, "/export:NtGdiMakeFontDir=gdi32.NtGdiMakeFontDir")
#pragma comment(linker, "/export:NtGdiMakeInfoDC=gdi32.NtGdiMakeInfoDC")
#pragma comment(linker, "/export:NtGdiMakeObjectUnXferable=gdi32.NtGdiMakeObjectUnXferable")
#pragma comment(linker, "/export:NtGdiMakeObjectXferable=gdi32.NtGdiMakeObjectXferable")
#pragma comment(linker, "/export:NtGdiMaskBlt=gdi32.NtGdiMaskBlt")
#pragma comment(linker, "/export:NtGdiMirrorWindowOrg=gdi32.NtGdiMirrorWindowOrg")
#pragma comment(linker, "/export:NtGdiModifyWorldTransform=gdi32.NtGdiModifyWorldTransform")
#pragma comment(linker, "/export:NtGdiMonoBitmap=gdi32.NtGdiMonoBitmap")
#pragma comment(linker, "/export:NtGdiMoveTo=gdi32.NtGdiMoveTo")
#pragma comment(linker, "/export:NtGdiOffsetClipRgn=gdi32.NtGdiOffsetClipRgn")
#pragma comment(linker, "/export:NtGdiOffsetRgn=gdi32.NtGdiOffsetRgn")
#pragma comment(linker, "/export:NtGdiOpenDCW=gdi32.NtGdiOpenDCW")
#pragma comment(linker, "/export:NtGdiPATHOBJ_bEnum=gdi32.NtGdiPATHOBJ_bEnum")
#pragma comment(linker, "/export:NtGdiPATHOBJ_bEnumClipLines=gdi32.NtGdiPATHOBJ_bEnumClipLines")
#pragma comment(linker, "/export:NtGdiPATHOBJ_vEnumStart=gdi32.NtGdiPATHOBJ_vEnumStart")
#pragma comment(linker, "/export:NtGdiPATHOBJ_vEnumStartClipLines=gdi32.NtGdiPATHOBJ_vEnumStartClipLines")
#pragma comment(linker, "/export:NtGdiPATHOBJ_vGetBounds=gdi32.NtGdiPATHOBJ_vGetBounds")
#pragma comment(linker, "/export:NtGdiPatBlt=gdi32.NtGdiPatBlt")
#pragma comment(linker, "/export:NtGdiPathToRegion=gdi32.NtGdiPathToRegion")
#pragma comment(linker, "/export:NtGdiPlgBlt=gdi32.NtGdiPlgBlt")
#pragma comment(linker, "/export:NtGdiPolyDraw=gdi32.NtGdiPolyDraw")
#pragma comment(linker, "/export:NtGdiPolyPatBlt=gdi32.NtGdiPolyPatBlt")
#pragma comment(linker, "/export:NtGdiPolyPolyDraw=gdi32.NtGdiPolyPolyDraw")
#pragma comment(linker, "/export:NtGdiPolyTextOutW=gdi32.NtGdiPolyTextOutW")
#pragma comment(linker, "/export:NtGdiPtInRegion=gdi32.NtGdiPtInRegion")
#pragma comment(linker, "/export:NtGdiPtVisible=gdi32.NtGdiPtVisible")
#pragma comment(linker, "/export:NtGdiQueryFontAssocInfo=gdi32.NtGdiQueryFontAssocInfo")
#pragma comment(linker, "/export:NtGdiQueryFonts=gdi32.NtGdiQueryFonts")
#pragma comment(linker, "/export:NtGdiRectInRegion=gdi32.NtGdiRectInRegion")
#pragma comment(linker, "/export:NtGdiRectVisible=gdi32.NtGdiRectVisible")
#pragma comment(linker, "/export:NtGdiRectangle=gdi32.NtGdiRectangle")
#pragma comment(linker, "/export:NtGdiRemoveFontMemResourceEx=gdi32.NtGdiRemoveFontMemResourceEx")
#pragma comment(linker, "/export:NtGdiRemoveFontResourceW=gdi32.NtGdiRemoveFontResourceW")
#pragma comment(linker, "/export:NtGdiRemoveMergeFont=gdi32.NtGdiRemoveMergeFont")
#pragma comment(linker, "/export:NtGdiResetDC=gdi32.NtGdiResetDC")
#pragma comment(linker, "/export:NtGdiResizePalette=gdi32.NtGdiResizePalette")
#pragma comment(linker, "/export:NtGdiRestoreDC=gdi32.NtGdiRestoreDC")
#pragma comment(linker, "/export:NtGdiRoundRect=gdi32.NtGdiRoundRect")
#pragma comment(linker, "/export:NtGdiSTROBJ_bEnum=gdi32.NtGdiSTROBJ_bEnum")
#pragma comment(linker, "/export:NtGdiSTROBJ_bEnumPositionsOnly=gdi32.NtGdiSTROBJ_bEnumPositionsOnly")
#pragma comment(linker, "/export:NtGdiSTROBJ_bGetAdvanceWidths=gdi32.NtGdiSTROBJ_bGetAdvanceWidths")
#pragma comment(linker, "/export:NtGdiSTROBJ_dwGetCodePage=gdi32.NtGdiSTROBJ_dwGetCodePage")
#pragma comment(linker, "/export:NtGdiSTROBJ_vEnumStart=gdi32.NtGdiSTROBJ_vEnumStart")
#pragma comment(linker, "/export:NtGdiSaveDC=gdi32.NtGdiSaveDC")
#pragma comment(linker, "/export:NtGdiScaleViewportExtEx=gdi32.NtGdiScaleViewportExtEx")
#pragma comment(linker, "/export:NtGdiScaleWindowExtEx=gdi32.NtGdiScaleWindowExtEx")
#pragma comment(linker, "/export:NtGdiSelectBitmap=gdi32.NtGdiSelectBitmap")
#pragma comment(linker, "/export:NtGdiSelectBrush=gdi32.NtGdiSelectBrush")
#pragma comment(linker, "/export:NtGdiSelectClipPath=gdi32.NtGdiSelectClipPath")
#pragma comment(linker, "/export:NtGdiSelectFont=gdi32.NtGdiSelectFont")
#pragma comment(linker, "/export:NtGdiSelectPen=gdi32.NtGdiSelectPen")
#pragma comment(linker, "/export:NtGdiSetBitmapAttributes=gdi32.NtGdiSetBitmapAttributes")
#pragma comment(linker, "/export:NtGdiSetBitmapBits=gdi32.NtGdiSetBitmapBits")
#pragma comment(linker, "/export:NtGdiSetBitmapDimension=gdi32.NtGdiSetBitmapDimension")
#pragma comment(linker, "/export:NtGdiSetBoundsRect=gdi32.NtGdiSetBoundsRect")
#pragma comment(linker, "/export:NtGdiSetBrushAttributes=gdi32.NtGdiSetBrushAttributes")
#pragma comment(linker, "/export:NtGdiSetBrushOrg=gdi32.NtGdiSetBrushOrg")
#pragma comment(linker, "/export:NtGdiSetColorAdjustment=gdi32.NtGdiSetColorAdjustment")
#pragma comment(linker, "/export:NtGdiSetColorSpace=gdi32.NtGdiSetColorSpace")
#pragma comment(linker, "/export:NtGdiSetDIBitsToDeviceInternal=gdi32.NtGdiSetDIBitsToDeviceInternal")
#pragma comment(linker, "/export:NtGdiSetDeviceGammaRamp=gdi32.NtGdiSetDeviceGammaRamp")
#pragma comment(linker, "/export:NtGdiSetFontEnumeration=gdi32.NtGdiSetFontEnumeration")
#pragma comment(linker, "/export:NtGdiSetFontXform=gdi32.NtGdiSetFontXform")
#pragma comment(linker, "/export:NtGdiSetIcmMode=gdi32.NtGdiSetIcmMode")
#pragma comment(linker, "/export:NtGdiSetLayout=gdi32.NtGdiSetLayout")
#pragma comment(linker, "/export:NtGdiSetLinkedUFIs=gdi32.NtGdiSetLinkedUFIs")
#pragma comment(linker, "/export:NtGdiSetMagicColors=gdi32.NtGdiSetMagicColors")
#pragma comment(linker, "/export:NtGdiSetMetaRgn=gdi32.NtGdiSetMetaRgn")
#pragma comment(linker, "/export:NtGdiSetMiterLimit=gdi32.NtGdiSetMiterLimit")
#pragma comment(linker, "/export:NtGdiSetOPMSigningKeyAndSequenceNumbers=gdi32.NtGdiSetOPMSigningKeyAndSequenceNumbers")
#pragma comment(linker, "/export:NtGdiSetPUMPDOBJ=gdi32.NtGdiSetPUMPDOBJ")
#pragma comment(linker, "/export:NtGdiSetPixel=gdi32.NtGdiSetPixel")
#pragma comment(linker, "/export:NtGdiSetPixelFormat=gdi32.NtGdiSetPixelFormat")
#pragma comment(linker, "/export:NtGdiSetRectRgn=gdi32.NtGdiSetRectRgn")
#pragma comment(linker, "/export:NtGdiSetSizeDevice=gdi32.NtGdiSetSizeDevice")
#pragma comment(linker, "/export:NtGdiSetSystemPaletteUse=gdi32.NtGdiSetSystemPaletteUse")
#pragma comment(linker, "/export:NtGdiSetTextJustification=gdi32.NtGdiSetTextJustification")
#pragma comment(linker, "/export:NtGdiSetUMPDSandboxState=gdi32.NtGdiSetUMPDSandboxState")
#pragma comment(linker, "/export:NtGdiSetVirtualResolution=gdi32.NtGdiSetVirtualResolution")
#pragma comment(linker, "/export:NtGdiStartDoc=gdi32.NtGdiStartDoc")
#pragma comment(linker, "/export:NtGdiStartPage=gdi32.NtGdiStartPage")
#pragma comment(linker, "/export:NtGdiStretchBlt=gdi32.NtGdiStretchBlt")
#pragma comment(linker, "/export:NtGdiStretchDIBitsInternal=gdi32.NtGdiStretchDIBitsInternal")
#pragma comment(linker, "/export:NtGdiStrokeAndFillPath=gdi32.NtGdiStrokeAndFillPath")
#pragma comment(linker, "/export:NtGdiStrokePath=gdi32.NtGdiStrokePath")
#pragma comment(linker, "/export:NtGdiSwapBuffers=gdi32.NtGdiSwapBuffers")
#pragma comment(linker, "/export:NtGdiTransformPoints=gdi32.NtGdiTransformPoints")
#pragma comment(linker, "/export:NtGdiTransparentBlt=gdi32.NtGdiTransparentBlt")
#pragma comment(linker, "/export:NtGdiUMPDEngFreeUserMem=gdi32.NtGdiUMPDEngFreeUserMem")
#pragma comment(linker, "/export:NtGdiUnloadPrinterDriver=gdi32.NtGdiUnloadPrinterDriver")
#pragma comment(linker, "/export:NtGdiUnmapMemFont=gdi32.NtGdiUnmapMemFont")
#pragma comment(linker, "/export:NtGdiUnrealizeObject=gdi32.NtGdiUnrealizeObject")
#pragma comment(linker, "/export:NtGdiUpdateColors=gdi32.NtGdiUpdateColors")
#pragma comment(linker, "/export:NtGdiUpdateTransform=gdi32.NtGdiUpdateTransform")
#pragma comment(linker, "/export:NtGdiWidenPath=gdi32.NtGdiWidenPath")
#pragma comment(linker, "/export:NtGdiXFORMOBJ_bApplyXform=gdi32.NtGdiXFORMOBJ_bApplyXform")
#pragma comment(linker, "/export:NtGdiXFORMOBJ_iGetXform=gdi32.NtGdiXFORMOBJ_iGetXform")
#pragma comment(linker, "/export:NtGdiXLATEOBJ_cGetPalette=gdi32.NtGdiXLATEOBJ_cGetPalette")
#pragma comment(linker, "/export:NtGdiXLATEOBJ_hGetColorTransform=gdi32.NtGdiXLATEOBJ_hGetColorTransform")
#pragma comment(linker, "/export:NtGdiXLATEOBJ_iXlate=gdi32.NtGdiXLATEOBJ_iXlate")
#pragma comment(linker, "/export:OffsetClipRgn=gdi32.OffsetClipRgn") // XP
#pragma comment(linker, "/export:OffsetRgn=gdi32.OffsetRgn") // XP
#pragma comment(linker, "/export:OffsetViewportOrgEx=gdi32.OffsetViewportOrgEx") // XP
#pragma comment(linker, "/export:OffsetWindowOrgEx=gdi32.OffsetWindowOrgEx") // XP
#pragma comment(linker, "/export:PATHOBJ_bEnum=gdi32.PATHOBJ_bEnum") // XP
#pragma comment(linker, "/export:PATHOBJ_bEnumClipLines=gdi32.PATHOBJ_bEnumClipLines") // XP
#pragma comment(linker, "/export:PATHOBJ_vEnumStart=gdi32.PATHOBJ_vEnumStart") // XP
#pragma comment(linker, "/export:PATHOBJ_vEnumStartClipLines=gdi32.PATHOBJ_vEnumStartClipLines") // XP
#pragma comment(linker, "/export:PATHOBJ_vGetBounds=gdi32.PATHOBJ_vGetBounds") // XP
#pragma comment(linker, "/export:PaintRgn=gdi32.PaintRgn") // XP
#pragma comment(linker, "/export:PatBlt=gdi32.PatBlt") // XP
#pragma comment(linker, "/export:PathToRegion=gdi32.PathToRegion") // XP
#pragma comment(linker, "/export:Pie=gdi32.Pie") // XP
#pragma comment(linker, "/export:PieStub=gdi32.PieStub")
#pragma comment(linker, "/export:PlayEnhMetaFile=gdi32.PlayEnhMetaFile") // XP
#pragma comment(linker, "/export:PlayEnhMetaFileRecord=gdi32.PlayEnhMetaFileRecord") // XP
#pragma comment(linker, "/export:PlayMetaFile=gdi32.PlayMetaFile") // XP
#pragma comment(linker, "/export:PlayMetaFileRecord=gdi32.PlayMetaFileRecord") // XP
#pragma comment(linker, "/export:PlgBlt=gdi32.PlgBlt") // XP
#pragma comment(linker, "/export:PolyBezier=gdi32.PolyBezier") // XP
#pragma comment(linker, "/export:PolyBezierStub=gdi32.PolyBezierStub")
#pragma comment(linker, "/export:PolyBezierTo=gdi32.PolyBezierTo") // XP
#pragma comment(linker, "/export:PolyBezierToImpl=gdi32.PolyBezierToImpl")
#pragma comment(linker, "/export:PolyDraw=gdi32.PolyDraw") // XP
#pragma comment(linker, "/export:PolyDrawImpl=gdi32.PolyDrawImpl")
#pragma comment(linker, "/export:PolyPatBlt=gdi32.PolyPatBlt") // XP
#pragma comment(linker, "/export:PolyPolygon=gdi32.PolyPolygon") // XP
#pragma comment(linker, "/export:PolyPolygonStub=gdi32.PolyPolygonStub")
#pragma comment(linker, "/export:PolyPolyline=gdi32.PolyPolyline") // XP
#pragma comment(linker, "/export:PolyTextOutA=gdi32.PolyTextOutA") // XP
#pragma comment(linker, "/export:PolyTextOutW=gdi32.PolyTextOutW") // XP
#pragma comment(linker, "/export:Polygon=gdi32.Polygon") // XP
#pragma comment(linker, "/export:PolygonStub=gdi32.PolygonStub")
#pragma comment(linker, "/export:Polyline=gdi32.Polyline") // XP
#pragma comment(linker, "/export:PolylineTo=gdi32.PolylineTo") // XP
#pragma comment(linker, "/export:PolylineToImpl=gdi32.PolylineToImpl")
#pragma comment(linker, "/export:PtInRegion=gdi32.PtInRegion") // XP
#pragma comment(linker, "/export:PtVisible=gdi32.PtVisible") // XP
#pragma comment(linker, "/export:QueryFontAssocStatus=gdi32.QueryFontAssocStatus") // XP
#pragma comment(linker, "/export:RealizePalette=gdi32.RealizePalette") // XP
#pragma comment(linker, "/export:RectInRegion=gdi32.RectInRegion") // XP
#pragma comment(linker, "/export:RectVisible=gdi32.RectVisible") // XP
#pragma comment(linker, "/export:Rectangle=gdi32.Rectangle") // XP
#pragma comment(linker, "/export:RectangleImpl=gdi32.RectangleImpl")
#pragma comment(linker, "/export:RemoveFontMemResourceEx=gdi32.RemoveFontMemResourceEx") // XP
#pragma comment(linker, "/export:RemoveFontResourceA=gdi32.RemoveFontResourceA") // XP
#pragma comment(linker, "/export:RemoveFontResourceAStub=gdi32.RemoveFontResourceAStub")
#pragma comment(linker, "/export:RemoveFontResourceExA=gdi32.RemoveFontResourceExA") // XP
#pragma comment(linker, "/export:RemoveFontResourceExW=gdi32.RemoveFontResourceExW") // XP
#pragma comment(linker, "/export:RemoveFontResourceTracking=gdi32.RemoveFontResourceTracking") // XP
#pragma comment(linker, "/export:RemoveFontResourceW=gdi32.RemoveFontResourceW") // XP
#pragma comment(linker, "/export:RemoveFontResourceWImpl=gdi32.RemoveFontResourceWImpl")
#pragma comment(linker, "/export:ResetDCA=gdi32.ResetDCA") // XP
#pragma comment(linker, "/export:ResetDCW=gdi32.ResetDCW") // XP
#pragma comment(linker, "/export:ResetDCWImpl=gdi32.ResetDCWImpl")
#pragma comment(linker, "/export:ResizePalette=gdi32.ResizePalette") // XP
#pragma comment(linker, "/export:ResizePaletteStub=gdi32.ResizePaletteStub")
#pragma comment(linker, "/export:RestoreDC=gdi32.RestoreDC") // XP
#pragma comment(linker, "/export:RestoreDCImpl=gdi32.RestoreDCImpl")
#pragma comment(linker, "/export:RoundRect=gdi32.RoundRect") // XP
#pragma comment(linker, "/export:RoundRectStub=gdi32.RoundRectStub")
#pragma comment(linker, "/export:STROBJ_bEnum=gdi32.STROBJ_bEnum") // XP
#pragma comment(linker, "/export:STROBJ_bEnumPositionsOnly=gdi32.STROBJ_bEnumPositionsOnly") // XP
#pragma comment(linker, "/export:STROBJ_bGetAdvanceWidths=gdi32.STROBJ_bGetAdvanceWidths") // XP
#pragma comment(linker, "/export:STROBJ_dwGetCodePage=gdi32.STROBJ_dwGetCodePage") // XP
#pragma comment(linker, "/export:STROBJ_vEnumStart=gdi32.STROBJ_vEnumStart") // XP
#pragma comment(linker, "/export:SaveDC=gdi32.SaveDC") // XP
#pragma comment(linker, "/export:SaveDCImpl=gdi32.SaveDCImpl")
#pragma comment(linker, "/export:ScaleViewportExtEx=gdi32.ScaleViewportExtEx") // XP
#pragma comment(linker, "/export:ScaleWindowExtEx=gdi32.ScaleWindowExtEx") // XP
#pragma comment(linker, "/export:ScriptApplyDigitSubstitution=gdi32.ScriptApplyDigitSubstitution")
#pragma comment(linker, "/export:ScriptApplyLogicalWidth=gdi32.ScriptApplyLogicalWidth")
#pragma comment(linker, "/export:ScriptBreak=gdi32.ScriptBreak")
#pragma comment(linker, "/export:ScriptCPtoX=gdi32.ScriptCPtoX")
#pragma comment(linker, "/export:ScriptCacheGetHeight=gdi32.ScriptCacheGetHeight")
#pragma comment(linker, "/export:ScriptFreeCache=gdi32.ScriptFreeCache")
#pragma comment(linker, "/export:ScriptGetCMap=gdi32.ScriptGetCMap")
#pragma comment(linker, "/export:ScriptGetFontAlternateGlyphs=gdi32.ScriptGetFontAlternateGlyphs")
#pragma comment(linker, "/export:ScriptGetFontFeatureTags=gdi32.ScriptGetFontFeatureTags")
#pragma comment(linker, "/export:ScriptGetFontLanguageTags=gdi32.ScriptGetFontLanguageTags")
#pragma comment(linker, "/export:ScriptGetFontProperties=gdi32.ScriptGetFontProperties")
#pragma comment(linker, "/export:ScriptGetFontScriptTags=gdi32.ScriptGetFontScriptTags")
#pragma comment(linker, "/export:ScriptGetGlyphABCWidth=gdi32.ScriptGetGlyphABCWidth")
#pragma comment(linker, "/export:ScriptGetLogicalWidths=gdi32.ScriptGetLogicalWidths")
#pragma comment(linker, "/export:ScriptGetProperties=gdi32.ScriptGetProperties")
#pragma comment(linker, "/export:ScriptIsComplex=gdi32.ScriptIsComplex")
#pragma comment(linker, "/export:ScriptItemize=gdi32.ScriptItemize")
#pragma comment(linker, "/export:ScriptItemizeOpenType=gdi32.ScriptItemizeOpenType")
#pragma comment(linker, "/export:ScriptJustify=gdi32.ScriptJustify")
#pragma comment(linker, "/export:ScriptLayout=gdi32.ScriptLayout")
#pragma comment(linker, "/export:ScriptPlace=gdi32.ScriptPlace")
#pragma comment(linker, "/export:ScriptPlaceOpenType=gdi32.ScriptPlaceOpenType")
#pragma comment(linker, "/export:ScriptPositionSingleGlyph=gdi32.ScriptPositionSingleGlyph")
#pragma comment(linker, "/export:ScriptRecordDigitSubstitution=gdi32.ScriptRecordDigitSubstitution")
#pragma comment(linker, "/export:ScriptShape=gdi32.ScriptShape")
#pragma comment(linker, "/export:ScriptShapeOpenType=gdi32.ScriptShapeOpenType")
#pragma comment(linker, "/export:ScriptStringAnalyse=gdi32.ScriptStringAnalyse")
#pragma comment(linker, "/export:ScriptStringCPtoX=gdi32.ScriptStringCPtoX")
#pragma comment(linker, "/export:ScriptStringFree=gdi32.ScriptStringFree")
#pragma comment(linker, "/export:ScriptStringGetLogicalWidths=gdi32.ScriptStringGetLogicalWidths")
#pragma comment(linker, "/export:ScriptStringGetOrder=gdi32.ScriptStringGetOrder")
#pragma comment(linker, "/export:ScriptStringOut=gdi32.ScriptStringOut")
#pragma comment(linker, "/export:ScriptStringValidate=gdi32.ScriptStringValidate")
#pragma comment(linker, "/export:ScriptStringXtoCP=gdi32.ScriptStringXtoCP")
#pragma comment(linker, "/export:ScriptString_pLogAttr=gdi32.ScriptString_pLogAttr")
#pragma comment(linker, "/export:ScriptString_pSize=gdi32.ScriptString_pSize")
#pragma comment(linker, "/export:ScriptString_pcOutChars=gdi32.ScriptString_pcOutChars")
#pragma comment(linker, "/export:ScriptSubstituteSingleGlyph=gdi32.ScriptSubstituteSingleGlyph")
#pragma comment(linker, "/export:ScriptTextOut=gdi32.ScriptTextOut")
#pragma comment(linker, "/export:ScriptXtoCP=gdi32.ScriptXtoCP")
#pragma comment(linker, "/export:SelectBrushLocal=gdi32.SelectBrushLocal") // XP
#pragma comment(linker, "/export:SelectClipPath=gdi32.SelectClipPath") // XP
#pragma comment(linker, "/export:SelectClipPathImpl=gdi32.SelectClipPathImpl")
#pragma comment(linker, "/export:SelectClipRgn=gdi32.SelectClipRgn") // XP
#pragma comment(linker, "/export:SelectClipRgnImpl=gdi32.SelectClipRgnImpl")
#pragma comment(linker, "/export:SelectFontLocal=gdi32.SelectFontLocal") // XP
#pragma comment(linker, "/export:SelectObject=gdi32.SelectObject") // XP
#pragma comment(linker, "/export:SelectObjectImpl=gdi32.SelectObjectImpl")
#pragma comment(linker, "/export:SelectPalette=gdi32.SelectPalette") // XP
#pragma comment(linker, "/export:SetAbortProc=gdi32.SetAbortProc") // XP
#pragma comment(linker, "/export:SetArcDirection=gdi32.SetArcDirection") // XP
#pragma comment(linker, "/export:SetBitmapAttributes=gdi32.SetBitmapAttributes") // XP
#pragma comment(linker, "/export:SetBitmapBits=gdi32.SetBitmapBits") // XP
#pragma comment(linker, "/export:SetBitmapBitsStub=gdi32.SetBitmapBitsStub")
#pragma comment(linker, "/export:SetBitmapDimensionEx=gdi32.SetBitmapDimensionEx") // XP
#pragma comment(linker, "/export:SetBkColor=gdi32.SetBkColor") // XP
#pragma comment(linker, "/export:SetBkMode=gdi32.SetBkMode") // XP
#pragma comment(linker, "/export:SetBkModeImpl=gdi32.SetBkModeImpl")
#pragma comment(linker, "/export:SetBoundsRect=gdi32.SetBoundsRect") // XP
#pragma comment(linker, "/export:SetBrushAttributes=gdi32.SetBrushAttributes") // XP
#pragma comment(linker, "/export:SetBrushOrgEx=gdi32.SetBrushOrgEx") // XP
#pragma comment(linker, "/export:SetColorAdjustment=gdi32.SetColorAdjustment") // XP
#pragma comment(linker, "/export:SetColorSpace=gdi32.SetColorSpace") // XP
#pragma comment(linker, "/export:SetDCBrushColor=gdi32.SetDCBrushColor") // XP
#pragma comment(linker, "/export:SetDCPenColor=gdi32.SetDCPenColor") // XP
#pragma comment(linker, "/export:SetDIBColorTable=gdi32.SetDIBColorTable") // XP
#pragma comment(linker, "/export:SetDIBits=gdi32.SetDIBits") // XP
#pragma comment(linker, "/export:SetDIBitsToDevice=gdi32.SetDIBitsToDevice") // XP
#pragma comment(linker, "/export:SetDeviceGammaRamp=gdi32.SetDeviceGammaRamp") // XP
#pragma comment(linker, "/export:SetEnhMetaFileBits=gdi32.SetEnhMetaFileBits") // XP
#pragma comment(linker, "/export:SetFontEnumeration=gdi32.SetFontEnumeration") // XP
#pragma comment(linker, "/export:SetGraphicsMode=gdi32.SetGraphicsMode") // XP
#pragma comment(linker, "/export:SetICMMode=gdi32.SetICMMode") // XP
#pragma comment(linker, "/export:SetICMModeImpl=gdi32.SetICMModeImpl")
#pragma comment(linker, "/export:SetICMProfileA=gdi32.SetICMProfileA") // XP
#pragma comment(linker, "/export:SetICMProfileW=gdi32.SetICMProfileW") // XP
#pragma comment(linker, "/export:SetLayout=gdi32.SetLayout") // XP
#pragma comment(linker, "/export:SetLayoutWidth=gdi32.SetLayoutWidth") // XP
#pragma comment(linker, "/export:SetMagicColors=gdi32.SetMagicColors") // XP
#pragma comment(linker, "/export:SetMapMode=gdi32.SetMapMode") // XP
#pragma comment(linker, "/export:SetMapperFlags=gdi32.SetMapperFlags") // XP
#pragma comment(linker, "/export:SetMetaFileBitsEx=gdi32.SetMetaFileBitsEx") // XP
#pragma comment(linker, "/export:SetMetaRgn=gdi32.SetMetaRgn") // XP
#pragma comment(linker, "/export:SetMiterLimit=gdi32.SetMiterLimit") // XP
#pragma comment(linker, "/export:SetMiterLimitImpl=gdi32.SetMiterLimitImpl")
#pragma comment(linker, "/export:SetOPMSigningKeyAndSequenceNumbers=gdi32.SetOPMSigningKeyAndSequenceNumbers")
#pragma comment(linker, "/export:SetPaletteEntries=gdi32.SetPaletteEntries") // XP
#pragma comment(linker, "/export:SetPaletteEntriesStub=gdi32.SetPaletteEntriesStub")
#pragma comment(linker, "/export:SetPixel=gdi32.SetPixel") // XP
#pragma comment(linker, "/export:SetPixelFormat=gdi32.SetPixelFormat") // XP
#pragma comment(linker, "/export:SetPixelV=gdi32.SetPixelV") // XP
#pragma comment(linker, "/export:SetPolyFillMode=gdi32.SetPolyFillMode") // XP
#pragma comment(linker, "/export:SetPolyFillModeImpl=gdi32.SetPolyFillModeImpl")
#pragma comment(linker, "/export:SetROP2=gdi32.SetROP2") // XP
#pragma comment(linker, "/export:SetROP2Stub=gdi32.SetROP2Stub")
#pragma comment(linker, "/export:SetRectRgn=gdi32.SetRectRgn") // XP
#pragma comment(linker, "/export:SetRelAbs=gdi32.SetRelAbs") // XP
#pragma comment(linker, "/export:SetStretchBltMode=gdi32.SetStretchBltMode") // XP
#pragma comment(linker, "/export:SetStretchBltModeImpl=gdi32.SetStretchBltModeImpl")
#pragma comment(linker, "/export:SetSystemPaletteUse=gdi32.SetSystemPaletteUse") // XP
#pragma comment(linker, "/export:SetTextAlign=gdi32.SetTextAlign") // XP
#pragma comment(linker, "/export:SetTextAlignImpl=gdi32.SetTextAlignImpl")
#pragma comment(linker, "/export:SetTextCharacterExtra=gdi32.SetTextCharacterExtra") // XP
#pragma comment(linker, "/export:SetTextColor=gdi32.SetTextColor") // XP
#pragma comment(linker, "/export:SetTextColorImpl=gdi32.SetTextColorImpl")
#pragma comment(linker, "/export:SetTextJustification=gdi32.SetTextJustification") // XP
#pragma comment(linker, "/export:SetViewportExtEx=gdi32.SetViewportExtEx") // XP
#pragma comment(linker, "/export:SetViewportOrgEx=gdi32.SetViewportOrgEx") // XP
#pragma comment(linker, "/export:SetVirtualResolution=gdi32.SetVirtualResolution") // XP
#pragma comment(linker, "/export:SetWinMetaFileBits=gdi32.SetWinMetaFileBits") // XP
#pragma comment(linker, "/export:SetWindowExtEx=gdi32.SetWindowExtEx") // XP
#pragma comment(linker, "/export:SetWindowOrgEx=gdi32.SetWindowOrgEx") // XP
#pragma comment(linker, "/export:SetWorldTransform=gdi32.SetWorldTransform") // XP
#pragma comment(linker, "/export:SetWorldTransformImpl=gdi32.SetWorldTransformImpl")
#pragma comment(linker, "/export:StartDocA=gdi32.StartDocA") // XP
#pragma comment(linker, "/export:StartDocW=gdi32.StartDocW") // XP
#pragma comment(linker, "/export:StartDocWImpl=gdi32.StartDocWImpl")
#pragma comment(linker, "/export:StartFormPage=gdi32.StartFormPage") // XP
#pragma comment(linker, "/export:StartPage=gdi32.StartPage") // XP
#pragma comment(linker, "/export:StartPageImpl=gdi32.StartPageImpl")
#pragma comment(linker, "/export:StretchBlt=gdi32.StretchBlt") // XP
#pragma comment(linker, "/export:StretchDIBits=gdi32.StretchDIBits") // XP
#pragma comment(linker, "/export:StretchDIBitsImpl=gdi32.StretchDIBitsImpl")
#pragma comment(linker, "/export:StrokeAndFillPath=gdi32.StrokeAndFillPath") // XP
#pragma comment(linker, "/export:StrokePath=gdi32.StrokePath") // XP
#pragma comment(linker, "/export:StrokePathImpl=gdi32.StrokePathImpl")
#pragma comment(linker, "/export:SwapBuffers=gdi32.SwapBuffers") // XP
#pragma comment(linker, "/export:TextOutA=gdi32.TextOutA") // XP
#pragma comment(linker, "/export:TextOutAStub=gdi32.TextOutAStub")
#pragma comment(linker, "/export:TextOutW=gdi32.TextOutW") // XP
#pragma comment(linker, "/export:TranslateCharsetInfo=gdi32.TranslateCharsetInfo") // XP
#pragma comment(linker, "/export:UnloadNetworkFonts=gdi32.UnloadNetworkFonts") // XP
#pragma comment(linker, "/export:UnloadUserModePrinterDriver=gdi32.UnloadUserModePrinterDriver")
#pragma comment(linker, "/export:UnrealizeObject=gdi32.UnrealizeObject") // XP
#pragma comment(linker, "/export:UnrealizeObjectStub=gdi32.UnrealizeObjectStub")
#pragma comment(linker, "/export:UpdateColors=gdi32.UpdateColors") // XP
#pragma comment(linker, "/export:UpdateColorsStub=gdi32.UpdateColorsStub")
#pragma comment(linker, "/export:UpdateICMRegKeyA=gdi32.UpdateICMRegKeyA") // XP
#pragma comment(linker, "/export:UpdateICMRegKeyW=gdi32.UpdateICMRegKeyW") // XP
#pragma comment(linker, "/export:UspAllocCache=gdi32.UspAllocCache")
#pragma comment(linker, "/export:UspAllocTemp=gdi32.UspAllocTemp")
#pragma comment(linker, "/export:UspFreeMem=gdi32.UspFreeMem")
#pragma comment(linker, "/export:WidenPath=gdi32.WidenPath") // XP
#pragma comment(linker, "/export:XFORMOBJ_bApplyXform=gdi32.XFORMOBJ_bApplyXform") // XP
#pragma comment(linker, "/export:XFORMOBJ_iGetXform=gdi32.XFORMOBJ_iGetXform") // XP
#pragma comment(linker, "/export:XLATEOBJ_cGetPalette=gdi32.XLATEOBJ_cGetPalette") // XP
#pragma comment(linker, "/export:XLATEOBJ_hGetColorTransform=gdi32.XLATEOBJ_hGetColorTransform") // XP
#pragma comment(linker, "/export:XLATEOBJ_iXlate=gdi32.XLATEOBJ_iXlate") // XP
#pragma comment(linker, "/export:XLATEOBJ_piVector=gdi32.XLATEOBJ_piVector") // XP
#pragma comment(linker, "/export:bCreateDCW=gdi32.bCreateDCW")
#pragma comment(linker, "/export:bDeleteLDC=gdi32.bDeleteLDC")
#pragma comment(linker, "/export:bInitSystemAndFontsDirectoriesW=gdi32.bInitSystemAndFontsDirectoriesW") // XP
#pragma comment(linker, "/export:bMakePathNameW=gdi32.bMakePathNameW") // XP
#pragma comment(linker, "/export:cGetTTFFromFOT=gdi32.cGetTTFFromFOT") // XP
#pragma comment(linker, "/export:fpClosePrinter=gdi32.fpClosePrinter")
#pragma comment(linker, "/export:ftsWordBreak=gdi32.ftsWordBreak")
#pragma comment(linker, "/export:gMaxGdiHandleCount=gdi32.gMaxGdiHandleCount")
#pragma comment(linker, "/export:gW32PID=gdi32.gW32PID")
#pragma comment(linker, "/export:gdiPlaySpoolStream=gdi32.gdiPlaySpoolStream") // XP
#pragma comment(linker, "/export:ghICM=gdi32.ghICM")
#pragma comment(linker, "/export:hGetPEBHandle=gdi32.hGetPEBHandle")
#pragma comment(linker, "/export:hdcCreateDCW=gdi32.hdcCreateDCW")
#pragma comment(linker, "/export:pGdiDevCaps=gdi32.pGdiDevCaps")
#pragma comment(linker, "/export:pGdiSharedHandleTable=gdi32.pGdiSharedHandleTable")
#pragma comment(linker, "/export:pGdiSharedMemory=gdi32.pGdiSharedMemory")
#pragma comment(linker, "/export:pldcGet=gdi32.pldcGet")
#pragma comment(linker, "/export:plinkGet=gdi32.plinkGet")
#pragma comment(linker, "/export:semDxTrimNotification=gdi32.semDxTrimNotification")
#pragma comment(linker, "/export:vDeleteLOCALFONT=gdi32.vDeleteLOCALFONT")
#pragma comment(linker, "/export:vFreeUFIHashTable=gdi32.vFreeUFIHashTable")
#pragma comment(linker, "/export:vSetPldc=gdi32.vSetPldc")
